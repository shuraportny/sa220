ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART2_initVar
  20              		.bss
  21              		.type	UART2_initVar, %object
  22              		.size	UART2_initVar, 1
  23              	UART2_initVar:
  24 0000 00       		.space	1
  25              		.global	UART2_errorStatus
  26              		.type	UART2_errorStatus, %object
  27              		.size	UART2_errorStatus, 1
  28              	UART2_errorStatus:
  29 0001 00       		.space	1
  30              		.comm	UART2_rxBuffer,8,4
  31              		.global	UART2_rxBufferRead
  32              		.type	UART2_rxBufferRead, %object
  33              		.size	UART2_rxBufferRead, 1
  34              	UART2_rxBufferRead:
  35 0002 00       		.space	1
  36              		.global	UART2_rxBufferWrite
  37              		.type	UART2_rxBufferWrite, %object
  38              		.size	UART2_rxBufferWrite, 1
  39              	UART2_rxBufferWrite:
  40 0003 00       		.space	1
  41              		.global	UART2_rxBufferLoopDetect
  42              		.type	UART2_rxBufferLoopDetect, %object
  43              		.size	UART2_rxBufferLoopDetect, 1
  44              	UART2_rxBufferLoopDetect:
  45 0004 00       		.space	1
  46              		.global	UART2_rxBufferOverflow
  47              		.type	UART2_rxBufferOverflow, %object
  48              		.size	UART2_rxBufferOverflow, 1
  49              	UART2_rxBufferOverflow:
  50 0005 00       		.space	1
  51              		.section	.text.UART2_Start,"ax",%progbits
  52              		.align	2
  53              		.global	UART2_Start
  54              		.code	16
  55              		.thumb_func
  56              		.type	UART2_Start, %function
  57              	UART2_Start:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 2


  58              	.LFB2:
  59              		.file 1 "Generated_Source\\PSoC4\\UART2.c"
   1:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART2.c **** * File Name: UART2.c
   3:Generated_Source\PSoC4/UART2.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART2.c **** *
   5:Generated_Source\PSoC4/UART2.c **** * Description:
   6:Generated_Source\PSoC4/UART2.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/UART2.c **** *
   8:Generated_Source\PSoC4/UART2.c **** * Note:
   9:Generated_Source\PSoC4/UART2.c **** *
  10:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
  11:Generated_Source\PSoC4/UART2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/UART2.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/UART2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/UART2.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/UART2.c **** 
  17:Generated_Source\PSoC4/UART2.c **** #include "UART2.h"
  18:Generated_Source\PSoC4/UART2.c **** #if (UART2_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/UART2.c ****     #include "UART2_IntClock.h"
  20:Generated_Source\PSoC4/UART2.c **** #endif /* End UART2_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/UART2.c **** 
  22:Generated_Source\PSoC4/UART2.c **** 
  23:Generated_Source\PSoC4/UART2.c **** /***************************************
  24:Generated_Source\PSoC4/UART2.c **** * Global data allocation
  25:Generated_Source\PSoC4/UART2.c **** ***************************************/
  26:Generated_Source\PSoC4/UART2.c **** 
  27:Generated_Source\PSoC4/UART2.c **** uint8 UART2_initVar = 0u;
  28:Generated_Source\PSoC4/UART2.c **** 
  29:Generated_Source\PSoC4/UART2.c **** #if (UART2_TX_INTERRUPT_ENABLED && UART2_TX_ENABLED)
  30:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_txBuffer[UART2_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_txBufferRead = 0u;
  32:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/UART2.c **** #endif /* (UART2_TX_INTERRUPT_ENABLED && UART2_TX_ENABLED) */
  34:Generated_Source\PSoC4/UART2.c **** 
  35:Generated_Source\PSoC4/UART2.c **** #if (UART2_RX_INTERRUPT_ENABLED && (UART2_RX_ENABLED || UART2_HD_ENABLED))
  36:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_errorStatus = 0u;
  37:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_rxBuffer[UART2_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/UART2.c ****     volatile uint8 UART2_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/UART2.c ****         volatile uint8 UART2_rxAddressMode = UART2_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/UART2.c ****         volatile uint8 UART2_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/UART2.c **** #endif /* (UART2_RX_INTERRUPT_ENABLED && (UART2_RX_ENABLED || UART2_HD_ENABLED)) */
  47:Generated_Source\PSoC4/UART2.c **** 
  48:Generated_Source\PSoC4/UART2.c **** 
  49:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_Start
  51:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
  52:Generated_Source\PSoC4/UART2.c **** *
  53:Generated_Source\PSoC4/UART2.c **** * Summary:
  54:Generated_Source\PSoC4/UART2.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/UART2.c **** *  UART2_Start() sets the initVar variable, calls the
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 3


  56:Generated_Source\PSoC4/UART2.c **** *  UART2_Init() function, and then calls the
  57:Generated_Source\PSoC4/UART2.c **** *  UART2_Enable() function.
  58:Generated_Source\PSoC4/UART2.c **** *
  59:Generated_Source\PSoC4/UART2.c **** * Parameters:
  60:Generated_Source\PSoC4/UART2.c **** *  None.
  61:Generated_Source\PSoC4/UART2.c **** *
  62:Generated_Source\PSoC4/UART2.c **** * Return:
  63:Generated_Source\PSoC4/UART2.c **** *  None.
  64:Generated_Source\PSoC4/UART2.c **** *
  65:Generated_Source\PSoC4/UART2.c **** * Global variables:
  66:Generated_Source\PSoC4/UART2.c **** *  The UART2_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/UART2.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/UART2.c **** *  and set to one (1u) the first time UART2_Start() is called. This
  69:Generated_Source\PSoC4/UART2.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/UART2.c **** *  subsequent calls to the UART2_Start() routine.
  71:Generated_Source\PSoC4/UART2.c **** *
  72:Generated_Source\PSoC4/UART2.c **** * Reentrant:
  73:Generated_Source\PSoC4/UART2.c **** *  No.
  74:Generated_Source\PSoC4/UART2.c **** *
  75:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/UART2.c **** void UART2_Start(void) 
  77:Generated_Source\PSoC4/UART2.c **** {
  60              		.loc 1 77 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC4/UART2.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/UART2.c ****     if(UART2_initVar == 0u)
  70              		.loc 1 79 0
  71 0004 064B     		ldr	r3, .L3
  72 0006 1B78     		ldrb	r3, [r3]
  73 0008 002B     		cmp	r3, #0
  74 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC4/UART2.c ****     {
  81:Generated_Source\PSoC4/UART2.c ****         UART2_Init();
  75              		.loc 1 81 0
  76 000c FFF7FEFF 		bl	UART2_Init
  82:Generated_Source\PSoC4/UART2.c ****         UART2_initVar = 1u;
  77              		.loc 1 82 0
  78 0010 034B     		ldr	r3, .L3
  79 0012 0122     		movs	r2, #1
  80 0014 1A70     		strb	r2, [r3]
  81              	.L2:
  83:Generated_Source\PSoC4/UART2.c ****     }
  84:Generated_Source\PSoC4/UART2.c **** 
  85:Generated_Source\PSoC4/UART2.c ****     UART2_Enable();
  82              		.loc 1 85 0
  83 0016 FFF7FEFF 		bl	UART2_Enable
  86:Generated_Source\PSoC4/UART2.c **** }
  84              		.loc 1 86 0
  85 001a C046     		nop
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 4


  86 001c BD46     		mov	sp, r7
  87              		@ sp needed
  88 001e 80BD     		pop	{r7, pc}
  89              	.L4:
  90              		.align	2
  91              	.L3:
  92 0020 00000000 		.word	UART2_initVar
  93              		.cfi_endproc
  94              	.LFE2:
  95              		.size	UART2_Start, .-UART2_Start
  96              		.section	.text.UART2_Init,"ax",%progbits
  97              		.align	2
  98              		.global	UART2_Init
  99              		.code	16
 100              		.thumb_func
 101              		.type	UART2_Init, %function
 102              	UART2_Init:
 103              	.LFB3:
  87:Generated_Source\PSoC4/UART2.c **** 
  88:Generated_Source\PSoC4/UART2.c **** 
  89:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_Init
  91:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
  92:Generated_Source\PSoC4/UART2.c **** *
  93:Generated_Source\PSoC4/UART2.c **** * Summary:
  94:Generated_Source\PSoC4/UART2.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/UART2.c **** *  dialog settings. It is not necessary to call UART2_Init() because
  96:Generated_Source\PSoC4/UART2.c **** *  the UART2_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/UART2.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/UART2.c **** *
  99:Generated_Source\PSoC4/UART2.c **** * Parameters:
 100:Generated_Source\PSoC4/UART2.c **** *  None.
 101:Generated_Source\PSoC4/UART2.c **** *
 102:Generated_Source\PSoC4/UART2.c **** * Return:
 103:Generated_Source\PSoC4/UART2.c **** *  None.
 104:Generated_Source\PSoC4/UART2.c **** *
 105:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/UART2.c **** void UART2_Init(void) 
 107:Generated_Source\PSoC4/UART2.c **** {
 104              		.loc 1 107 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC4/UART2.c ****     #if(UART2_RX_ENABLED || UART2_HD_ENABLED)
 109:Generated_Source\PSoC4/UART2.c **** 
 110:Generated_Source\PSoC4/UART2.c ****         #if (UART2_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/UART2.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/UART2.c ****             (void) CyIntSetVector(UART2_RX_VECT_NUM, &UART2_RXISR);
 114              		.loc 1 112 0
 115 0004 0E4B     		ldr	r3, .L6
 116 0006 1900     		movs	r1, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 5


 117 0008 0320     		movs	r0, #3
 118 000a FFF7FEFF 		bl	CyIntSetVector
 113:Generated_Source\PSoC4/UART2.c ****             CyIntSetPriority(UART2_RX_VECT_NUM, UART2_RX_PRIOR_NUM);
 119              		.loc 1 113 0
 120 000e 0321     		movs	r1, #3
 121 0010 0320     		movs	r0, #3
 122 0012 FFF7FEFF 		bl	CyIntSetPriority
 114:Generated_Source\PSoC4/UART2.c ****             UART2_errorStatus = 0u;
 123              		.loc 1 114 0
 124 0016 0B4B     		ldr	r3, .L6+4
 125 0018 0022     		movs	r2, #0
 126 001a 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/UART2.c **** 
 117:Generated_Source\PSoC4/UART2.c ****         #if (UART2_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/UART2.c ****             UART2_SetRxAddressMode(UART2_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/UART2.c ****             UART2_SetRxAddress1(UART2_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/UART2.c ****             UART2_SetRxAddress2(UART2_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/UART2.c **** 
 123:Generated_Source\PSoC4/UART2.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/UART2.c ****         UART2_RXBITCTR_PERIOD_REG = UART2_RXBITCTR_INIT;
 127              		.loc 1 124 0
 128 001c 0A4B     		ldr	r3, .L6+8
 129 001e 7222     		movs	r2, #114
 130 0020 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/UART2.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/UART2.c ****         UART2_RXSTATUS_MASK_REG  = UART2_INIT_RX_INTERRUPTS_MASK;
 131              		.loc 1 126 0
 132 0022 0A4B     		ldr	r3, .L6+12
 133 0024 2022     		movs	r2, #32
 134 0026 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC4/UART2.c ****     #endif /* End UART2_RX_ENABLED || UART2_HD_ENABLED*/
 128:Generated_Source\PSoC4/UART2.c **** 
 129:Generated_Source\PSoC4/UART2.c ****     #if(UART2_TX_ENABLED)
 130:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/UART2.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/UART2.c ****             (void) CyIntSetVector(UART2_TX_VECT_NUM, &UART2_TXISR);
 133:Generated_Source\PSoC4/UART2.c ****             CyIntSetPriority(UART2_TX_VECT_NUM, UART2_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/UART2.c **** 
 136:Generated_Source\PSoC4/UART2.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/UART2.c ****             UART2_TXBITCLKGEN_CTR_REG = UART2_BIT_CENTER;
 135              		.loc 1 138 0
 136 0028 094B     		ldr	r3, .L6+16
 137 002a 0622     		movs	r2, #6
 138 002c 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/UART2.c ****             UART2_TXBITCLKTX_COMPLETE_REG = ((UART2_NUMBER_OF_DATA_BITS +
 139              		.loc 1 139 0
 140 002e 094B     		ldr	r3, .L6+20
 141 0030 4722     		movs	r2, #71
 142 0032 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC4/UART2.c ****                         UART2_NUMBER_OF_START_BIT) * UART2_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/UART2.c ****         #else
 142:Generated_Source\PSoC4/UART2.c ****             UART2_TXBITCTR_PERIOD_REG = ((UART2_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/UART2.c ****                         UART2_NUMBER_OF_START_BIT) * UART2_OVER_SAMPLE_8) - 1u;
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 6


 144:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/UART2.c **** 
 146:Generated_Source\PSoC4/UART2.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/UART2.c ****             UART2_TXSTATUS_MASK_REG = UART2_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/UART2.c ****         #else
 150:Generated_Source\PSoC4/UART2.c ****             UART2_TXSTATUS_MASK_REG = UART2_INIT_TX_INTERRUPTS_MASK;
 143              		.loc 1 150 0
 144 0034 084B     		ldr	r3, .L6+24
 145 0036 0022     		movs	r2, #0
 146 0038 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC4/UART2.c ****         #endif /*End UART2_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/UART2.c **** 
 153:Generated_Source\PSoC4/UART2.c ****     #endif /* End UART2_TX_ENABLED */
 154:Generated_Source\PSoC4/UART2.c **** 
 155:Generated_Source\PSoC4/UART2.c ****     #if(UART2_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/UART2.c ****         UART2_WriteControlRegister( \
 157:Generated_Source\PSoC4/UART2.c ****             (UART2_ReadControlRegister() & (uint8)~UART2_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/UART2.c ****             (uint8)(UART2_PARITY_TYPE << UART2_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/UART2.c ****     #endif /* End UART2_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/UART2.c **** }
 147              		.loc 1 160 0
 148 003a C046     		nop
 149 003c BD46     		mov	sp, r7
 150              		@ sp needed
 151 003e 80BD     		pop	{r7, pc}
 152              	.L7:
 153              		.align	2
 154              	.L6:
 155 0040 00000000 		.word	UART2_RXISR
 156 0044 00000000 		.word	UART2_errorStatus
 157 0048 81000F40 		.word	1074724993
 158 004c 80000F40 		.word	1074724992
 159 0050 23000F40 		.word	1074724899
 160 0054 33000F40 		.word	1074724915
 161 0058 82000F40 		.word	1074724994
 162              		.cfi_endproc
 163              	.LFE3:
 164              		.size	UART2_Init, .-UART2_Init
 165              		.section	.text.UART2_Enable,"ax",%progbits
 166              		.align	2
 167              		.global	UART2_Enable
 168              		.code	16
 169              		.thumb_func
 170              		.type	UART2_Enable, %function
 171              	UART2_Enable:
 172              	.LFB4:
 161:Generated_Source\PSoC4/UART2.c **** 
 162:Generated_Source\PSoC4/UART2.c **** 
 163:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_Enable
 165:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
 166:Generated_Source\PSoC4/UART2.c **** *
 167:Generated_Source\PSoC4/UART2.c **** * Summary:
 168:Generated_Source\PSoC4/UART2.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/UART2.c **** *  to call UART2_Enable() because the UART2_Start() API
 170:Generated_Source\PSoC4/UART2.c **** *  calls this function, which is the preferred method to begin component
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 7


 171:Generated_Source\PSoC4/UART2.c **** *  operation.
 172:Generated_Source\PSoC4/UART2.c **** 
 173:Generated_Source\PSoC4/UART2.c **** * Parameters:
 174:Generated_Source\PSoC4/UART2.c **** *  None.
 175:Generated_Source\PSoC4/UART2.c **** *
 176:Generated_Source\PSoC4/UART2.c **** * Return:
 177:Generated_Source\PSoC4/UART2.c **** *  None.
 178:Generated_Source\PSoC4/UART2.c **** *
 179:Generated_Source\PSoC4/UART2.c **** * Global Variables:
 180:Generated_Source\PSoC4/UART2.c **** *  UART2_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/UART2.c **** *
 182:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/UART2.c **** void UART2_Enable(void) 
 184:Generated_Source\PSoC4/UART2.c **** {
 173              		.loc 1 184 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 90B5     		push	{r4, r7, lr}
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC4/UART2.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/UART2.c ****     enableInterrupts = CyEnterCriticalSection();
 186              		.loc 1 186 0
 187 0006 FC1D     		adds	r4, r7, #7
 188 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 189 000c 0300     		movs	r3, r0
 190 000e 2370     		strb	r3, [r4]
 187:Generated_Source\PSoC4/UART2.c **** 
 188:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_ENABLED || UART2_HD_ENABLED)
 189:Generated_Source\PSoC4/UART2.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/UART2.c ****         UART2_RXBITCTR_CONTROL_REG |= UART2_CNTR_ENABLE;
 191              		.loc 1 190 0
 192 0010 134A     		ldr	r2, .L9
 193 0012 134B     		ldr	r3, .L9
 194 0014 1B78     		ldrb	r3, [r3]
 195 0016 DBB2     		uxtb	r3, r3
 196 0018 2021     		movs	r1, #32
 197 001a 0B43     		orrs	r3, r1
 198 001c DBB2     		uxtb	r3, r3
 199 001e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/UART2.c **** 
 192:Generated_Source\PSoC4/UART2.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/UART2.c ****         UART2_RXSTATUS_ACTL_REG  |= UART2_INT_ENABLE;
 200              		.loc 1 193 0
 201 0020 104A     		ldr	r2, .L9+4
 202 0022 104B     		ldr	r3, .L9+4
 203 0024 1B78     		ldrb	r3, [r3]
 204 0026 DBB2     		uxtb	r3, r3
 205 0028 1021     		movs	r1, #16
 206 002a 0B43     		orrs	r3, r1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 8


 207 002c DBB2     		uxtb	r3, r3
 208 002e 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC4/UART2.c **** 
 195:Generated_Source\PSoC4/UART2.c ****         #if (UART2_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/UART2.c ****             UART2_EnableRxInt();
 209              		.loc 1 196 0
 210 0030 0320     		movs	r0, #3
 211 0032 FFF7FEFF 		bl	CyIntEnable
 197:Generated_Source\PSoC4/UART2.c **** 
 198:Generated_Source\PSoC4/UART2.c ****             #if (UART2_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/UART2.c ****                 UART2_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/UART2.c ****             #endif /* (UART2_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_ENABLED || UART2_HD_ENABLED) */
 203:Generated_Source\PSoC4/UART2.c **** 
 204:Generated_Source\PSoC4/UART2.c ****     #if(UART2_TX_ENABLED)
 205:Generated_Source\PSoC4/UART2.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/UART2.c ****         #if(!UART2_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/UART2.c ****             UART2_TXBITCTR_CONTROL_REG |= UART2_CNTR_ENABLE;
 208:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/UART2.c **** 
 210:Generated_Source\PSoC4/UART2.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/UART2.c ****         UART2_TXSTATUS_ACTL_REG |= UART2_INT_ENABLE;
 212              		.loc 1 211 0
 213 0036 0C4A     		ldr	r2, .L9+8
 214 0038 0B4B     		ldr	r3, .L9+8
 215 003a 1B78     		ldrb	r3, [r3]
 216 003c DBB2     		uxtb	r3, r3
 217 003e 1021     		movs	r1, #16
 218 0040 0B43     		orrs	r3, r1
 219 0042 DBB2     		uxtb	r3, r3
 220 0044 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/UART2.c ****             UART2_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/UART2.c ****             UART2_EnableTxInt();
 215:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/UART2.c ****      #endif /* (UART2_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/UART2.c **** 
 218:Generated_Source\PSoC4/UART2.c ****     #if (UART2_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/UART2.c ****         UART2_IntClock_Start();  /* Enable the clock */
 221              		.loc 1 219 0
 222 0046 FF20     		movs	r0, #255
 223 0048 FFF7FEFF 		bl	UART2_IntClock_StartEx
 220:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/UART2.c **** 
 222:Generated_Source\PSoC4/UART2.c ****     CyExitCriticalSection(enableInterrupts);
 224              		.loc 1 222 0
 225 004c FB1D     		adds	r3, r7, #7
 226 004e 1B78     		ldrb	r3, [r3]
 227 0050 1800     		movs	r0, r3
 228 0052 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC4/UART2.c **** }
 229              		.loc 1 223 0
 230 0056 C046     		nop
 231 0058 BD46     		mov	sp, r7
 232 005a 03B0     		add	sp, sp, #12
 233              		@ sp needed
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 9


 234 005c 90BD     		pop	{r4, r7, pc}
 235              	.L10:
 236 005e C046     		.align	2
 237              	.L9:
 238 0060 91000F40 		.word	1074725009
 239 0064 90000F40 		.word	1074725008
 240 0068 92000F40 		.word	1074725010
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	UART2_Enable, .-UART2_Enable
 244              		.section	.text.UART2_Stop,"ax",%progbits
 245              		.align	2
 246              		.global	UART2_Stop
 247              		.code	16
 248              		.thumb_func
 249              		.type	UART2_Stop, %function
 250              	UART2_Stop:
 251              	.LFB5:
 224:Generated_Source\PSoC4/UART2.c **** 
 225:Generated_Source\PSoC4/UART2.c **** 
 226:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_Stop
 228:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
 229:Generated_Source\PSoC4/UART2.c **** *
 230:Generated_Source\PSoC4/UART2.c **** * Summary:
 231:Generated_Source\PSoC4/UART2.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/UART2.c **** *
 233:Generated_Source\PSoC4/UART2.c **** * Parameters:
 234:Generated_Source\PSoC4/UART2.c **** *  None.
 235:Generated_Source\PSoC4/UART2.c **** *
 236:Generated_Source\PSoC4/UART2.c **** * Return:
 237:Generated_Source\PSoC4/UART2.c **** *  None.
 238:Generated_Source\PSoC4/UART2.c **** *
 239:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/UART2.c **** void UART2_Stop(void) 
 241:Generated_Source\PSoC4/UART2.c **** {
 252              		.loc 1 241 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 90B5     		push	{r4, r7, lr}
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 83B0     		sub	sp, sp, #12
 262              		.cfi_def_cfa_offset 24
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC4/UART2.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/UART2.c ****     enableInterrupts = CyEnterCriticalSection();
 265              		.loc 1 243 0
 266 0006 FC1D     		adds	r4, r7, #7
 267 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 268 000c 0300     		movs	r3, r0
 269 000e 2370     		strb	r3, [r4]
 244:Generated_Source\PSoC4/UART2.c **** 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 10


 245:Generated_Source\PSoC4/UART2.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_ENABLED || UART2_HD_ENABLED)
 247:Generated_Source\PSoC4/UART2.c ****         UART2_RXBITCTR_CONTROL_REG &= (uint8) ~UART2_CNTR_ENABLE;
 270              		.loc 1 247 0
 271 0010 124A     		ldr	r2, .L12
 272 0012 124B     		ldr	r3, .L12
 273 0014 1B78     		ldrb	r3, [r3]
 274 0016 DBB2     		uxtb	r3, r3
 275 0018 2021     		movs	r1, #32
 276 001a 8B43     		bics	r3, r1
 277 001c DBB2     		uxtb	r3, r3
 278 001e 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_ENABLED || UART2_HD_ENABLED) */
 249:Generated_Source\PSoC4/UART2.c **** 
 250:Generated_Source\PSoC4/UART2.c ****     #if (UART2_TX_ENABLED)
 251:Generated_Source\PSoC4/UART2.c ****         #if(!UART2_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/UART2.c ****             UART2_TXBITCTR_CONTROL_REG &= (uint8) ~UART2_CNTR_ENABLE;
 253:Generated_Source\PSoC4/UART2.c ****         #endif /* (!UART2_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_TX_ENABLED) */
 255:Generated_Source\PSoC4/UART2.c **** 
 256:Generated_Source\PSoC4/UART2.c ****     #if (UART2_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/UART2.c ****         UART2_IntClock_Stop();   /* Disable the clock */
 279              		.loc 1 257 0
 280 0020 FFF7FEFF 		bl	UART2_IntClock_Stop
 258:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/UART2.c **** 
 260:Generated_Source\PSoC4/UART2.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_ENABLED || UART2_HD_ENABLED)
 262:Generated_Source\PSoC4/UART2.c ****         UART2_RXSTATUS_ACTL_REG  &= (uint8) ~UART2_INT_ENABLE;
 281              		.loc 1 262 0
 282 0024 0E4A     		ldr	r2, .L12+4
 283 0026 0E4B     		ldr	r3, .L12+4
 284 0028 1B78     		ldrb	r3, [r3]
 285 002a DBB2     		uxtb	r3, r3
 286 002c 1021     		movs	r1, #16
 287 002e 8B43     		bics	r3, r1
 288 0030 DBB2     		uxtb	r3, r3
 289 0032 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/UART2.c **** 
 264:Generated_Source\PSoC4/UART2.c ****         #if (UART2_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/UART2.c ****             UART2_DisableRxInt();
 290              		.loc 1 265 0
 291 0034 0320     		movs	r0, #3
 292 0036 FFF7FEFF 		bl	CyIntDisable
 266:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_ENABLED || UART2_HD_ENABLED) */
 268:Generated_Source\PSoC4/UART2.c **** 
 269:Generated_Source\PSoC4/UART2.c ****     #if (UART2_TX_ENABLED)
 270:Generated_Source\PSoC4/UART2.c ****         UART2_TXSTATUS_ACTL_REG &= (uint8) ~UART2_INT_ENABLE;
 293              		.loc 1 270 0
 294 003a 0A4A     		ldr	r2, .L12+8
 295 003c 094B     		ldr	r3, .L12+8
 296 003e 1B78     		ldrb	r3, [r3]
 297 0040 DBB2     		uxtb	r3, r3
 298 0042 1021     		movs	r1, #16
 299 0044 8B43     		bics	r3, r1
 300 0046 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 11


 301 0048 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC4/UART2.c **** 
 272:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/UART2.c ****             UART2_DisableTxInt();
 274:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_TX_ENABLED) */
 276:Generated_Source\PSoC4/UART2.c **** 
 277:Generated_Source\PSoC4/UART2.c ****     CyExitCriticalSection(enableInterrupts);
 302              		.loc 1 277 0
 303 004a FB1D     		adds	r3, r7, #7
 304 004c 1B78     		ldrb	r3, [r3]
 305 004e 1800     		movs	r0, r3
 306 0050 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC4/UART2.c **** }
 307              		.loc 1 278 0
 308 0054 C046     		nop
 309 0056 BD46     		mov	sp, r7
 310 0058 03B0     		add	sp, sp, #12
 311              		@ sp needed
 312 005a 90BD     		pop	{r4, r7, pc}
 313              	.L13:
 314              		.align	2
 315              	.L12:
 316 005c 91000F40 		.word	1074725009
 317 0060 90000F40 		.word	1074725008
 318 0064 92000F40 		.word	1074725010
 319              		.cfi_endproc
 320              	.LFE5:
 321              		.size	UART2_Stop, .-UART2_Stop
 322              		.section	.text.UART2_ReadControlRegister,"ax",%progbits
 323              		.align	2
 324              		.global	UART2_ReadControlRegister
 325              		.code	16
 326              		.thumb_func
 327              		.type	UART2_ReadControlRegister, %function
 328              	UART2_ReadControlRegister:
 329              	.LFB6:
 279:Generated_Source\PSoC4/UART2.c **** 
 280:Generated_Source\PSoC4/UART2.c **** 
 281:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_ReadControlRegister
 283:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
 284:Generated_Source\PSoC4/UART2.c **** *
 285:Generated_Source\PSoC4/UART2.c **** * Summary:
 286:Generated_Source\PSoC4/UART2.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/UART2.c **** *
 288:Generated_Source\PSoC4/UART2.c **** * Parameters:
 289:Generated_Source\PSoC4/UART2.c **** *  None.
 290:Generated_Source\PSoC4/UART2.c **** *
 291:Generated_Source\PSoC4/UART2.c **** * Return:
 292:Generated_Source\PSoC4/UART2.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/UART2.c **** *
 294:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/UART2.c **** uint8 UART2_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/UART2.c **** {
 330              		.loc 1 296 0
 331              		.cfi_startproc
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 12


 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC4/UART2.c ****     #if (UART2_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/UART2.c ****         return(0u);
 340              		.loc 1 298 0
 341 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC4/UART2.c ****     #else
 300:Generated_Source\PSoC4/UART2.c ****         return(UART2_CONTROL_REG);
 301:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/UART2.c **** }
 342              		.loc 1 302 0
 343 0006 1800     		movs	r0, r3
 344 0008 BD46     		mov	sp, r7
 345              		@ sp needed
 346 000a 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE6:
 349              		.size	UART2_ReadControlRegister, .-UART2_ReadControlRegister
 350              		.section	.text.UART2_WriteControlRegister,"ax",%progbits
 351              		.align	2
 352              		.global	UART2_WriteControlRegister
 353              		.code	16
 354              		.thumb_func
 355              		.type	UART2_WriteControlRegister, %function
 356              	UART2_WriteControlRegister:
 357              	.LFB7:
 303:Generated_Source\PSoC4/UART2.c **** 
 304:Generated_Source\PSoC4/UART2.c **** 
 305:Generated_Source\PSoC4/UART2.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/UART2.c **** * Function Name: UART2_WriteControlRegister
 307:Generated_Source\PSoC4/UART2.c **** ********************************************************************************
 308:Generated_Source\PSoC4/UART2.c **** *
 309:Generated_Source\PSoC4/UART2.c **** * Summary:
 310:Generated_Source\PSoC4/UART2.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/UART2.c **** *
 312:Generated_Source\PSoC4/UART2.c **** * Parameters:
 313:Generated_Source\PSoC4/UART2.c **** *  control:  control register value
 314:Generated_Source\PSoC4/UART2.c **** *
 315:Generated_Source\PSoC4/UART2.c **** * Return:
 316:Generated_Source\PSoC4/UART2.c **** *  None.
 317:Generated_Source\PSoC4/UART2.c **** *
 318:Generated_Source\PSoC4/UART2.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/UART2.c **** void  UART2_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/UART2.c **** {
 358              		.loc 1 320 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 13


 365              		.cfi_offset 14, -4
 366 0002 82B0     		sub	sp, sp, #8
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 0200     		movs	r2, r0
 371 0008 FB1D     		adds	r3, r7, #7
 372 000a 1A70     		strb	r2, [r3]
 321:Generated_Source\PSoC4/UART2.c ****     #if (UART2_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/UART2.c ****         if(0u != control)
 323:Generated_Source\PSoC4/UART2.c ****         {
 324:Generated_Source\PSoC4/UART2.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/UART2.c ****         }
 326:Generated_Source\PSoC4/UART2.c ****     #else
 327:Generated_Source\PSoC4/UART2.c ****        UART2_CONTROL_REG = control;
 328:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/UART2.c **** }
 373              		.loc 1 329 0
 374 000c C046     		nop
 375 000e BD46     		mov	sp, r7
 376 0010 02B0     		add	sp, sp, #8
 377              		@ sp needed
 378 0012 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE7:
 381              		.size	UART2_WriteControlRegister, .-UART2_WriteControlRegister
 382              		.section	.text.UART2_SetRxInterruptMode,"ax",%progbits
 383              		.align	2
 384              		.global	UART2_SetRxInterruptMode
 385              		.code	16
 386              		.thumb_func
 387              		.type	UART2_SetRxInterruptMode, %function
 388              	UART2_SetRxInterruptMode:
 389              	.LFB8:
 330:Generated_Source\PSoC4/UART2.c **** 
 331:Generated_Source\PSoC4/UART2.c **** 
 332:Generated_Source\PSoC4/UART2.c **** #if(UART2_RX_ENABLED || UART2_HD_ENABLED)
 333:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetRxInterruptMode
 335:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/UART2.c ****     *
 337:Generated_Source\PSoC4/UART2.c ****     * Summary:
 338:Generated_Source\PSoC4/UART2.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/UART2.c ****     *
 340:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 341:Generated_Source\PSoC4/UART2.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/UART2.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/UART2.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/UART2.c ****     *      UART2_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/UART2.c ****     *
 352:Generated_Source\PSoC4/UART2.c ****     * Return:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 14


 353:Generated_Source\PSoC4/UART2.c ****     *  None.
 354:Generated_Source\PSoC4/UART2.c ****     *
 355:Generated_Source\PSoC4/UART2.c ****     * Theory:
 356:Generated_Source\PSoC4/UART2.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/UART2.c ****     *
 358:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/UART2.c ****     void UART2_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/UART2.c ****     {
 390              		.loc 1 360 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 82B0     		sub	sp, sp, #8
 399              		.cfi_def_cfa_offset 16
 400 0004 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 402 0006 0200     		movs	r2, r0
 403 0008 FB1D     		adds	r3, r7, #7
 404 000a 1A70     		strb	r2, [r3]
 361:Generated_Source\PSoC4/UART2.c ****         UART2_RXSTATUS_MASK_REG  = intSrc;
 405              		.loc 1 361 0
 406 000c 034A     		ldr	r2, .L18
 407 000e FB1D     		adds	r3, r7, #7
 408 0010 1B78     		ldrb	r3, [r3]
 409 0012 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC4/UART2.c ****     }
 410              		.loc 1 362 0
 411 0014 C046     		nop
 412 0016 BD46     		mov	sp, r7
 413 0018 02B0     		add	sp, sp, #8
 414              		@ sp needed
 415 001a 80BD     		pop	{r7, pc}
 416              	.L19:
 417              		.align	2
 418              	.L18:
 419 001c 80000F40 		.word	1074724992
 420              		.cfi_endproc
 421              	.LFE8:
 422              		.size	UART2_SetRxInterruptMode, .-UART2_SetRxInterruptMode
 423              		.section	.text.UART2_ReadRxData,"ax",%progbits
 424              		.align	2
 425              		.global	UART2_ReadRxData
 426              		.code	16
 427              		.thumb_func
 428              		.type	UART2_ReadRxData, %function
 429              	UART2_ReadRxData:
 430              	.LFB9:
 363:Generated_Source\PSoC4/UART2.c **** 
 364:Generated_Source\PSoC4/UART2.c **** 
 365:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_ReadRxData
 367:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 15


 369:Generated_Source\PSoC4/UART2.c ****     * Summary:
 370:Generated_Source\PSoC4/UART2.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/UART2.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/UART2.c ****     *
 373:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 374:Generated_Source\PSoC4/UART2.c ****     *  None.
 375:Generated_Source\PSoC4/UART2.c ****     *
 376:Generated_Source\PSoC4/UART2.c ****     * Return:
 377:Generated_Source\PSoC4/UART2.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/UART2.c ****     *
 379:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 380:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/UART2.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/UART2.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/UART2.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/UART2.c ****     *
 388:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
 389:Generated_Source\PSoC4/UART2.c ****     *  No.
 390:Generated_Source\PSoC4/UART2.c ****     *
 391:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_ReadRxData(void) 
 393:Generated_Source\PSoC4/UART2.c ****     {
 431              		.loc 1 393 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435 0000 80B5     		push	{r7, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 82B0     		sub	sp, sp, #8
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC4/UART2.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/UART2.c **** 
 396:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/UART2.c **** 
 398:Generated_Source\PSoC4/UART2.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/UART2.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/UART2.c **** 
 401:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/UART2.c ****         UART2_DisableRxInt();
 443              		.loc 1 402 0
 444 0006 0320     		movs	r0, #3
 445 0008 FFF7FEFF 		bl	CyIntDisable
 403:Generated_Source\PSoC4/UART2.c **** 
 404:Generated_Source\PSoC4/UART2.c ****         locRxBufferRead  = UART2_rxBufferRead;
 446              		.loc 1 404 0
 447 000c BB1D     		adds	r3, r7, #6
 448 000e 1F4A     		ldr	r2, .L27
 449 0010 1278     		ldrb	r2, [r2]
 450 0012 1A70     		strb	r2, [r3]
 405:Generated_Source\PSoC4/UART2.c ****         locRxBufferWrite = UART2_rxBufferWrite;
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 16


 451              		.loc 1 405 0
 452 0014 7B1D     		adds	r3, r7, #5
 453 0016 1E4A     		ldr	r2, .L27+4
 454 0018 1278     		ldrb	r2, [r2]
 455 001a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/UART2.c **** 
 407:Generated_Source\PSoC4/UART2.c ****         if( (UART2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 456              		.loc 1 407 0
 457 001c 1D4B     		ldr	r3, .L27+8
 458 001e 1B78     		ldrb	r3, [r3]
 459 0020 DBB2     		uxtb	r3, r3
 460 0022 002B     		cmp	r3, #0
 461 0024 05D1     		bne	.L21
 462              		.loc 1 407 0 is_stmt 0 discriminator 1
 463 0026 BA1D     		adds	r2, r7, #6
 464 0028 7B1D     		adds	r3, r7, #5
 465 002a 1278     		ldrb	r2, [r2]
 466 002c 1B78     		ldrb	r3, [r3]
 467 002e 9A42     		cmp	r2, r3
 468 0030 1ED0     		beq	.L22
 469              	.L21:
 408:Generated_Source\PSoC4/UART2.c ****         {
 409:Generated_Source\PSoC4/UART2.c ****             rxData = UART2_rxBuffer[locRxBufferRead];
 470              		.loc 1 409 0 is_stmt 1
 471 0032 BB1D     		adds	r3, r7, #6
 472 0034 1A78     		ldrb	r2, [r3]
 473 0036 FB1D     		adds	r3, r7, #7
 474 0038 1749     		ldr	r1, .L27+12
 475 003a 8A5C     		ldrb	r2, [r1, r2]
 476 003c 1A70     		strb	r2, [r3]
 410:Generated_Source\PSoC4/UART2.c ****             locRxBufferRead++;
 477              		.loc 1 410 0
 478 003e BB1D     		adds	r3, r7, #6
 479 0040 1A78     		ldrb	r2, [r3]
 480 0042 BB1D     		adds	r3, r7, #6
 481 0044 0132     		adds	r2, r2, #1
 482 0046 1A70     		strb	r2, [r3]
 411:Generated_Source\PSoC4/UART2.c **** 
 412:Generated_Source\PSoC4/UART2.c ****             if(locRxBufferRead >= UART2_RX_BUFFER_SIZE)
 483              		.loc 1 412 0
 484 0048 BB1D     		adds	r3, r7, #6
 485 004a 1B78     		ldrb	r3, [r3]
 486 004c 072B     		cmp	r3, #7
 487 004e 02D9     		bls	.L23
 413:Generated_Source\PSoC4/UART2.c ****             {
 414:Generated_Source\PSoC4/UART2.c ****                 locRxBufferRead = 0u;
 488              		.loc 1 414 0
 489 0050 BB1D     		adds	r3, r7, #6
 490 0052 0022     		movs	r2, #0
 491 0054 1A70     		strb	r2, [r3]
 492              	.L23:
 415:Generated_Source\PSoC4/UART2.c ****             }
 416:Generated_Source\PSoC4/UART2.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/UART2.c ****             UART2_rxBufferRead = locRxBufferRead;
 493              		.loc 1 417 0
 494 0056 0D4B     		ldr	r3, .L27
 495 0058 BA1D     		adds	r2, r7, #6
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 17


 496 005a 1278     		ldrb	r2, [r2]
 497 005c 1A70     		strb	r2, [r3]
 418:Generated_Source\PSoC4/UART2.c **** 
 419:Generated_Source\PSoC4/UART2.c ****             if(UART2_rxBufferLoopDetect != 0u)
 498              		.loc 1 419 0
 499 005e 0D4B     		ldr	r3, .L27+8
 500 0060 1B78     		ldrb	r3, [r3]
 501 0062 DBB2     		uxtb	r3, r3
 502 0064 002B     		cmp	r3, #0
 503 0066 07D0     		beq	.L25
 420:Generated_Source\PSoC4/UART2.c ****             {
 421:Generated_Source\PSoC4/UART2.c ****                 UART2_rxBufferLoopDetect = 0u;
 504              		.loc 1 421 0
 505 0068 0A4B     		ldr	r3, .L27+8
 506 006a 0022     		movs	r2, #0
 507 006c 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/UART2.c ****             {
 508              		.loc 1 419 0
 509 006e 03E0     		b	.L25
 510              	.L22:
 422:Generated_Source\PSoC4/UART2.c ****                 #if ((UART2_RX_INTERRUPT_ENABLED) && (UART2_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/UART2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/UART2.c ****                     #if( UART2_HD_ENABLED )
 425:Generated_Source\PSoC4/UART2.c ****                         if((UART2_CONTROL_REG & UART2_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/UART2.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/UART2.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/UART2.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/UART2.c ****                             */
 430:Generated_Source\PSoC4/UART2.c ****                             UART2_RXSTATUS_MASK_REG  |= UART2_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/UART2.c ****                         }
 432:Generated_Source\PSoC4/UART2.c ****                     #else
 433:Generated_Source\PSoC4/UART2.c ****                         UART2_RXSTATUS_MASK_REG  |= UART2_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/UART2.c ****                     #endif /* end UART2_HD_ENABLED */
 435:Generated_Source\PSoC4/UART2.c ****                 #endif /* ((UART2_RX_INTERRUPT_ENABLED) && (UART2_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/UART2.c ****             }
 437:Generated_Source\PSoC4/UART2.c ****         }
 438:Generated_Source\PSoC4/UART2.c ****         else
 439:Generated_Source\PSoC4/UART2.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/UART2.c ****             rxData = UART2_RXDATA_REG;
 511              		.loc 1 440 0
 512 0070 0A4A     		ldr	r2, .L27+16
 513 0072 FB1D     		adds	r3, r7, #7
 514 0074 1278     		ldrb	r2, [r2]
 515 0076 1A70     		strb	r2, [r3]
 516              	.L25:
 441:Generated_Source\PSoC4/UART2.c ****         }
 442:Generated_Source\PSoC4/UART2.c **** 
 443:Generated_Source\PSoC4/UART2.c ****         UART2_EnableRxInt();
 517              		.loc 1 443 0
 518 0078 0320     		movs	r0, #3
 519 007a FFF7FEFF 		bl	CyIntEnable
 444:Generated_Source\PSoC4/UART2.c **** 
 445:Generated_Source\PSoC4/UART2.c ****     #else
 446:Generated_Source\PSoC4/UART2.c **** 
 447:Generated_Source\PSoC4/UART2.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/UART2.c ****         rxData = UART2_RXDATA_REG;
 449:Generated_Source\PSoC4/UART2.c **** 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 18


 450:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/UART2.c **** 
 452:Generated_Source\PSoC4/UART2.c ****         return(rxData);
 520              		.loc 1 452 0
 521 007e FB1D     		adds	r3, r7, #7
 522 0080 1B78     		ldrb	r3, [r3]
 453:Generated_Source\PSoC4/UART2.c ****     }
 523              		.loc 1 453 0
 524 0082 1800     		movs	r0, r3
 525 0084 BD46     		mov	sp, r7
 526 0086 02B0     		add	sp, sp, #8
 527              		@ sp needed
 528 0088 80BD     		pop	{r7, pc}
 529              	.L28:
 530 008a C046     		.align	2
 531              	.L27:
 532 008c 00000000 		.word	UART2_rxBufferRead
 533 0090 00000000 		.word	UART2_rxBufferWrite
 534 0094 00000000 		.word	UART2_rxBufferLoopDetect
 535 0098 00000000 		.word	UART2_rxBuffer
 536 009c 41000F40 		.word	1074724929
 537              		.cfi_endproc
 538              	.LFE9:
 539              		.size	UART2_ReadRxData, .-UART2_ReadRxData
 540              		.section	.text.UART2_ReadRxStatus,"ax",%progbits
 541              		.align	2
 542              		.global	UART2_ReadRxStatus
 543              		.code	16
 544              		.thumb_func
 545              		.type	UART2_ReadRxStatus, %function
 546              	UART2_ReadRxStatus:
 547              	.LFB10:
 454:Generated_Source\PSoC4/UART2.c **** 
 455:Generated_Source\PSoC4/UART2.c **** 
 456:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_ReadRxStatus
 458:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/UART2.c ****     *
 460:Generated_Source\PSoC4/UART2.c ****     * Summary:
 461:Generated_Source\PSoC4/UART2.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/UART2.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/UART2.c ****     *
 464:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 465:Generated_Source\PSoC4/UART2.c ****     *  None.
 466:Generated_Source\PSoC4/UART2.c ****     *
 467:Generated_Source\PSoC4/UART2.c ****     * Return:
 468:Generated_Source\PSoC4/UART2.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/UART2.c ****     *
 470:Generated_Source\PSoC4/UART2.c ****     * Side Effect:
 471:Generated_Source\PSoC4/UART2.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/UART2.c ****     *  UART2_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/UART2.c ****     *  UART2_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/UART2.c ****     *  register read.
 475:Generated_Source\PSoC4/UART2.c ****     *
 476:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 477:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/UART2.c ****     *   It set to one in RX interrupt when there isn't free space in
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 19


 479:Generated_Source\PSoC4/UART2.c ****     *   UART2_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/UART2.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/UART2.c ****     *   UART2_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/UART2.c ****     *   bits.
 483:Generated_Source\PSoC4/UART2.c ****     *
 484:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/UART2.c ****     {
 548              		.loc 1 486 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 82B0     		sub	sp, sp, #8
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC4/UART2.c ****         uint8 status;
 488:Generated_Source\PSoC4/UART2.c **** 
 489:Generated_Source\PSoC4/UART2.c ****         status = UART2_RXSTATUS_REG & UART2_RX_HW_MASK;
 560              		.loc 1 489 0
 561 0006 0E4B     		ldr	r3, .L32
 562 0008 1B78     		ldrb	r3, [r3]
 563 000a DAB2     		uxtb	r2, r3
 564 000c FB1D     		adds	r3, r7, #7
 565 000e 7F21     		movs	r1, #127
 566 0010 0A40     		ands	r2, r1
 567 0012 1A70     		strb	r2, [r3]
 490:Generated_Source\PSoC4/UART2.c **** 
 491:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/UART2.c ****         if(UART2_rxBufferOverflow != 0u)
 568              		.loc 1 492 0
 569 0014 0B4B     		ldr	r3, .L32+4
 570 0016 1B78     		ldrb	r3, [r3]
 571 0018 DBB2     		uxtb	r3, r3
 572 001a 002B     		cmp	r3, #0
 573 001c 09D0     		beq	.L30
 493:Generated_Source\PSoC4/UART2.c ****         {
 494:Generated_Source\PSoC4/UART2.c ****             status |= UART2_RX_STS_SOFT_BUFF_OVER;
 574              		.loc 1 494 0
 575 001e FB1D     		adds	r3, r7, #7
 576 0020 FA1D     		adds	r2, r7, #7
 577 0022 1278     		ldrb	r2, [r2]
 578 0024 8021     		movs	r1, #128
 579 0026 4942     		rsbs	r1, r1, #0
 580 0028 0A43     		orrs	r2, r1
 581 002a 1A70     		strb	r2, [r3]
 495:Generated_Source\PSoC4/UART2.c ****             UART2_rxBufferOverflow = 0u;
 582              		.loc 1 495 0
 583 002c 054B     		ldr	r3, .L32+4
 584 002e 0022     		movs	r2, #0
 585 0030 1A70     		strb	r2, [r3]
 586              	.L30:
 496:Generated_Source\PSoC4/UART2.c ****         }
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 20


 497:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/UART2.c **** 
 499:Generated_Source\PSoC4/UART2.c ****         return(status);
 587              		.loc 1 499 0
 588 0032 FB1D     		adds	r3, r7, #7
 589 0034 1B78     		ldrb	r3, [r3]
 500:Generated_Source\PSoC4/UART2.c ****     }
 590              		.loc 1 500 0
 591 0036 1800     		movs	r0, r3
 592 0038 BD46     		mov	sp, r7
 593 003a 02B0     		add	sp, sp, #8
 594              		@ sp needed
 595 003c 80BD     		pop	{r7, pc}
 596              	.L33:
 597 003e C046     		.align	2
 598              	.L32:
 599 0040 60000F40 		.word	1074724960
 600 0044 00000000 		.word	UART2_rxBufferOverflow
 601              		.cfi_endproc
 602              	.LFE10:
 603              		.size	UART2_ReadRxStatus, .-UART2_ReadRxStatus
 604              		.section	.text.UART2_GetChar,"ax",%progbits
 605              		.align	2
 606              		.global	UART2_GetChar
 607              		.code	16
 608              		.thumb_func
 609              		.type	UART2_GetChar, %function
 610              	UART2_GetChar:
 611              	.LFB11:
 501:Generated_Source\PSoC4/UART2.c **** 
 502:Generated_Source\PSoC4/UART2.c **** 
 503:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_GetChar
 505:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/UART2.c ****     *
 507:Generated_Source\PSoC4/UART2.c ****     * Summary:
 508:Generated_Source\PSoC4/UART2.c ****     *  Returns the last received byte of data. UART2_GetChar() is
 509:Generated_Source\PSoC4/UART2.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/UART2.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/UART2.c ****     *
 512:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 513:Generated_Source\PSoC4/UART2.c ****     *  None.
 514:Generated_Source\PSoC4/UART2.c ****     *
 515:Generated_Source\PSoC4/UART2.c ****     * Return:
 516:Generated_Source\PSoC4/UART2.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/UART2.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/UART2.c ****     *
 519:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 520:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/UART2.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/UART2.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/UART2.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/UART2.c ****     *
 528:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 21


 529:Generated_Source\PSoC4/UART2.c ****     *  No.
 530:Generated_Source\PSoC4/UART2.c ****     *
 531:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_GetChar(void) 
 533:Generated_Source\PSoC4/UART2.c ****     {
 612              		.loc 1 533 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 82B0     		sub	sp, sp, #8
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC4/UART2.c ****         uint8 rxData = 0u;
 624              		.loc 1 534 0
 625 0006 FB1D     		adds	r3, r7, #7
 626 0008 0022     		movs	r2, #0
 627 000a 1A70     		strb	r2, [r3]
 535:Generated_Source\PSoC4/UART2.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/UART2.c **** 
 537:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/UART2.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/UART2.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/UART2.c **** 
 541:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/UART2.c ****         UART2_DisableRxInt();
 628              		.loc 1 542 0
 629 000c 0320     		movs	r0, #3
 630 000e FFF7FEFF 		bl	CyIntDisable
 543:Generated_Source\PSoC4/UART2.c **** 
 544:Generated_Source\PSoC4/UART2.c ****         locRxBufferRead  = UART2_rxBufferRead;
 631              		.loc 1 544 0
 632 0012 BB1D     		adds	r3, r7, #6
 633 0014 274A     		ldr	r2, .L41
 634 0016 1278     		ldrb	r2, [r2]
 635 0018 1A70     		strb	r2, [r3]
 545:Generated_Source\PSoC4/UART2.c ****         locRxBufferWrite = UART2_rxBufferWrite;
 636              		.loc 1 545 0
 637 001a 7B1D     		adds	r3, r7, #5
 638 001c 264A     		ldr	r2, .L41+4
 639 001e 1278     		ldrb	r2, [r2]
 640 0020 1A70     		strb	r2, [r3]
 546:Generated_Source\PSoC4/UART2.c **** 
 547:Generated_Source\PSoC4/UART2.c ****         if( (UART2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 641              		.loc 1 547 0
 642 0022 264B     		ldr	r3, .L41+8
 643 0024 1B78     		ldrb	r3, [r3]
 644 0026 DBB2     		uxtb	r3, r3
 645 0028 002B     		cmp	r3, #0
 646 002a 05D1     		bne	.L35
 647              		.loc 1 547 0 is_stmt 0 discriminator 1
 648 002c BA1D     		adds	r2, r7, #6
 649 002e 7B1D     		adds	r3, r7, #5
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 22


 650 0030 1278     		ldrb	r2, [r2]
 651 0032 1B78     		ldrb	r3, [r3]
 652 0034 9A42     		cmp	r2, r3
 653 0036 1ED0     		beq	.L36
 654              	.L35:
 548:Generated_Source\PSoC4/UART2.c ****         {
 549:Generated_Source\PSoC4/UART2.c ****             rxData = UART2_rxBuffer[locRxBufferRead];
 655              		.loc 1 549 0 is_stmt 1
 656 0038 BB1D     		adds	r3, r7, #6
 657 003a 1A78     		ldrb	r2, [r3]
 658 003c FB1D     		adds	r3, r7, #7
 659 003e 2049     		ldr	r1, .L41+12
 660 0040 8A5C     		ldrb	r2, [r1, r2]
 661 0042 1A70     		strb	r2, [r3]
 550:Generated_Source\PSoC4/UART2.c ****             locRxBufferRead++;
 662              		.loc 1 550 0
 663 0044 BB1D     		adds	r3, r7, #6
 664 0046 1A78     		ldrb	r2, [r3]
 665 0048 BB1D     		adds	r3, r7, #6
 666 004a 0132     		adds	r2, r2, #1
 667 004c 1A70     		strb	r2, [r3]
 551:Generated_Source\PSoC4/UART2.c ****             if(locRxBufferRead >= UART2_RX_BUFFER_SIZE)
 668              		.loc 1 551 0
 669 004e BB1D     		adds	r3, r7, #6
 670 0050 1B78     		ldrb	r3, [r3]
 671 0052 072B     		cmp	r3, #7
 672 0054 02D9     		bls	.L37
 552:Generated_Source\PSoC4/UART2.c ****             {
 553:Generated_Source\PSoC4/UART2.c ****                 locRxBufferRead = 0u;
 673              		.loc 1 553 0
 674 0056 BB1D     		adds	r3, r7, #6
 675 0058 0022     		movs	r2, #0
 676 005a 1A70     		strb	r2, [r3]
 677              	.L37:
 554:Generated_Source\PSoC4/UART2.c ****             }
 555:Generated_Source\PSoC4/UART2.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/UART2.c ****             UART2_rxBufferRead = locRxBufferRead;
 678              		.loc 1 556 0
 679 005c 154B     		ldr	r3, .L41
 680 005e BA1D     		adds	r2, r7, #6
 681 0060 1278     		ldrb	r2, [r2]
 682 0062 1A70     		strb	r2, [r3]
 557:Generated_Source\PSoC4/UART2.c **** 
 558:Generated_Source\PSoC4/UART2.c ****             if(UART2_rxBufferLoopDetect != 0u)
 683              		.loc 1 558 0
 684 0064 154B     		ldr	r3, .L41+8
 685 0066 1B78     		ldrb	r3, [r3]
 686 0068 DBB2     		uxtb	r3, r3
 687 006a 002B     		cmp	r3, #0
 688 006c 18D0     		beq	.L39
 559:Generated_Source\PSoC4/UART2.c ****             {
 560:Generated_Source\PSoC4/UART2.c ****                 UART2_rxBufferLoopDetect = 0u;
 689              		.loc 1 560 0
 690 006e 134B     		ldr	r3, .L41+8
 691 0070 0022     		movs	r2, #0
 692 0072 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC4/UART2.c ****             {
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 23


 693              		.loc 1 558 0
 694 0074 14E0     		b	.L39
 695              	.L36:
 561:Generated_Source\PSoC4/UART2.c ****                 #if( (UART2_RX_INTERRUPT_ENABLED) && (UART2_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/UART2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/UART2.c ****                     #if( UART2_HD_ENABLED )
 564:Generated_Source\PSoC4/UART2.c ****                         if((UART2_CONTROL_REG & UART2_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/UART2.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/UART2.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/UART2.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/UART2.c ****                             */
 569:Generated_Source\PSoC4/UART2.c ****                             UART2_RXSTATUS_MASK_REG |= UART2_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/UART2.c ****                         }
 571:Generated_Source\PSoC4/UART2.c ****                     #else
 572:Generated_Source\PSoC4/UART2.c ****                         UART2_RXSTATUS_MASK_REG |= UART2_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/UART2.c ****                     #endif /* end UART2_HD_ENABLED */
 574:Generated_Source\PSoC4/UART2.c ****                 #endif /* UART2_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/UART2.c ****             }
 576:Generated_Source\PSoC4/UART2.c **** 
 577:Generated_Source\PSoC4/UART2.c ****         }
 578:Generated_Source\PSoC4/UART2.c ****         else
 579:Generated_Source\PSoC4/UART2.c ****         {   rxStatus = UART2_RXSTATUS_REG;
 696              		.loc 1 579 0
 697 0076 134A     		ldr	r2, .L41+16
 698 0078 3B1D     		adds	r3, r7, #4
 699 007a 1278     		ldrb	r2, [r2]
 700 007c 1A70     		strb	r2, [r3]
 580:Generated_Source\PSoC4/UART2.c ****             if((rxStatus & UART2_RX_STS_FIFO_NOTEMPTY) != 0u)
 701              		.loc 1 580 0
 702 007e 3B1D     		adds	r3, r7, #4
 703 0080 1B78     		ldrb	r3, [r3]
 704 0082 2022     		movs	r2, #32
 705 0084 1340     		ands	r3, r2
 706 0086 0BD0     		beq	.L39
 581:Generated_Source\PSoC4/UART2.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/UART2.c ****                 rxData = UART2_RXDATA_REG;
 707              		.loc 1 582 0
 708 0088 0F4A     		ldr	r2, .L41+20
 709 008a FB1D     		adds	r3, r7, #7
 710 008c 1278     		ldrb	r2, [r2]
 711 008e 1A70     		strb	r2, [r3]
 583:Generated_Source\PSoC4/UART2.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/UART2.c ****                 if((rxStatus & (UART2_RX_STS_BREAK | UART2_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/UART2.c ****                                 UART2_RX_STS_STOP_ERROR | UART2_RX_STS_OVERRUN)) != 0u)
 712              		.loc 1 585 0
 713 0090 3B1D     		adds	r3, r7, #4
 714 0092 1B78     		ldrb	r3, [r3]
 715 0094 1E22     		movs	r2, #30
 716 0096 1340     		ands	r3, r2
 584:Generated_Source\PSoC4/UART2.c ****                                 UART2_RX_STS_STOP_ERROR | UART2_RX_STS_OVERRUN)) != 0u)
 717              		.loc 1 584 0
 718 0098 02D0     		beq	.L39
 586:Generated_Source\PSoC4/UART2.c ****                 {
 587:Generated_Source\PSoC4/UART2.c ****                     rxData = 0u;
 719              		.loc 1 587 0
 720 009a FB1D     		adds	r3, r7, #7
 721 009c 0022     		movs	r2, #0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 24


 722 009e 1A70     		strb	r2, [r3]
 723              	.L39:
 588:Generated_Source\PSoC4/UART2.c ****                 }
 589:Generated_Source\PSoC4/UART2.c ****             }
 590:Generated_Source\PSoC4/UART2.c ****         }
 591:Generated_Source\PSoC4/UART2.c **** 
 592:Generated_Source\PSoC4/UART2.c ****         UART2_EnableRxInt();
 724              		.loc 1 592 0
 725 00a0 0320     		movs	r0, #3
 726 00a2 FFF7FEFF 		bl	CyIntEnable
 593:Generated_Source\PSoC4/UART2.c **** 
 594:Generated_Source\PSoC4/UART2.c ****     #else
 595:Generated_Source\PSoC4/UART2.c **** 
 596:Generated_Source\PSoC4/UART2.c ****         rxStatus =UART2_RXSTATUS_REG;
 597:Generated_Source\PSoC4/UART2.c ****         if((rxStatus & UART2_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC4/UART2.c ****         {
 599:Generated_Source\PSoC4/UART2.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/UART2.c ****             rxData = UART2_RXDATA_REG;
 601:Generated_Source\PSoC4/UART2.c **** 
 602:Generated_Source\PSoC4/UART2.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/UART2.c ****             if((rxStatus & (UART2_RX_STS_BREAK | UART2_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC4/UART2.c ****                             UART2_RX_STS_STOP_ERROR | UART2_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/UART2.c ****             {
 606:Generated_Source\PSoC4/UART2.c ****                 rxData = 0u;
 607:Generated_Source\PSoC4/UART2.c ****             }
 608:Generated_Source\PSoC4/UART2.c ****         }
 609:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/UART2.c **** 
 611:Generated_Source\PSoC4/UART2.c ****         return(rxData);
 727              		.loc 1 611 0
 728 00a6 FB1D     		adds	r3, r7, #7
 729 00a8 1B78     		ldrb	r3, [r3]
 612:Generated_Source\PSoC4/UART2.c ****     }
 730              		.loc 1 612 0
 731 00aa 1800     		movs	r0, r3
 732 00ac BD46     		mov	sp, r7
 733 00ae 02B0     		add	sp, sp, #8
 734              		@ sp needed
 735 00b0 80BD     		pop	{r7, pc}
 736              	.L42:
 737 00b2 C046     		.align	2
 738              	.L41:
 739 00b4 00000000 		.word	UART2_rxBufferRead
 740 00b8 00000000 		.word	UART2_rxBufferWrite
 741 00bc 00000000 		.word	UART2_rxBufferLoopDetect
 742 00c0 00000000 		.word	UART2_rxBuffer
 743 00c4 60000F40 		.word	1074724960
 744 00c8 41000F40 		.word	1074724929
 745              		.cfi_endproc
 746              	.LFE11:
 747              		.size	UART2_GetChar, .-UART2_GetChar
 748              		.section	.text.UART2_GetByte,"ax",%progbits
 749              		.align	2
 750              		.global	UART2_GetByte
 751              		.code	16
 752              		.thumb_func
 753              		.type	UART2_GetByte, %function
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 25


 754              	UART2_GetByte:
 755              	.LFB12:
 613:Generated_Source\PSoC4/UART2.c **** 
 614:Generated_Source\PSoC4/UART2.c **** 
 615:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_GetByte
 617:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/UART2.c ****     *
 619:Generated_Source\PSoC4/UART2.c ****     * Summary:
 620:Generated_Source\PSoC4/UART2.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/UART2.c ****     *  condition.
 622:Generated_Source\PSoC4/UART2.c ****     *
 623:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 624:Generated_Source\PSoC4/UART2.c ****     *  None.
 625:Generated_Source\PSoC4/UART2.c ****     *
 626:Generated_Source\PSoC4/UART2.c ****     * Return:
 627:Generated_Source\PSoC4/UART2.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/UART2.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/UART2.c ****     *
 630:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
 631:Generated_Source\PSoC4/UART2.c ****     *  No.
 632:Generated_Source\PSoC4/UART2.c ****     *
 633:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/UART2.c ****     uint16 UART2_GetByte(void) 
 635:Generated_Source\PSoC4/UART2.c ****     {
 756              		.loc 1 635 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 90B5     		push	{r4, r7, lr}
 761              		.cfi_def_cfa_offset 12
 762              		.cfi_offset 4, -12
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 83B0     		sub	sp, sp, #12
 766              		.cfi_def_cfa_offset 24
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC4/UART2.c ****         
 637:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/UART2.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/UART2.c ****         UART2_DisableRxInt();
 769              		.loc 1 640 0
 770 0006 0320     		movs	r0, #3
 771 0008 FFF7FEFF 		bl	CyIntDisable
 641:Generated_Source\PSoC4/UART2.c ****         locErrorStatus = (uint16)UART2_errorStatus;
 772              		.loc 1 641 0
 773 000c 0B4B     		ldr	r3, .L45
 774 000e 1A78     		ldrb	r2, [r3]
 775 0010 BB1D     		adds	r3, r7, #6
 776 0012 1A80     		strh	r2, [r3]
 642:Generated_Source\PSoC4/UART2.c ****         UART2_errorStatus = 0u;
 777              		.loc 1 642 0
 778 0014 094B     		ldr	r3, .L45
 779 0016 0022     		movs	r2, #0
 780 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 26


 643:Generated_Source\PSoC4/UART2.c ****         UART2_EnableRxInt();
 781              		.loc 1 643 0
 782 001a 0320     		movs	r0, #3
 783 001c FFF7FEFF 		bl	CyIntEnable
 644:Generated_Source\PSoC4/UART2.c ****         return ( (uint16)(locErrorStatus << 8u) | UART2_ReadRxData() );
 784              		.loc 1 644 0
 785 0020 BB1D     		adds	r3, r7, #6
 786 0022 1B88     		ldrh	r3, [r3]
 787 0024 1B02     		lsls	r3, r3, #8
 788 0026 9CB2     		uxth	r4, r3
 789 0028 FFF7FEFF 		bl	UART2_ReadRxData
 790 002c 0300     		movs	r3, r0
 791 002e 9BB2     		uxth	r3, r3
 792 0030 2343     		orrs	r3, r4
 793 0032 9BB2     		uxth	r3, r3
 645:Generated_Source\PSoC4/UART2.c ****     #else
 646:Generated_Source\PSoC4/UART2.c ****         return ( ((uint16)UART2_ReadRxStatus() << 8u) | UART2_ReadRxData() );
 647:Generated_Source\PSoC4/UART2.c ****     #endif /* UART2_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/UART2.c ****         
 649:Generated_Source\PSoC4/UART2.c ****     }
 794              		.loc 1 649 0
 795 0034 1800     		movs	r0, r3
 796 0036 BD46     		mov	sp, r7
 797 0038 03B0     		add	sp, sp, #12
 798              		@ sp needed
 799 003a 90BD     		pop	{r4, r7, pc}
 800              	.L46:
 801              		.align	2
 802              	.L45:
 803 003c 00000000 		.word	UART2_errorStatus
 804              		.cfi_endproc
 805              	.LFE12:
 806              		.size	UART2_GetByte, .-UART2_GetByte
 807              		.section	.text.UART2_GetRxBufferSize,"ax",%progbits
 808              		.align	2
 809              		.global	UART2_GetRxBufferSize
 810              		.code	16
 811              		.thumb_func
 812              		.type	UART2_GetRxBufferSize, %function
 813              	UART2_GetRxBufferSize:
 814              	.LFB13:
 650:Generated_Source\PSoC4/UART2.c **** 
 651:Generated_Source\PSoC4/UART2.c **** 
 652:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_GetRxBufferSize
 654:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/UART2.c ****     *
 656:Generated_Source\PSoC4/UART2.c ****     * Summary:
 657:Generated_Source\PSoC4/UART2.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/UART2.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/UART2.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/UART2.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/UART2.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/UART2.c ****     *    account.
 663:Generated_Source\PSoC4/UART2.c ****     *
 664:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 665:Generated_Source\PSoC4/UART2.c ****     *  None.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 27


 666:Generated_Source\PSoC4/UART2.c ****     *
 667:Generated_Source\PSoC4/UART2.c ****     * Return:
 668:Generated_Source\PSoC4/UART2.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/UART2.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/UART2.c ****     *
 671:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 672:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/UART2.c ****     *
 676:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
 677:Generated_Source\PSoC4/UART2.c ****     *  No.
 678:Generated_Source\PSoC4/UART2.c ****     *
 679:Generated_Source\PSoC4/UART2.c ****     * Theory:
 680:Generated_Source\PSoC4/UART2.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/UART2.c ****     *
 682:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/UART2.c ****                                                             
 685:Generated_Source\PSoC4/UART2.c ****     {
 815              		.loc 1 685 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0000 80B5     		push	{r7, lr}
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 82B0     		sub	sp, sp, #8
 824              		.cfi_def_cfa_offset 16
 825 0004 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC4/UART2.c ****         uint8 size;
 687:Generated_Source\PSoC4/UART2.c **** 
 688:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/UART2.c **** 
 690:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/UART2.c ****         UART2_DisableRxInt();
 827              		.loc 1 691 0
 828 0006 0320     		movs	r0, #3
 829 0008 FFF7FEFF 		bl	CyIntDisable
 692:Generated_Source\PSoC4/UART2.c **** 
 693:Generated_Source\PSoC4/UART2.c ****         if(UART2_rxBufferRead == UART2_rxBufferWrite)
 830              		.loc 1 693 0
 831 000c 1D4B     		ldr	r3, .L54
 832 000e 1B78     		ldrb	r3, [r3]
 833 0010 DAB2     		uxtb	r2, r3
 834 0012 1D4B     		ldr	r3, .L54+4
 835 0014 1B78     		ldrb	r3, [r3]
 836 0016 DBB2     		uxtb	r3, r3
 837 0018 9A42     		cmp	r2, r3
 838 001a 0CD1     		bne	.L48
 694:Generated_Source\PSoC4/UART2.c ****         {
 695:Generated_Source\PSoC4/UART2.c ****             if(UART2_rxBufferLoopDetect != 0u)
 839              		.loc 1 695 0
 840 001c 1B4B     		ldr	r3, .L54+8
 841 001e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 28


 842 0020 DBB2     		uxtb	r3, r3
 843 0022 002B     		cmp	r3, #0
 844 0024 03D0     		beq	.L49
 696:Generated_Source\PSoC4/UART2.c ****             {
 697:Generated_Source\PSoC4/UART2.c ****                 size = UART2_RX_BUFFER_SIZE;
 845              		.loc 1 697 0
 846 0026 FB1D     		adds	r3, r7, #7
 847 0028 0822     		movs	r2, #8
 848 002a 1A70     		strb	r2, [r3]
 849 002c 20E0     		b	.L51
 850              	.L49:
 698:Generated_Source\PSoC4/UART2.c ****             }
 699:Generated_Source\PSoC4/UART2.c ****             else
 700:Generated_Source\PSoC4/UART2.c ****             {
 701:Generated_Source\PSoC4/UART2.c ****                 size = 0u;
 851              		.loc 1 701 0
 852 002e FB1D     		adds	r3, r7, #7
 853 0030 0022     		movs	r2, #0
 854 0032 1A70     		strb	r2, [r3]
 855 0034 1CE0     		b	.L51
 856              	.L48:
 702:Generated_Source\PSoC4/UART2.c ****             }
 703:Generated_Source\PSoC4/UART2.c ****         }
 704:Generated_Source\PSoC4/UART2.c ****         else if(UART2_rxBufferRead < UART2_rxBufferWrite)
 857              		.loc 1 704 0
 858 0036 134B     		ldr	r3, .L54
 859 0038 1B78     		ldrb	r3, [r3]
 860 003a DAB2     		uxtb	r2, r3
 861 003c 124B     		ldr	r3, .L54+4
 862 003e 1B78     		ldrb	r3, [r3]
 863 0040 DBB2     		uxtb	r3, r3
 864 0042 9A42     		cmp	r2, r3
 865 0044 09D2     		bcs	.L52
 705:Generated_Source\PSoC4/UART2.c ****         {
 706:Generated_Source\PSoC4/UART2.c ****             size = (UART2_rxBufferWrite - UART2_rxBufferRead);
 866              		.loc 1 706 0
 867 0046 104B     		ldr	r3, .L54+4
 868 0048 1B78     		ldrb	r3, [r3]
 869 004a D9B2     		uxtb	r1, r3
 870 004c 0D4B     		ldr	r3, .L54
 871 004e 1B78     		ldrb	r3, [r3]
 872 0050 DAB2     		uxtb	r2, r3
 873 0052 FB1D     		adds	r3, r7, #7
 874 0054 8A1A     		subs	r2, r1, r2
 875 0056 1A70     		strb	r2, [r3]
 876 0058 0AE0     		b	.L51
 877              	.L52:
 707:Generated_Source\PSoC4/UART2.c ****         }
 708:Generated_Source\PSoC4/UART2.c ****         else
 709:Generated_Source\PSoC4/UART2.c ****         {
 710:Generated_Source\PSoC4/UART2.c ****             size = (UART2_RX_BUFFER_SIZE - UART2_rxBufferRead) + UART2_rxBufferWrite;
 878              		.loc 1 710 0
 879 005a 0B4B     		ldr	r3, .L54+4
 880 005c 1B78     		ldrb	r3, [r3]
 881 005e DAB2     		uxtb	r2, r3
 882 0060 084B     		ldr	r3, .L54
 883 0062 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 29


 884 0064 DBB2     		uxtb	r3, r3
 885 0066 D31A     		subs	r3, r2, r3
 886 0068 DAB2     		uxtb	r2, r3
 887 006a FB1D     		adds	r3, r7, #7
 888 006c 0832     		adds	r2, r2, #8
 889 006e 1A70     		strb	r2, [r3]
 890              	.L51:
 711:Generated_Source\PSoC4/UART2.c ****         }
 712:Generated_Source\PSoC4/UART2.c **** 
 713:Generated_Source\PSoC4/UART2.c ****         UART2_EnableRxInt();
 891              		.loc 1 713 0
 892 0070 0320     		movs	r0, #3
 893 0072 FFF7FEFF 		bl	CyIntEnable
 714:Generated_Source\PSoC4/UART2.c **** 
 715:Generated_Source\PSoC4/UART2.c ****     #else
 716:Generated_Source\PSoC4/UART2.c **** 
 717:Generated_Source\PSoC4/UART2.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/UART2.c ****         size = ((UART2_RXSTATUS_REG & UART2_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC4/UART2.c **** 
 720:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/UART2.c **** 
 722:Generated_Source\PSoC4/UART2.c ****         return(size);
 894              		.loc 1 722 0
 895 0076 FB1D     		adds	r3, r7, #7
 896 0078 1B78     		ldrb	r3, [r3]
 723:Generated_Source\PSoC4/UART2.c ****     }
 897              		.loc 1 723 0
 898 007a 1800     		movs	r0, r3
 899 007c BD46     		mov	sp, r7
 900 007e 02B0     		add	sp, sp, #8
 901              		@ sp needed
 902 0080 80BD     		pop	{r7, pc}
 903              	.L55:
 904 0082 C046     		.align	2
 905              	.L54:
 906 0084 00000000 		.word	UART2_rxBufferRead
 907 0088 00000000 		.word	UART2_rxBufferWrite
 908 008c 00000000 		.word	UART2_rxBufferLoopDetect
 909              		.cfi_endproc
 910              	.LFE13:
 911              		.size	UART2_GetRxBufferSize, .-UART2_GetRxBufferSize
 912              		.section	.text.UART2_ClearRxBuffer,"ax",%progbits
 913              		.align	2
 914              		.global	UART2_ClearRxBuffer
 915              		.code	16
 916              		.thumb_func
 917              		.type	UART2_ClearRxBuffer, %function
 918              	UART2_ClearRxBuffer:
 919              	.LFB14:
 724:Generated_Source\PSoC4/UART2.c **** 
 725:Generated_Source\PSoC4/UART2.c **** 
 726:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_ClearRxBuffer
 728:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/UART2.c ****     *
 730:Generated_Source\PSoC4/UART2.c ****     * Summary:
 731:Generated_Source\PSoC4/UART2.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 30


 732:Generated_Source\PSoC4/UART2.c ****     *
 733:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 734:Generated_Source\PSoC4/UART2.c ****     *  None.
 735:Generated_Source\PSoC4/UART2.c ****     *
 736:Generated_Source\PSoC4/UART2.c ****     * Return:
 737:Generated_Source\PSoC4/UART2.c ****     *  None.
 738:Generated_Source\PSoC4/UART2.c ****     *
 739:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 740:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/UART2.c ****     *
 745:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
 746:Generated_Source\PSoC4/UART2.c ****     *  No.
 747:Generated_Source\PSoC4/UART2.c ****     *
 748:Generated_Source\PSoC4/UART2.c ****     * Theory:
 749:Generated_Source\PSoC4/UART2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/UART2.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/UART2.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/UART2.c ****     *
 753:Generated_Source\PSoC4/UART2.c ****     * Side Effects:
 754:Generated_Source\PSoC4/UART2.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/UART2.c ****     *
 756:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/UART2.c ****     void UART2_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/UART2.c ****     {
 920              		.loc 1 758 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 90B5     		push	{r4, r7, lr}
 925              		.cfi_def_cfa_offset 12
 926              		.cfi_offset 4, -12
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 83B0     		sub	sp, sp, #12
 930              		.cfi_def_cfa_offset 24
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC4/UART2.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/UART2.c **** 
 761:Generated_Source\PSoC4/UART2.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/UART2.c ****         enableInterrupts = CyEnterCriticalSection();
 933              		.loc 1 762 0
 934 0006 FC1D     		adds	r4, r7, #7
 935 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 936 000c 0300     		movs	r3, r0
 937 000e 2370     		strb	r3, [r4]
 763:Generated_Source\PSoC4/UART2.c ****         UART2_RXDATA_AUX_CTL_REG |= (uint8)  UART2_RX_FIFO_CLR;
 938              		.loc 1 763 0
 939 0010 154A     		ldr	r2, .L57
 940 0012 154B     		ldr	r3, .L57
 941 0014 1B78     		ldrb	r3, [r3]
 942 0016 DBB2     		uxtb	r3, r3
 943 0018 0121     		movs	r1, #1
 944 001a 0B43     		orrs	r3, r1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 31


 945 001c DBB2     		uxtb	r3, r3
 946 001e 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC4/UART2.c ****         UART2_RXDATA_AUX_CTL_REG &= (uint8) ~UART2_RX_FIFO_CLR;
 947              		.loc 1 764 0
 948 0020 114A     		ldr	r2, .L57
 949 0022 114B     		ldr	r3, .L57
 950 0024 1B78     		ldrb	r3, [r3]
 951 0026 DBB2     		uxtb	r3, r3
 952 0028 0121     		movs	r1, #1
 953 002a 8B43     		bics	r3, r1
 954 002c DBB2     		uxtb	r3, r3
 955 002e 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC4/UART2.c ****         CyExitCriticalSection(enableInterrupts);
 956              		.loc 1 765 0
 957 0030 FB1D     		adds	r3, r7, #7
 958 0032 1B78     		ldrb	r3, [r3]
 959 0034 1800     		movs	r0, r3
 960 0036 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC4/UART2.c **** 
 767:Generated_Source\PSoC4/UART2.c ****     #if (UART2_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/UART2.c **** 
 769:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/UART2.c ****         UART2_DisableRxInt();
 961              		.loc 1 770 0
 962 003a 0320     		movs	r0, #3
 963 003c FFF7FEFF 		bl	CyIntDisable
 771:Generated_Source\PSoC4/UART2.c **** 
 772:Generated_Source\PSoC4/UART2.c ****         UART2_rxBufferRead = 0u;
 964              		.loc 1 772 0
 965 0040 0A4B     		ldr	r3, .L57+4
 966 0042 0022     		movs	r2, #0
 967 0044 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC4/UART2.c ****         UART2_rxBufferWrite = 0u;
 968              		.loc 1 773 0
 969 0046 0A4B     		ldr	r3, .L57+8
 970 0048 0022     		movs	r2, #0
 971 004a 1A70     		strb	r2, [r3]
 774:Generated_Source\PSoC4/UART2.c ****         UART2_rxBufferLoopDetect = 0u;
 972              		.loc 1 774 0
 973 004c 094B     		ldr	r3, .L57+12
 974 004e 0022     		movs	r2, #0
 975 0050 1A70     		strb	r2, [r3]
 775:Generated_Source\PSoC4/UART2.c ****         UART2_rxBufferOverflow = 0u;
 976              		.loc 1 775 0
 977 0052 094B     		ldr	r3, .L57+16
 978 0054 0022     		movs	r2, #0
 979 0056 1A70     		strb	r2, [r3]
 776:Generated_Source\PSoC4/UART2.c **** 
 777:Generated_Source\PSoC4/UART2.c ****         UART2_EnableRxInt();
 980              		.loc 1 777 0
 981 0058 0320     		movs	r0, #3
 982 005a FFF7FEFF 		bl	CyIntEnable
 778:Generated_Source\PSoC4/UART2.c **** 
 779:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/UART2.c **** 
 781:Generated_Source\PSoC4/UART2.c ****     }
 983              		.loc 1 781 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 32


 984 005e C046     		nop
 985 0060 BD46     		mov	sp, r7
 986 0062 03B0     		add	sp, sp, #12
 987              		@ sp needed
 988 0064 90BD     		pop	{r4, r7, pc}
 989              	.L58:
 990 0066 C046     		.align	2
 991              	.L57:
 992 0068 91000F40 		.word	1074725009
 993 006c 00000000 		.word	UART2_rxBufferRead
 994 0070 00000000 		.word	UART2_rxBufferWrite
 995 0074 00000000 		.word	UART2_rxBufferLoopDetect
 996 0078 00000000 		.word	UART2_rxBufferOverflow
 997              		.cfi_endproc
 998              	.LFE14:
 999              		.size	UART2_ClearRxBuffer, .-UART2_ClearRxBuffer
 1000              		.section	.text.UART2_SetRxAddressMode,"ax",%progbits
 1001              		.align	2
 1002              		.global	UART2_SetRxAddressMode
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	UART2_SetRxAddressMode, %function
 1006              	UART2_SetRxAddressMode:
 1007              	.LFB15:
 782:Generated_Source\PSoC4/UART2.c **** 
 783:Generated_Source\PSoC4/UART2.c **** 
 784:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetRxAddressMode
 786:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/UART2.c ****     *
 788:Generated_Source\PSoC4/UART2.c ****     * Summary:
 789:Generated_Source\PSoC4/UART2.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/UART2.c ****     *  UART.
 791:Generated_Source\PSoC4/UART2.c ****     *
 792:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 793:Generated_Source\PSoC4/UART2.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/UART2.c ****     *  UART2__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/UART2.c ****     *                                               detection
 796:Generated_Source\PSoC4/UART2.c ****     *  UART2__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/UART2.c ****     *                                               address detection
 798:Generated_Source\PSoC4/UART2.c ****     *  UART2__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/UART2.c ****     *                                               detection
 800:Generated_Source\PSoC4/UART2.c ****     *  UART2__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/UART2.c ****     *                                               address detection
 802:Generated_Source\PSoC4/UART2.c ****     *  UART2__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/UART2.c ****     *
 804:Generated_Source\PSoC4/UART2.c ****     * Return:
 805:Generated_Source\PSoC4/UART2.c ****     *  None.
 806:Generated_Source\PSoC4/UART2.c ****     *
 807:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 808:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/UART2.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/UART2.c ****     *  UART2_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/UART2.c ****     *
 812:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/UART2.c ****     void UART2_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/UART2.c ****                                                         
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 33


 815:Generated_Source\PSoC4/UART2.c ****     {
 1008              		.loc 1 815 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 82B0     		sub	sp, sp, #8
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 1020 0006 0200     		movs	r2, r0
 1021 0008 FB1D     		adds	r3, r7, #7
 1022 000a 1A70     		strb	r2, [r3]
 816:Generated_Source\PSoC4/UART2.c ****         #if(UART2_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/UART2.c ****             #if(UART2_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/UART2.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/UART2.c ****                 {
 820:Generated_Source\PSoC4/UART2.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/UART2.c ****                 }
 822:Generated_Source\PSoC4/UART2.c ****             #else /* UART2_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/UART2.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/UART2.c ****                 tmpCtrl = UART2_CONTROL_REG & (uint8)~UART2_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/UART2.c ****                 tmpCtrl |= (uint8)(addressMode << UART2_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/UART2.c ****                 UART2_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/UART2.c **** 
 828:Generated_Source\PSoC4/UART2.c ****                 #if(UART2_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/UART2.c ****                    (UART2_RXBUFFERSIZE > UART2_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/UART2.c ****                     UART2_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/UART2.c ****                     UART2_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/UART2.c ****                 #endif /* End UART2_RXBUFFERSIZE > UART2_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/UART2.c ****             #endif /* End UART2_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/UART2.c ****         #else /* UART2_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/UART2.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/UART2.c ****             {
 837:Generated_Source\PSoC4/UART2.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/UART2.c ****             }
 839:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/UART2.c ****     }
 1023              		.loc 1 840 0
 1024 000c C046     		nop
 1025 000e BD46     		mov	sp, r7
 1026 0010 02B0     		add	sp, sp, #8
 1027              		@ sp needed
 1028 0012 80BD     		pop	{r7, pc}
 1029              		.cfi_endproc
 1030              	.LFE15:
 1031              		.size	UART2_SetRxAddressMode, .-UART2_SetRxAddressMode
 1032              		.section	.text.UART2_SetRxAddress1,"ax",%progbits
 1033              		.align	2
 1034              		.global	UART2_SetRxAddress1
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	UART2_SetRxAddress1, %function
 1038              	UART2_SetRxAddress1:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 34


 1039              	.LFB16:
 841:Generated_Source\PSoC4/UART2.c **** 
 842:Generated_Source\PSoC4/UART2.c **** 
 843:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetRxAddress1
 845:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/UART2.c ****     *
 847:Generated_Source\PSoC4/UART2.c ****     * Summary:
 848:Generated_Source\PSoC4/UART2.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/UART2.c ****     *
 850:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 851:Generated_Source\PSoC4/UART2.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/UART2.c ****     *
 853:Generated_Source\PSoC4/UART2.c ****     * Return:
 854:Generated_Source\PSoC4/UART2.c ****     *  None.
 855:Generated_Source\PSoC4/UART2.c ****     *
 856:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/UART2.c ****     void UART2_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/UART2.c ****     {
 1040              		.loc 1 858 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 8
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 82B0     		sub	sp, sp, #8
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 0200     		movs	r2, r0
 1053 0008 FB1D     		adds	r3, r7, #7
 1054 000a 1A70     		strb	r2, [r3]
 859:Generated_Source\PSoC4/UART2.c ****         UART2_RXADDRESS1_REG = address;
 1055              		.loc 1 859 0
 1056 000c 034A     		ldr	r2, .L61
 1057 000e FB1D     		adds	r3, r7, #7
 1058 0010 1B78     		ldrb	r3, [r3]
 1059 0012 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC4/UART2.c ****     }
 1060              		.loc 1 860 0
 1061 0014 C046     		nop
 1062 0016 BD46     		mov	sp, r7
 1063 0018 02B0     		add	sp, sp, #8
 1064              		@ sp needed
 1065 001a 80BD     		pop	{r7, pc}
 1066              	.L62:
 1067              		.align	2
 1068              	.L61:
 1069 001c 21000F40 		.word	1074724897
 1070              		.cfi_endproc
 1071              	.LFE16:
 1072              		.size	UART2_SetRxAddress1, .-UART2_SetRxAddress1
 1073              		.section	.text.UART2_SetRxAddress2,"ax",%progbits
 1074              		.align	2
 1075              		.global	UART2_SetRxAddress2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 35


 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	UART2_SetRxAddress2, %function
 1079              	UART2_SetRxAddress2:
 1080              	.LFB17:
 861:Generated_Source\PSoC4/UART2.c **** 
 862:Generated_Source\PSoC4/UART2.c **** 
 863:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetRxAddress2
 865:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/UART2.c ****     *
 867:Generated_Source\PSoC4/UART2.c ****     * Summary:
 868:Generated_Source\PSoC4/UART2.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/UART2.c ****     *
 870:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 871:Generated_Source\PSoC4/UART2.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/UART2.c ****     *
 873:Generated_Source\PSoC4/UART2.c ****     * Return:
 874:Generated_Source\PSoC4/UART2.c ****     *  None.
 875:Generated_Source\PSoC4/UART2.c ****     *
 876:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/UART2.c ****     void UART2_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/UART2.c ****     {
 1081              		.loc 1 878 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085 0000 80B5     		push	{r7, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 82B0     		sub	sp, sp, #8
 1090              		.cfi_def_cfa_offset 16
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 0200     		movs	r2, r0
 1094 0008 FB1D     		adds	r3, r7, #7
 1095 000a 1A70     		strb	r2, [r3]
 879:Generated_Source\PSoC4/UART2.c ****         UART2_RXADDRESS2_REG = address;
 1096              		.loc 1 879 0
 1097 000c 034A     		ldr	r2, .L64
 1098 000e FB1D     		adds	r3, r7, #7
 1099 0010 1B78     		ldrb	r3, [r3]
 1100 0012 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC4/UART2.c ****     }
 1101              		.loc 1 880 0
 1102 0014 C046     		nop
 1103 0016 BD46     		mov	sp, r7
 1104 0018 02B0     		add	sp, sp, #8
 1105              		@ sp needed
 1106 001a 80BD     		pop	{r7, pc}
 1107              	.L65:
 1108              		.align	2
 1109              	.L64:
 1110 001c 31000F40 		.word	1074724913
 1111              		.cfi_endproc
 1112              	.LFE17:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 36


 1113              		.size	UART2_SetRxAddress2, .-UART2_SetRxAddress2
 1114              		.section	.text.UART2_SetTxInterruptMode,"ax",%progbits
 1115              		.align	2
 1116              		.global	UART2_SetTxInterruptMode
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	UART2_SetTxInterruptMode, %function
 1120              	UART2_SetTxInterruptMode:
 1121              	.LFB18:
 881:Generated_Source\PSoC4/UART2.c **** 
 882:Generated_Source\PSoC4/UART2.c **** #endif  /* UART2_RX_ENABLED || UART2_HD_ENABLED*/
 883:Generated_Source\PSoC4/UART2.c **** 
 884:Generated_Source\PSoC4/UART2.c **** 
 885:Generated_Source\PSoC4/UART2.c **** #if( (UART2_TX_ENABLED) || (UART2_HD_ENABLED) )
 886:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetTxInterruptMode
 888:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/UART2.c ****     *
 890:Generated_Source\PSoC4/UART2.c ****     * Summary:
 891:Generated_Source\PSoC4/UART2.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/UART2.c ****     *  interrupt.
 893:Generated_Source\PSoC4/UART2.c ****     *
 894:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 895:Generated_Source\PSoC4/UART2.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/UART2.c ****     *   UART2_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC4/UART2.c ****     *   UART2_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/UART2.c ****     *   UART2_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/UART2.c ****     *   UART2_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/UART2.c ****     *
 901:Generated_Source\PSoC4/UART2.c ****     * Return:
 902:Generated_Source\PSoC4/UART2.c ****     *  None.
 903:Generated_Source\PSoC4/UART2.c ****     *
 904:Generated_Source\PSoC4/UART2.c ****     * Theory:
 905:Generated_Source\PSoC4/UART2.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/UART2.c ****     *
 907:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/UART2.c ****     void UART2_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/UART2.c ****     {
 1122              		.loc 1 909 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 8
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126 0000 80B5     		push	{r7, lr}
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 82B0     		sub	sp, sp, #8
 1131              		.cfi_def_cfa_offset 16
 1132 0004 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 1134 0006 0200     		movs	r2, r0
 1135 0008 FB1D     		adds	r3, r7, #7
 1136 000a 1A70     		strb	r2, [r3]
 910:Generated_Source\PSoC4/UART2.c ****         UART2_TXSTATUS_MASK_REG = intSrc;
 1137              		.loc 1 910 0
 1138 000c 034A     		ldr	r2, .L67
 1139 000e FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 37


 1140 0010 1B78     		ldrb	r3, [r3]
 1141 0012 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC4/UART2.c ****     }
 1142              		.loc 1 911 0
 1143 0014 C046     		nop
 1144 0016 BD46     		mov	sp, r7
 1145 0018 02B0     		add	sp, sp, #8
 1146              		@ sp needed
 1147 001a 80BD     		pop	{r7, pc}
 1148              	.L68:
 1149              		.align	2
 1150              	.L67:
 1151 001c 82000F40 		.word	1074724994
 1152              		.cfi_endproc
 1153              	.LFE18:
 1154              		.size	UART2_SetTxInterruptMode, .-UART2_SetTxInterruptMode
 1155              		.section	.text.UART2_WriteTxData,"ax",%progbits
 1156              		.align	2
 1157              		.global	UART2_WriteTxData
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	UART2_WriteTxData, %function
 1161              	UART2_WriteTxData:
 1162              	.LFB19:
 912:Generated_Source\PSoC4/UART2.c **** 
 913:Generated_Source\PSoC4/UART2.c **** 
 914:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_WriteTxData
 916:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/UART2.c ****     *
 918:Generated_Source\PSoC4/UART2.c ****     * Summary:
 919:Generated_Source\PSoC4/UART2.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC4/UART2.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/UART2.c ****     *  separately.
 922:Generated_Source\PSoC4/UART2.c ****     *
 923:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 924:Generated_Source\PSoC4/UART2.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/UART2.c ****     *
 926:Generated_Source\PSoC4/UART2.c ****     * Return:
 927:Generated_Source\PSoC4/UART2.c ****     * None.
 928:Generated_Source\PSoC4/UART2.c ****     *
 929:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
 930:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/UART2.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/UART2.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/UART2.c ****     *    initialized.
 937:Generated_Source\PSoC4/UART2.c ****     *
 938:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
 939:Generated_Source\PSoC4/UART2.c ****     *  No.
 940:Generated_Source\PSoC4/UART2.c ****     *
 941:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/UART2.c ****     void UART2_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/UART2.c ****     {
 1163              		.loc 1 943 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 38


 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167 0000 80B5     		push	{r7, lr}
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 7, -8
 1170              		.cfi_offset 14, -4
 1171 0002 82B0     		sub	sp, sp, #8
 1172              		.cfi_def_cfa_offset 16
 1173 0004 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 1175 0006 0200     		movs	r2, r0
 1176 0008 FB1D     		adds	r3, r7, #7
 1177 000a 1A70     		strb	r2, [r3]
 944:Generated_Source\PSoC4/UART2.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/UART2.c ****         if(UART2_initVar != 0u)
 1178              		.loc 1 945 0
 1179 000c 054B     		ldr	r3, .L72
 1180 000e 1B78     		ldrb	r3, [r3]
 1181 0010 002B     		cmp	r3, #0
 1182 0012 03D0     		beq	.L71
 946:Generated_Source\PSoC4/UART2.c ****         {
 947:Generated_Source\PSoC4/UART2.c ****         #if (UART2_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC4/UART2.c **** 
 949:Generated_Source\PSoC4/UART2.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/UART2.c ****             UART2_DisableTxInt();
 951:Generated_Source\PSoC4/UART2.c **** 
 952:Generated_Source\PSoC4/UART2.c ****             if( (UART2_txBufferRead == UART2_txBufferWrite) &&
 953:Generated_Source\PSoC4/UART2.c ****                 ((UART2_TXSTATUS_REG & UART2_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/UART2.c ****             {
 955:Generated_Source\PSoC4/UART2.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/UART2.c ****                 UART2_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC4/UART2.c ****             }
 958:Generated_Source\PSoC4/UART2.c ****             else
 959:Generated_Source\PSoC4/UART2.c ****             {
 960:Generated_Source\PSoC4/UART2.c ****                 if(UART2_txBufferWrite >= UART2_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/UART2.c ****                 {
 962:Generated_Source\PSoC4/UART2.c ****                     UART2_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/UART2.c ****                 }
 964:Generated_Source\PSoC4/UART2.c **** 
 965:Generated_Source\PSoC4/UART2.c ****                 UART2_txBuffer[UART2_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/UART2.c **** 
 967:Generated_Source\PSoC4/UART2.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/UART2.c ****                 UART2_txBufferWrite++;
 969:Generated_Source\PSoC4/UART2.c ****             }
 970:Generated_Source\PSoC4/UART2.c **** 
 971:Generated_Source\PSoC4/UART2.c ****             UART2_EnableTxInt();
 972:Generated_Source\PSoC4/UART2.c **** 
 973:Generated_Source\PSoC4/UART2.c ****         #else
 974:Generated_Source\PSoC4/UART2.c **** 
 975:Generated_Source\PSoC4/UART2.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/UART2.c ****             UART2_TXDATA_REG = txDataByte;
 1183              		.loc 1 976 0
 1184 0014 044A     		ldr	r2, .L72+4
 1185 0016 FB1D     		adds	r3, r7, #7
 1186 0018 1B78     		ldrb	r3, [r3]
 1187 001a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 39


 1188              	.L71:
 977:Generated_Source\PSoC4/UART2.c **** 
 978:Generated_Source\PSoC4/UART2.c ****         #endif /*(UART2_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/UART2.c ****         }
 980:Generated_Source\PSoC4/UART2.c ****     }
 1189              		.loc 1 980 0
 1190 001c C046     		nop
 1191 001e BD46     		mov	sp, r7
 1192 0020 02B0     		add	sp, sp, #8
 1193              		@ sp needed
 1194 0022 80BD     		pop	{r7, pc}
 1195              	.L73:
 1196              		.align	2
 1197              	.L72:
 1198 0024 00000000 		.word	UART2_initVar
 1199 0028 42000F40 		.word	1074724930
 1200              		.cfi_endproc
 1201              	.LFE19:
 1202              		.size	UART2_WriteTxData, .-UART2_WriteTxData
 1203              		.section	.text.UART2_ReadTxStatus,"ax",%progbits
 1204              		.align	2
 1205              		.global	UART2_ReadTxStatus
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	UART2_ReadTxStatus, %function
 1209              	UART2_ReadTxStatus:
 1210              	.LFB20:
 981:Generated_Source\PSoC4/UART2.c **** 
 982:Generated_Source\PSoC4/UART2.c **** 
 983:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_ReadTxStatus
 985:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
 986:Generated_Source\PSoC4/UART2.c ****     *
 987:Generated_Source\PSoC4/UART2.c ****     * Summary:
 988:Generated_Source\PSoC4/UART2.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/UART2.c ****     *
 990:Generated_Source\PSoC4/UART2.c ****     * Parameters:
 991:Generated_Source\PSoC4/UART2.c ****     *  None.
 992:Generated_Source\PSoC4/UART2.c ****     *
 993:Generated_Source\PSoC4/UART2.c ****     * Return:
 994:Generated_Source\PSoC4/UART2.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/UART2.c ****     *
 996:Generated_Source\PSoC4/UART2.c ****     * Theory:
 997:Generated_Source\PSoC4/UART2.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/UART2.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/UART2.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/UART2.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/UART2.c ****     *
1002:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/UART2.c ****     {
 1211              		.loc 1 1004 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215 0000 80B5     		push	{r7, lr}
 1216              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 40


 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 00AF     		add	r7, sp, #0
 1220              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC4/UART2.c ****         return(UART2_TXSTATUS_REG);
 1221              		.loc 1 1005 0
 1222 0004 024B     		ldr	r3, .L76
 1223 0006 1B78     		ldrb	r3, [r3]
 1224 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC4/UART2.c ****     }
 1225              		.loc 1 1006 0
 1226 000a 1800     		movs	r0, r3
 1227 000c BD46     		mov	sp, r7
 1228              		@ sp needed
 1229 000e 80BD     		pop	{r7, pc}
 1230              	.L77:
 1231              		.align	2
 1232              	.L76:
 1233 0010 62000F40 		.word	1074724962
 1234              		.cfi_endproc
 1235              	.LFE20:
 1236              		.size	UART2_ReadTxStatus, .-UART2_ReadTxStatus
 1237              		.section	.text.UART2_PutChar,"ax",%progbits
 1238              		.align	2
 1239              		.global	UART2_PutChar
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	UART2_PutChar, %function
 1243              	UART2_PutChar:
 1244              	.LFB21:
1007:Generated_Source\PSoC4/UART2.c **** 
1008:Generated_Source\PSoC4/UART2.c **** 
1009:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_PutChar
1011:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/UART2.c ****     *
1013:Generated_Source\PSoC4/UART2.c ****     * Summary:
1014:Generated_Source\PSoC4/UART2.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/UART2.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/UART2.c ****     *  hold the data.
1017:Generated_Source\PSoC4/UART2.c ****     *
1018:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1019:Generated_Source\PSoC4/UART2.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/UART2.c ****     *
1021:Generated_Source\PSoC4/UART2.c ****     * Return:
1022:Generated_Source\PSoC4/UART2.c ****     *  None.
1023:Generated_Source\PSoC4/UART2.c ****     *
1024:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1025:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/UART2.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/UART2.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/UART2.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/UART2.c ****     *     initialized.
1033:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 41


1034:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1035:Generated_Source\PSoC4/UART2.c ****     *  No.
1036:Generated_Source\PSoC4/UART2.c ****     *
1037:Generated_Source\PSoC4/UART2.c ****     * Theory:
1038:Generated_Source\PSoC4/UART2.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/UART2.c ****     *
1040:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/UART2.c ****     void UART2_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/UART2.c ****     {
 1245              		.loc 1 1042 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 8
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249 0000 80B5     		push	{r7, lr}
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 82B0     		sub	sp, sp, #8
 1254              		.cfi_def_cfa_offset 16
 1255 0004 00AF     		add	r7, sp, #0
 1256              		.cfi_def_cfa_register 7
 1257 0006 0200     		movs	r2, r0
 1258 0008 FB1D     		adds	r3, r7, #7
 1259 000a 1A70     		strb	r2, [r3]
1043:Generated_Source\PSoC4/UART2.c ****     #if (UART2_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/UART2.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/UART2.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/UART2.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/UART2.c ****         */
1048:Generated_Source\PSoC4/UART2.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/UART2.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/UART2.c **** 
1051:Generated_Source\PSoC4/UART2.c ****         do
1052:Generated_Source\PSoC4/UART2.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/UART2.c **** 
1054:Generated_Source\PSoC4/UART2.c ****         #if ((UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/UART2.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/UART2.c ****             UART2_DisableTxInt();
1057:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/UART2.c **** 
1059:Generated_Source\PSoC4/UART2.c ****             locTxBufferWrite = UART2_txBufferWrite;
1060:Generated_Source\PSoC4/UART2.c ****             locTxBufferRead  = UART2_txBufferRead;
1061:Generated_Source\PSoC4/UART2.c **** 
1062:Generated_Source\PSoC4/UART2.c ****         #if ((UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/UART2.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/UART2.c ****             UART2_EnableTxInt();
1065:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC4/UART2.c ****         }
1067:Generated_Source\PSoC4/UART2.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/UART2.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/UART2.c ****                                 (uint8)(UART2_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/UART2.c **** 
1071:Generated_Source\PSoC4/UART2.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC4/UART2.c ****             ((UART2_TXSTATUS_REG & UART2_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/UART2.c ****         {
1074:Generated_Source\PSoC4/UART2.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/UART2.c ****             UART2_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 42


1076:Generated_Source\PSoC4/UART2.c ****         }
1077:Generated_Source\PSoC4/UART2.c ****         else
1078:Generated_Source\PSoC4/UART2.c ****         {
1079:Generated_Source\PSoC4/UART2.c ****             if(locTxBufferWrite >= UART2_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/UART2.c ****             {
1081:Generated_Source\PSoC4/UART2.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/UART2.c ****             }
1083:Generated_Source\PSoC4/UART2.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/UART2.c ****             UART2_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/UART2.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/UART2.c **** 
1087:Generated_Source\PSoC4/UART2.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/UART2.c ****         #if ((UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/UART2.c ****             UART2_DisableTxInt();
1090:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/UART2.c **** 
1092:Generated_Source\PSoC4/UART2.c ****             UART2_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/UART2.c **** 
1094:Generated_Source\PSoC4/UART2.c ****         #if ((UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/UART2.c ****             UART2_EnableTxInt();
1096:Generated_Source\PSoC4/UART2.c ****         #endif /* (UART2_TX_BUFFER_SIZE > UART2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/UART2.c **** 
1098:Generated_Source\PSoC4/UART2.c ****             if(0u != (UART2_TXSTATUS_REG & UART2_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/UART2.c ****             {
1100:Generated_Source\PSoC4/UART2.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/UART2.c ****                 UART2_SetPendingTxInt();
1102:Generated_Source\PSoC4/UART2.c ****             }
1103:Generated_Source\PSoC4/UART2.c ****         }
1104:Generated_Source\PSoC4/UART2.c **** 
1105:Generated_Source\PSoC4/UART2.c ****     #else
1106:Generated_Source\PSoC4/UART2.c **** 
1107:Generated_Source\PSoC4/UART2.c ****         while((UART2_TXSTATUS_REG & UART2_TX_STS_FIFO_FULL) != 0u)
 1260              		.loc 1 1107 0
 1261 000c C046     		nop
 1262              	.L79:
 1263              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1264 000e 074B     		ldr	r3, .L80
 1265 0010 1B78     		ldrb	r3, [r3]
 1266 0012 DBB2     		uxtb	r3, r3
 1267 0014 1A00     		movs	r2, r3
 1268 0016 0423     		movs	r3, #4
 1269 0018 1340     		ands	r3, r2
 1270 001a F8D1     		bne	.L79
1108:Generated_Source\PSoC4/UART2.c ****         {
1109:Generated_Source\PSoC4/UART2.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/UART2.c ****         }
1111:Generated_Source\PSoC4/UART2.c **** 
1112:Generated_Source\PSoC4/UART2.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/UART2.c ****         UART2_TXDATA_REG = txDataByte;
 1271              		.loc 1 1113 0 is_stmt 1
 1272 001c 044A     		ldr	r2, .L80+4
 1273 001e FB1D     		adds	r3, r7, #7
 1274 0020 1B78     		ldrb	r3, [r3]
 1275 0022 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC4/UART2.c **** 
1115:Generated_Source\PSoC4/UART2.c ****     #endif /* UART2_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/UART2.c ****     }
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 43


 1276              		.loc 1 1116 0
 1277 0024 C046     		nop
 1278 0026 BD46     		mov	sp, r7
 1279 0028 02B0     		add	sp, sp, #8
 1280              		@ sp needed
 1281 002a 80BD     		pop	{r7, pc}
 1282              	.L81:
 1283              		.align	2
 1284              	.L80:
 1285 002c 62000F40 		.word	1074724962
 1286 0030 42000F40 		.word	1074724930
 1287              		.cfi_endproc
 1288              	.LFE21:
 1289              		.size	UART2_PutChar, .-UART2_PutChar
 1290              		.section	.text.UART2_PutString,"ax",%progbits
 1291              		.align	2
 1292              		.global	UART2_PutString
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	UART2_PutString, %function
 1296              	UART2_PutString:
 1297              	.LFB22:
1117:Generated_Source\PSoC4/UART2.c **** 
1118:Generated_Source\PSoC4/UART2.c **** 
1119:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_PutString
1121:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/UART2.c ****     *
1123:Generated_Source\PSoC4/UART2.c ****     * Summary:
1124:Generated_Source\PSoC4/UART2.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/UART2.c ****     *
1126:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1127:Generated_Source\PSoC4/UART2.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/UART2.c ****     *
1129:Generated_Source\PSoC4/UART2.c ****     * Return:
1130:Generated_Source\PSoC4/UART2.c ****     *  None.
1131:Generated_Source\PSoC4/UART2.c ****     *
1132:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1133:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/UART2.c ****     *     initialized.
1135:Generated_Source\PSoC4/UART2.c ****     *
1136:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1137:Generated_Source\PSoC4/UART2.c ****     *  No.
1138:Generated_Source\PSoC4/UART2.c ****     *
1139:Generated_Source\PSoC4/UART2.c ****     * Theory:
1140:Generated_Source\PSoC4/UART2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/UART2.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/UART2.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/UART2.c ****     *
1144:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/UART2.c ****     void UART2_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/UART2.c ****     {
 1298              		.loc 1 1146 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 16
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 44


 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 7, -8
 1305              		.cfi_offset 14, -4
 1306 0002 84B0     		sub	sp, sp, #16
 1307              		.cfi_def_cfa_offset 24
 1308 0004 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 1310 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC4/UART2.c ****         uint16 bufIndex = 0u;
 1311              		.loc 1 1147 0
 1312 0008 0E23     		movs	r3, #14
 1313 000a FB18     		adds	r3, r7, r3
 1314 000c 0022     		movs	r2, #0
 1315 000e 1A80     		strh	r2, [r3]
1148:Generated_Source\PSoC4/UART2.c **** 
1149:Generated_Source\PSoC4/UART2.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/UART2.c ****         if(UART2_initVar != 0u)
 1316              		.loc 1 1150 0
 1317 0010 104B     		ldr	r3, .L87
 1318 0012 1B78     		ldrb	r3, [r3]
 1319 0014 002B     		cmp	r3, #0
 1320 0016 18D0     		beq	.L86
1151:Generated_Source\PSoC4/UART2.c ****         {
1152:Generated_Source\PSoC4/UART2.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC4/UART2.c ****             while(string[bufIndex] != (char8) 0)
 1321              		.loc 1 1153 0
 1322 0018 0FE0     		b	.L84
 1323              	.L85:
1154:Generated_Source\PSoC4/UART2.c ****             {
1155:Generated_Source\PSoC4/UART2.c ****                 UART2_PutChar((uint8)string[bufIndex]);
 1324              		.loc 1 1155 0
 1325 001a 0E23     		movs	r3, #14
 1326 001c FB18     		adds	r3, r7, r3
 1327 001e 1B88     		ldrh	r3, [r3]
 1328 0020 7A68     		ldr	r2, [r7, #4]
 1329 0022 D318     		adds	r3, r2, r3
 1330 0024 1B78     		ldrb	r3, [r3]
 1331 0026 1800     		movs	r0, r3
 1332 0028 FFF7FEFF 		bl	UART2_PutChar
1156:Generated_Source\PSoC4/UART2.c ****                 bufIndex++;
 1333              		.loc 1 1156 0
 1334 002c 0E23     		movs	r3, #14
 1335 002e FB18     		adds	r3, r7, r3
 1336 0030 1A88     		ldrh	r2, [r3]
 1337 0032 0E23     		movs	r3, #14
 1338 0034 FB18     		adds	r3, r7, r3
 1339 0036 0132     		adds	r2, r2, #1
 1340 0038 1A80     		strh	r2, [r3]
 1341              	.L84:
1153:Generated_Source\PSoC4/UART2.c ****             {
 1342              		.loc 1 1153 0
 1343 003a 0E23     		movs	r3, #14
 1344 003c FB18     		adds	r3, r7, r3
 1345 003e 1B88     		ldrh	r3, [r3]
 1346 0040 7A68     		ldr	r2, [r7, #4]
 1347 0042 D318     		adds	r3, r2, r3
 1348 0044 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 45


 1349 0046 002B     		cmp	r3, #0
 1350 0048 E7D1     		bne	.L85
 1351              	.L86:
1157:Generated_Source\PSoC4/UART2.c ****             }
1158:Generated_Source\PSoC4/UART2.c ****         }
1159:Generated_Source\PSoC4/UART2.c ****     }
 1352              		.loc 1 1159 0
 1353 004a C046     		nop
 1354 004c BD46     		mov	sp, r7
 1355 004e 04B0     		add	sp, sp, #16
 1356              		@ sp needed
 1357 0050 80BD     		pop	{r7, pc}
 1358              	.L88:
 1359 0052 C046     		.align	2
 1360              	.L87:
 1361 0054 00000000 		.word	UART2_initVar
 1362              		.cfi_endproc
 1363              	.LFE22:
 1364              		.size	UART2_PutString, .-UART2_PutString
 1365              		.section	.text.UART2_PutArray,"ax",%progbits
 1366              		.align	2
 1367              		.global	UART2_PutArray
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	UART2_PutArray, %function
 1371              	UART2_PutArray:
 1372              	.LFB23:
1160:Generated_Source\PSoC4/UART2.c **** 
1161:Generated_Source\PSoC4/UART2.c **** 
1162:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_PutArray
1164:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1165:Generated_Source\PSoC4/UART2.c ****     *
1166:Generated_Source\PSoC4/UART2.c ****     * Summary:
1167:Generated_Source\PSoC4/UART2.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/UART2.c ****     *  transmission.
1169:Generated_Source\PSoC4/UART2.c ****     *
1170:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1171:Generated_Source\PSoC4/UART2.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/UART2.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/UART2.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/UART2.c ****     *
1175:Generated_Source\PSoC4/UART2.c ****     * Return:
1176:Generated_Source\PSoC4/UART2.c ****     *  None.
1177:Generated_Source\PSoC4/UART2.c ****     *
1178:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1179:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/UART2.c ****     *     initialized.
1181:Generated_Source\PSoC4/UART2.c ****     *
1182:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1183:Generated_Source\PSoC4/UART2.c ****     *  No.
1184:Generated_Source\PSoC4/UART2.c ****     *
1185:Generated_Source\PSoC4/UART2.c ****     * Theory:
1186:Generated_Source\PSoC4/UART2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/UART2.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/UART2.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 46


1190:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/UART2.c ****     void UART2_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/UART2.c ****                                                                     
1193:Generated_Source\PSoC4/UART2.c ****     {
 1373              		.loc 1 1193 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 16
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 84B0     		sub	sp, sp, #16
 1382              		.cfi_def_cfa_offset 24
 1383 0004 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 1385 0006 7860     		str	r0, [r7, #4]
 1386 0008 0A00     		movs	r2, r1
 1387 000a FB1C     		adds	r3, r7, #3
 1388 000c 1A70     		strb	r2, [r3]
1194:Generated_Source\PSoC4/UART2.c ****         uint8 bufIndex = 0u;
 1389              		.loc 1 1194 0
 1390 000e 0F23     		movs	r3, #15
 1391 0010 FB18     		adds	r3, r7, r3
 1392 0012 0022     		movs	r2, #0
 1393 0014 1A70     		strb	r2, [r3]
1195:Generated_Source\PSoC4/UART2.c **** 
1196:Generated_Source\PSoC4/UART2.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC4/UART2.c ****         if(UART2_initVar != 0u)
 1394              		.loc 1 1197 0
 1395 0016 104B     		ldr	r3, .L94
 1396 0018 1B78     		ldrb	r3, [r3]
 1397 001a 002B     		cmp	r3, #0
 1398 001c 17D0     		beq	.L93
1198:Generated_Source\PSoC4/UART2.c ****         {
1199:Generated_Source\PSoC4/UART2.c ****             while(bufIndex < byteCount)
 1399              		.loc 1 1199 0
 1400 001e 0FE0     		b	.L91
 1401              	.L92:
1200:Generated_Source\PSoC4/UART2.c ****             {
1201:Generated_Source\PSoC4/UART2.c ****                 UART2_PutChar(string[bufIndex]);
 1402              		.loc 1 1201 0
 1403 0020 0F23     		movs	r3, #15
 1404 0022 FB18     		adds	r3, r7, r3
 1405 0024 1B78     		ldrb	r3, [r3]
 1406 0026 7A68     		ldr	r2, [r7, #4]
 1407 0028 D318     		adds	r3, r2, r3
 1408 002a 1B78     		ldrb	r3, [r3]
 1409 002c 1800     		movs	r0, r3
 1410 002e FFF7FEFF 		bl	UART2_PutChar
1202:Generated_Source\PSoC4/UART2.c ****                 bufIndex++;
 1411              		.loc 1 1202 0
 1412 0032 0F23     		movs	r3, #15
 1413 0034 FB18     		adds	r3, r7, r3
 1414 0036 1A78     		ldrb	r2, [r3]
 1415 0038 0F23     		movs	r3, #15
 1416 003a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 47


 1417 003c 0132     		adds	r2, r2, #1
 1418 003e 1A70     		strb	r2, [r3]
 1419              	.L91:
1199:Generated_Source\PSoC4/UART2.c ****             {
 1420              		.loc 1 1199 0
 1421 0040 0F23     		movs	r3, #15
 1422 0042 FA18     		adds	r2, r7, r3
 1423 0044 FB1C     		adds	r3, r7, #3
 1424 0046 1278     		ldrb	r2, [r2]
 1425 0048 1B78     		ldrb	r3, [r3]
 1426 004a 9A42     		cmp	r2, r3
 1427 004c E8D3     		bcc	.L92
 1428              	.L93:
1203:Generated_Source\PSoC4/UART2.c ****             }
1204:Generated_Source\PSoC4/UART2.c ****         }
1205:Generated_Source\PSoC4/UART2.c ****     }
 1429              		.loc 1 1205 0
 1430 004e C046     		nop
 1431 0050 BD46     		mov	sp, r7
 1432 0052 04B0     		add	sp, sp, #16
 1433              		@ sp needed
 1434 0054 80BD     		pop	{r7, pc}
 1435              	.L95:
 1436 0056 C046     		.align	2
 1437              	.L94:
 1438 0058 00000000 		.word	UART2_initVar
 1439              		.cfi_endproc
 1440              	.LFE23:
 1441              		.size	UART2_PutArray, .-UART2_PutArray
 1442              		.section	.text.UART2_PutCRLF,"ax",%progbits
 1443              		.align	2
 1444              		.global	UART2_PutCRLF
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	UART2_PutCRLF, %function
 1448              	UART2_PutCRLF:
 1449              	.LFB24:
1206:Generated_Source\PSoC4/UART2.c **** 
1207:Generated_Source\PSoC4/UART2.c **** 
1208:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_PutCRLF
1210:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/UART2.c ****     *
1212:Generated_Source\PSoC4/UART2.c ****     * Summary:
1213:Generated_Source\PSoC4/UART2.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/UART2.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/UART2.c ****     *
1216:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1217:Generated_Source\PSoC4/UART2.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/UART2.c ****     *
1219:Generated_Source\PSoC4/UART2.c ****     * Return:
1220:Generated_Source\PSoC4/UART2.c ****     *  None.
1221:Generated_Source\PSoC4/UART2.c ****     *
1222:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1223:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/UART2.c ****     *     initialized.
1225:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 48


1226:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1227:Generated_Source\PSoC4/UART2.c ****     *  No.
1228:Generated_Source\PSoC4/UART2.c ****     *
1229:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/UART2.c ****     void UART2_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/UART2.c ****     {
 1450              		.loc 1 1231 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 8
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454 0000 80B5     		push	{r7, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 7, -8
 1457              		.cfi_offset 14, -4
 1458 0002 82B0     		sub	sp, sp, #8
 1459              		.cfi_def_cfa_offset 16
 1460 0004 00AF     		add	r7, sp, #0
 1461              		.cfi_def_cfa_register 7
 1462 0006 0200     		movs	r2, r0
 1463 0008 FB1D     		adds	r3, r7, #7
 1464 000a 1A70     		strb	r2, [r3]
1232:Generated_Source\PSoC4/UART2.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/UART2.c ****         if(UART2_initVar != 0u)
 1465              		.loc 1 1233 0
 1466 000c 094B     		ldr	r3, .L99
 1467 000e 1B78     		ldrb	r3, [r3]
 1468 0010 002B     		cmp	r3, #0
 1469 0012 0AD0     		beq	.L98
1234:Generated_Source\PSoC4/UART2.c ****         {
1235:Generated_Source\PSoC4/UART2.c ****             UART2_PutChar(txDataByte);
 1470              		.loc 1 1235 0
 1471 0014 FB1D     		adds	r3, r7, #7
 1472 0016 1B78     		ldrb	r3, [r3]
 1473 0018 1800     		movs	r0, r3
 1474 001a FFF7FEFF 		bl	UART2_PutChar
1236:Generated_Source\PSoC4/UART2.c ****             UART2_PutChar(0x0Du);
 1475              		.loc 1 1236 0
 1476 001e 0D20     		movs	r0, #13
 1477 0020 FFF7FEFF 		bl	UART2_PutChar
1237:Generated_Source\PSoC4/UART2.c ****             UART2_PutChar(0x0Au);
 1478              		.loc 1 1237 0
 1479 0024 0A20     		movs	r0, #10
 1480 0026 FFF7FEFF 		bl	UART2_PutChar
 1481              	.L98:
1238:Generated_Source\PSoC4/UART2.c ****         }
1239:Generated_Source\PSoC4/UART2.c ****     }
 1482              		.loc 1 1239 0
 1483 002a C046     		nop
 1484 002c BD46     		mov	sp, r7
 1485 002e 02B0     		add	sp, sp, #8
 1486              		@ sp needed
 1487 0030 80BD     		pop	{r7, pc}
 1488              	.L100:
 1489 0032 C046     		.align	2
 1490              	.L99:
 1491 0034 00000000 		.word	UART2_initVar
 1492              		.cfi_endproc
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 49


 1493              	.LFE24:
 1494              		.size	UART2_PutCRLF, .-UART2_PutCRLF
 1495              		.section	.text.UART2_GetTxBufferSize,"ax",%progbits
 1496              		.align	2
 1497              		.global	UART2_GetTxBufferSize
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	UART2_GetTxBufferSize, %function
 1501              	UART2_GetTxBufferSize:
 1502              	.LFB25:
1240:Generated_Source\PSoC4/UART2.c **** 
1241:Generated_Source\PSoC4/UART2.c **** 
1242:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_GetTxBufferSize
1244:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/UART2.c ****     *
1246:Generated_Source\PSoC4/UART2.c ****     * Summary:
1247:Generated_Source\PSoC4/UART2.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/UART2.c ****     *  transmitted.
1249:Generated_Source\PSoC4/UART2.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/UART2.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/UART2.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/UART2.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/UART2.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/UART2.c ****     *
1255:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1256:Generated_Source\PSoC4/UART2.c ****     *  None.
1257:Generated_Source\PSoC4/UART2.c ****     *
1258:Generated_Source\PSoC4/UART2.c ****     * Return:
1259:Generated_Source\PSoC4/UART2.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/UART2.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/UART2.c ****     *
1262:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1263:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/UART2.c ****     *
1266:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1267:Generated_Source\PSoC4/UART2.c ****     *  No.
1268:Generated_Source\PSoC4/UART2.c ****     *
1269:Generated_Source\PSoC4/UART2.c ****     * Theory:
1270:Generated_Source\PSoC4/UART2.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/UART2.c ****     *
1272:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/UART2.c ****     uint8 UART2_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/UART2.c ****                                                             
1275:Generated_Source\PSoC4/UART2.c ****     {
 1503              		.loc 1 1275 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 8
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 82B0     		sub	sp, sp, #8
 1512              		.cfi_def_cfa_offset 16
 1513 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 50


 1514              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC4/UART2.c ****         uint8 size;
1277:Generated_Source\PSoC4/UART2.c **** 
1278:Generated_Source\PSoC4/UART2.c ****     #if (UART2_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/UART2.c **** 
1280:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/UART2.c ****         UART2_DisableTxInt();
1282:Generated_Source\PSoC4/UART2.c **** 
1283:Generated_Source\PSoC4/UART2.c ****         if(UART2_txBufferRead == UART2_txBufferWrite)
1284:Generated_Source\PSoC4/UART2.c ****         {
1285:Generated_Source\PSoC4/UART2.c ****             size = 0u;
1286:Generated_Source\PSoC4/UART2.c ****         }
1287:Generated_Source\PSoC4/UART2.c ****         else if(UART2_txBufferRead < UART2_txBufferWrite)
1288:Generated_Source\PSoC4/UART2.c ****         {
1289:Generated_Source\PSoC4/UART2.c ****             size = (UART2_txBufferWrite - UART2_txBufferRead);
1290:Generated_Source\PSoC4/UART2.c ****         }
1291:Generated_Source\PSoC4/UART2.c ****         else
1292:Generated_Source\PSoC4/UART2.c ****         {
1293:Generated_Source\PSoC4/UART2.c ****             size = (UART2_TX_BUFFER_SIZE - UART2_txBufferRead) +
1294:Generated_Source\PSoC4/UART2.c ****                     UART2_txBufferWrite;
1295:Generated_Source\PSoC4/UART2.c ****         }
1296:Generated_Source\PSoC4/UART2.c **** 
1297:Generated_Source\PSoC4/UART2.c ****         UART2_EnableTxInt();
1298:Generated_Source\PSoC4/UART2.c **** 
1299:Generated_Source\PSoC4/UART2.c ****     #else
1300:Generated_Source\PSoC4/UART2.c **** 
1301:Generated_Source\PSoC4/UART2.c ****         size = UART2_TXSTATUS_REG;
 1515              		.loc 1 1301 0
 1516 0006 0F4A     		ldr	r2, .L106
 1517 0008 FB1D     		adds	r3, r7, #7
 1518 000a 1278     		ldrb	r2, [r2]
 1519 000c 1A70     		strb	r2, [r3]
1302:Generated_Source\PSoC4/UART2.c **** 
1303:Generated_Source\PSoC4/UART2.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/UART2.c ****         if((size & UART2_TX_STS_FIFO_FULL) != 0u)
 1520              		.loc 1 1304 0
 1521 000e FB1D     		adds	r3, r7, #7
 1522 0010 1B78     		ldrb	r3, [r3]
 1523 0012 0422     		movs	r2, #4
 1524 0014 1340     		ands	r3, r2
 1525 0016 03D0     		beq	.L102
1305:Generated_Source\PSoC4/UART2.c ****         {
1306:Generated_Source\PSoC4/UART2.c ****             size = UART2_FIFO_LENGTH;
 1526              		.loc 1 1306 0
 1527 0018 FB1D     		adds	r3, r7, #7
 1528 001a 0422     		movs	r2, #4
 1529 001c 1A70     		strb	r2, [r3]
 1530 001e 0BE0     		b	.L103
 1531              	.L102:
1307:Generated_Source\PSoC4/UART2.c ****         }
1308:Generated_Source\PSoC4/UART2.c ****         else if((size & UART2_TX_STS_FIFO_EMPTY) != 0u)
 1532              		.loc 1 1308 0
 1533 0020 FB1D     		adds	r3, r7, #7
 1534 0022 1B78     		ldrb	r3, [r3]
 1535 0024 0222     		movs	r2, #2
 1536 0026 1340     		ands	r3, r2
 1537 0028 03D0     		beq	.L104
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 51


1309:Generated_Source\PSoC4/UART2.c ****         {
1310:Generated_Source\PSoC4/UART2.c ****             size = 0u;
 1538              		.loc 1 1310 0
 1539 002a FB1D     		adds	r3, r7, #7
 1540 002c 0022     		movs	r2, #0
 1541 002e 1A70     		strb	r2, [r3]
 1542 0030 02E0     		b	.L103
 1543              	.L104:
1311:Generated_Source\PSoC4/UART2.c ****         }
1312:Generated_Source\PSoC4/UART2.c ****         else
1313:Generated_Source\PSoC4/UART2.c ****         {
1314:Generated_Source\PSoC4/UART2.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/UART2.c ****             size = 1u;
 1544              		.loc 1 1315 0
 1545 0032 FB1D     		adds	r3, r7, #7
 1546 0034 0122     		movs	r2, #1
 1547 0036 1A70     		strb	r2, [r3]
 1548              	.L103:
1316:Generated_Source\PSoC4/UART2.c ****         }
1317:Generated_Source\PSoC4/UART2.c **** 
1318:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/UART2.c **** 
1320:Generated_Source\PSoC4/UART2.c ****     return(size);
 1549              		.loc 1 1320 0
 1550 0038 FB1D     		adds	r3, r7, #7
 1551 003a 1B78     		ldrb	r3, [r3]
1321:Generated_Source\PSoC4/UART2.c ****     }
 1552              		.loc 1 1321 0
 1553 003c 1800     		movs	r0, r3
 1554 003e BD46     		mov	sp, r7
 1555 0040 02B0     		add	sp, sp, #8
 1556              		@ sp needed
 1557 0042 80BD     		pop	{r7, pc}
 1558              	.L107:
 1559              		.align	2
 1560              	.L106:
 1561 0044 62000F40 		.word	1074724962
 1562              		.cfi_endproc
 1563              	.LFE25:
 1564              		.size	UART2_GetTxBufferSize, .-UART2_GetTxBufferSize
 1565              		.section	.text.UART2_ClearTxBuffer,"ax",%progbits
 1566              		.align	2
 1567              		.global	UART2_ClearTxBuffer
 1568              		.code	16
 1569              		.thumb_func
 1570              		.type	UART2_ClearTxBuffer, %function
 1571              	UART2_ClearTxBuffer:
 1572              	.LFB26:
1322:Generated_Source\PSoC4/UART2.c **** 
1323:Generated_Source\PSoC4/UART2.c **** 
1324:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_ClearTxBuffer
1326:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/UART2.c ****     *
1328:Generated_Source\PSoC4/UART2.c ****     * Summary:
1329:Generated_Source\PSoC4/UART2.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 52


1331:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1332:Generated_Source\PSoC4/UART2.c ****     *  None.
1333:Generated_Source\PSoC4/UART2.c ****     *
1334:Generated_Source\PSoC4/UART2.c ****     * Return:
1335:Generated_Source\PSoC4/UART2.c ****     *  None.
1336:Generated_Source\PSoC4/UART2.c ****     *
1337:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1338:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/UART2.c ****     *  UART2_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC4/UART2.c ****     *
1341:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1342:Generated_Source\PSoC4/UART2.c ****     *  No.
1343:Generated_Source\PSoC4/UART2.c ****     *
1344:Generated_Source\PSoC4/UART2.c ****     * Theory:
1345:Generated_Source\PSoC4/UART2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/UART2.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/UART2.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/UART2.c ****     *
1349:Generated_Source\PSoC4/UART2.c ****     * Side Effects:
1350:Generated_Source\PSoC4/UART2.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/UART2.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/UART2.c ****     *
1353:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/UART2.c ****     void UART2_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/UART2.c ****     {
 1573              		.loc 1 1355 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 8
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 90B5     		push	{r4, r7, lr}
 1578              		.cfi_def_cfa_offset 12
 1579              		.cfi_offset 4, -12
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 83B0     		sub	sp, sp, #12
 1583              		.cfi_def_cfa_offset 24
 1584 0004 00AF     		add	r7, sp, #0
 1585              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC4/UART2.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/UART2.c **** 
1358:Generated_Source\PSoC4/UART2.c ****         enableInterrupts = CyEnterCriticalSection();
 1586              		.loc 1 1358 0
 1587 0006 FC1D     		adds	r4, r7, #7
 1588 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1589 000c 0300     		movs	r3, r0
 1590 000e 2370     		strb	r3, [r4]
1359:Generated_Source\PSoC4/UART2.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/UART2.c ****         UART2_TXDATA_AUX_CTL_REG |= (uint8)  UART2_TX_FIFO_CLR;
 1591              		.loc 1 1360 0
 1592 0010 0C4A     		ldr	r2, .L109
 1593 0012 0C4B     		ldr	r3, .L109
 1594 0014 1B78     		ldrb	r3, [r3]
 1595 0016 DBB2     		uxtb	r3, r3
 1596 0018 0121     		movs	r1, #1
 1597 001a 0B43     		orrs	r3, r1
 1598 001c DBB2     		uxtb	r3, r3
 1599 001e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 53


1361:Generated_Source\PSoC4/UART2.c ****         UART2_TXDATA_AUX_CTL_REG &= (uint8) ~UART2_TX_FIFO_CLR;
 1600              		.loc 1 1361 0
 1601 0020 084A     		ldr	r2, .L109
 1602 0022 084B     		ldr	r3, .L109
 1603 0024 1B78     		ldrb	r3, [r3]
 1604 0026 DBB2     		uxtb	r3, r3
 1605 0028 0121     		movs	r1, #1
 1606 002a 8B43     		bics	r3, r1
 1607 002c DBB2     		uxtb	r3, r3
 1608 002e 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC4/UART2.c ****         CyExitCriticalSection(enableInterrupts);
 1609              		.loc 1 1362 0
 1610 0030 FB1D     		adds	r3, r7, #7
 1611 0032 1B78     		ldrb	r3, [r3]
 1612 0034 1800     		movs	r0, r3
 1613 0036 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC4/UART2.c **** 
1364:Generated_Source\PSoC4/UART2.c ****     #if (UART2_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/UART2.c **** 
1366:Generated_Source\PSoC4/UART2.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/UART2.c ****         UART2_DisableTxInt();
1368:Generated_Source\PSoC4/UART2.c **** 
1369:Generated_Source\PSoC4/UART2.c ****         UART2_txBufferRead = 0u;
1370:Generated_Source\PSoC4/UART2.c ****         UART2_txBufferWrite = 0u;
1371:Generated_Source\PSoC4/UART2.c **** 
1372:Generated_Source\PSoC4/UART2.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/UART2.c ****         UART2_EnableTxInt();
1374:Generated_Source\PSoC4/UART2.c **** 
1375:Generated_Source\PSoC4/UART2.c ****     #endif /* (UART2_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/UART2.c ****     }
 1614              		.loc 1 1376 0
 1615 003a C046     		nop
 1616 003c BD46     		mov	sp, r7
 1617 003e 03B0     		add	sp, sp, #12
 1618              		@ sp needed
 1619 0040 90BD     		pop	{r4, r7, pc}
 1620              	.L110:
 1621 0042 C046     		.align	2
 1622              	.L109:
 1623 0044 92000F40 		.word	1074725010
 1624              		.cfi_endproc
 1625              	.LFE26:
 1626              		.size	UART2_ClearTxBuffer, .-UART2_ClearTxBuffer
 1627              		.section	.text.UART2_SendBreak,"ax",%progbits
 1628              		.align	2
 1629              		.global	UART2_SendBreak
 1630              		.code	16
 1631              		.thumb_func
 1632              		.type	UART2_SendBreak, %function
 1633              	UART2_SendBreak:
 1634              	.LFB27:
1377:Generated_Source\PSoC4/UART2.c **** 
1378:Generated_Source\PSoC4/UART2.c **** 
1379:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SendBreak
1381:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/UART2.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 54


1383:Generated_Source\PSoC4/UART2.c ****     * Summary:
1384:Generated_Source\PSoC4/UART2.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/UART2.c ****     *
1386:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1387:Generated_Source\PSoC4/UART2.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/UART2.c ****     *   UART2_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/UART2.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/UART2.c ****     *   UART2_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/UART2.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/UART2.c ****     *   UART2_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/UART2.c ****     *       then return.
1394:Generated_Source\PSoC4/UART2.c ****     *   UART2_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/UART2.c ****     *      UART2_SEND_BREAK and UART2_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/UART2.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/UART2.c ****     *
1398:Generated_Source\PSoC4/UART2.c ****     * Return:
1399:Generated_Source\PSoC4/UART2.c ****     *  None.
1400:Generated_Source\PSoC4/UART2.c ****     *
1401:Generated_Source\PSoC4/UART2.c ****     * Global Variables:
1402:Generated_Source\PSoC4/UART2.c ****     *  UART2_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/UART2.c ****     *     initialized.
1404:Generated_Source\PSoC4/UART2.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/UART2.c ****     *
1406:Generated_Source\PSoC4/UART2.c ****     * Reentrant:
1407:Generated_Source\PSoC4/UART2.c ****     *  No.
1408:Generated_Source\PSoC4/UART2.c ****     *
1409:Generated_Source\PSoC4/UART2.c ****     * Theory:
1410:Generated_Source\PSoC4/UART2.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC4/UART2.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/UART2.c ****     *  operation.
1413:Generated_Source\PSoC4/UART2.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/UART2.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC4/UART2.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/UART2.c ****     *     complete.
1417:Generated_Source\PSoC4/UART2.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/UART2.c ****     *     operation
1419:Generated_Source\PSoC4/UART2.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/UART2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/UART2.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/UART2.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/UART2.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/UART2.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/UART2.c ****     *     Example for this case:
1426:Generated_Source\PSoC4/UART2.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/UART2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/UART2.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/UART2.c ****     *     When interrupt appear with UART2_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/UART2.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/UART2.c ****     *
1432:Generated_Source\PSoC4/UART2.c ****     * Side Effects:
1433:Generated_Source\PSoC4/UART2.c ****     *  The UART2_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/UART2.c ****     *  break signal.
1435:Generated_Source\PSoC4/UART2.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/UART2.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/UART2.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/UART2.c ****     *
1439:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 55


1440:Generated_Source\PSoC4/UART2.c ****     void UART2_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/UART2.c ****     {
 1635              		.loc 1 1441 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 16
 1638              		@ frame_needed = 1, uses_anonymous_args = 0
 1639 0000 80B5     		push	{r7, lr}
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 84B0     		sub	sp, sp, #16
 1644              		.cfi_def_cfa_offset 24
 1645 0004 00AF     		add	r7, sp, #0
 1646              		.cfi_def_cfa_register 7
 1647 0006 0200     		movs	r2, r0
 1648 0008 FB1D     		adds	r3, r7, #7
 1649 000a 1A70     		strb	r2, [r3]
1442:Generated_Source\PSoC4/UART2.c **** 
1443:Generated_Source\PSoC4/UART2.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/UART2.c ****         if(UART2_initVar != 0u)
 1650              		.loc 1 1444 0
 1651 000c 254B     		ldr	r3, .L120
 1652 000e 1B78     		ldrb	r3, [r3]
 1653 0010 002B     		cmp	r3, #0
 1654 0012 43D0     		beq	.L119
 1655              	.LBB2:
1445:Generated_Source\PSoC4/UART2.c ****         {
1446:Generated_Source\PSoC4/UART2.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/UART2.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/UART2.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/UART2.c **** 
1450:Generated_Source\PSoC4/UART2.c ****         #if(UART2_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC4/UART2.c **** 
1452:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_SEND_BREAK) ||
1453:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/UART2.c ****             {
1455:Generated_Source\PSoC4/UART2.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC4/UART2.c ****                 UART2_WriteControlRegister(UART2_ReadControlRegister() |
1457:Generated_Source\PSoC4/UART2.c ****                                                       UART2_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/UART2.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/UART2.c ****                 UART2_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/UART2.c **** 
1461:Generated_Source\PSoC4/UART2.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/UART2.c ****                 {
1463:Generated_Source\PSoC4/UART2.c ****                     tmpStat = UART2_TXSTATUS_REG;
1464:Generated_Source\PSoC4/UART2.c ****                 }
1465:Generated_Source\PSoC4/UART2.c ****                 while((tmpStat & UART2_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/UART2.c ****             }
1467:Generated_Source\PSoC4/UART2.c **** 
1468:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/UART2.c ****             {
1471:Generated_Source\PSoC4/UART2.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/UART2.c ****                 {
1473:Generated_Source\PSoC4/UART2.c ****                     tmpStat = UART2_TXSTATUS_REG;
1474:Generated_Source\PSoC4/UART2.c ****                 }
1475:Generated_Source\PSoC4/UART2.c ****                 while(((uint8)~tmpStat & UART2_TX_STS_COMPLETE) != 0u);
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 56


1476:Generated_Source\PSoC4/UART2.c ****             }
1477:Generated_Source\PSoC4/UART2.c **** 
1478:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_REINIT) ||
1480:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/UART2.c ****             {
1482:Generated_Source\PSoC4/UART2.c ****                 UART2_WriteControlRegister(UART2_ReadControlRegister() &
1483:Generated_Source\PSoC4/UART2.c ****                                               (uint8)~UART2_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/UART2.c ****             }
1485:Generated_Source\PSoC4/UART2.c **** 
1486:Generated_Source\PSoC4/UART2.c ****         #else /* UART2_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/UART2.c **** 
1488:Generated_Source\PSoC4/UART2.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/UART2.c **** 
1490:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_SEND_BREAK) ||
 1656              		.loc 1 1490 0
 1657 0014 FB1D     		adds	r3, r7, #7
 1658 0016 1B78     		ldrb	r3, [r3]
 1659 0018 002B     		cmp	r3, #0
 1660 001a 03D0     		beq	.L113
 1661              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1662 001c FB1D     		adds	r3, r7, #7
 1663 001e 1B78     		ldrb	r3, [r3]
 1664 0020 032B     		cmp	r3, #3
 1665 0022 15D1     		bne	.L114
 1666              	.L113:
1491:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/UART2.c ****             {
1493:Generated_Source\PSoC4/UART2.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/UART2.c ****                 #if( (UART2_PARITY_TYPE != UART2__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/UART2.c ****                                     (UART2_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/UART2.c ****                     UART2_WriteControlRegister(UART2_ReadControlRegister() |
1497:Generated_Source\PSoC4/UART2.c ****                                                           UART2_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/UART2.c ****                 #endif /* End UART2_PARITY_TYPE != UART2__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/UART2.c **** 
1500:Generated_Source\PSoC4/UART2.c ****                 #if(UART2_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/UART2.c ****                     txPeriod = UART2_TXBITCLKTX_COMPLETE_REG;
 1667              		.loc 1 1501 0 is_stmt 1
 1668 0024 204B     		ldr	r3, .L120+4
 1669 0026 1B78     		ldrb	r3, [r3]
 1670 0028 DAB2     		uxtb	r2, r3
 1671 002a 204B     		ldr	r3, .L120+8
 1672 002c 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC4/UART2.c ****                     UART2_TXBITCLKTX_COMPLETE_REG = UART2_TXBITCTR_BREAKBITS;
 1673              		.loc 1 1502 0
 1674 002e 1E4B     		ldr	r3, .L120+4
 1675 0030 6722     		movs	r2, #103
 1676 0032 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC4/UART2.c ****                 #else
1504:Generated_Source\PSoC4/UART2.c ****                     txPeriod = UART2_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/UART2.c ****                     UART2_TXBITCTR_PERIOD_REG = UART2_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/UART2.c ****                 #endif /* End UART2_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/UART2.c **** 
1508:Generated_Source\PSoC4/UART2.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/UART2.c ****                 UART2_TXDATA_REG = 0u;
 1677              		.loc 1 1509 0
 1678 0034 1E4B     		ldr	r3, .L120+12
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 57


 1679 0036 0022     		movs	r2, #0
 1680 0038 1A70     		strb	r2, [r3]
 1681              	.L115:
1510:Generated_Source\PSoC4/UART2.c **** 
1511:Generated_Source\PSoC4/UART2.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/UART2.c ****                 {
1513:Generated_Source\PSoC4/UART2.c ****                     tmpStat = UART2_TXSTATUS_REG;
 1682              		.loc 1 1513 0 discriminator 1
 1683 003a 1E4A     		ldr	r2, .L120+16
 1684 003c 0F23     		movs	r3, #15
 1685 003e FB18     		adds	r3, r7, r3
 1686 0040 1278     		ldrb	r2, [r2]
 1687 0042 1A70     		strb	r2, [r3]
1514:Generated_Source\PSoC4/UART2.c ****                 }
1515:Generated_Source\PSoC4/UART2.c ****                 while((tmpStat & UART2_TX_STS_FIFO_EMPTY) != 0u);
 1688              		.loc 1 1515 0 discriminator 1
 1689 0044 0F23     		movs	r3, #15
 1690 0046 FB18     		adds	r3, r7, r3
 1691 0048 1B78     		ldrb	r3, [r3]
 1692 004a 0222     		movs	r2, #2
 1693 004c 1340     		ands	r3, r2
 1694 004e F4D1     		bne	.L115
 1695              	.L114:
1516:Generated_Source\PSoC4/UART2.c ****             }
1517:Generated_Source\PSoC4/UART2.c **** 
1518:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_WAIT_FOR_COMPLETE_REINIT) ||
 1696              		.loc 1 1518 0
 1697 0050 FB1D     		adds	r3, r7, #7
 1698 0052 1B78     		ldrb	r3, [r3]
 1699 0054 012B     		cmp	r3, #1
 1700 0056 03D0     		beq	.L116
 1701              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1702 0058 FB1D     		adds	r3, r7, #7
 1703 005a 1B78     		ldrb	r3, [r3]
 1704 005c 032B     		cmp	r3, #3
 1705 005e 0DD1     		bne	.L117
 1706              	.L116:
1519:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/UART2.c ****             {
1521:Generated_Source\PSoC4/UART2.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/UART2.c ****                 {
1523:Generated_Source\PSoC4/UART2.c ****                     tmpStat = UART2_TXSTATUS_REG;
 1707              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1708 0060 144A     		ldr	r2, .L120+16
 1709 0062 0F23     		movs	r3, #15
 1710 0064 FB18     		adds	r3, r7, r3
 1711 0066 1278     		ldrb	r2, [r2]
 1712 0068 1A70     		strb	r2, [r3]
1524:Generated_Source\PSoC4/UART2.c ****                 }
1525:Generated_Source\PSoC4/UART2.c ****                 while(((uint8)~tmpStat & UART2_TX_STS_COMPLETE) != 0u);
 1713              		.loc 1 1525 0 discriminator 1
 1714 006a 0F23     		movs	r3, #15
 1715 006c FB18     		adds	r3, r7, r3
 1716 006e 1B78     		ldrb	r3, [r3]
 1717 0070 DB43     		mvns	r3, r3
 1718 0072 DBB2     		uxtb	r3, r3
 1719 0074 1A00     		movs	r2, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 58


 1720 0076 0123     		movs	r3, #1
 1721 0078 1340     		ands	r3, r2
 1722 007a F1D1     		bne	.L116
 1723              	.L117:
1526:Generated_Source\PSoC4/UART2.c ****             }
1527:Generated_Source\PSoC4/UART2.c **** 
1528:Generated_Source\PSoC4/UART2.c ****             if( (retMode == UART2_WAIT_FOR_COMPLETE_REINIT) ||
 1724              		.loc 1 1528 0
 1725 007c FB1D     		adds	r3, r7, #7
 1726 007e 1B78     		ldrb	r3, [r3]
 1727 0080 012B     		cmp	r3, #1
 1728 0082 07D0     		beq	.L118
 1729              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1730 0084 FB1D     		adds	r3, r7, #7
 1731 0086 1B78     		ldrb	r3, [r3]
 1732 0088 022B     		cmp	r3, #2
 1733 008a 03D0     		beq	.L118
1529:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_REINIT) ||
 1734              		.loc 1 1529 0 is_stmt 1
 1735 008c FB1D     		adds	r3, r7, #7
 1736 008e 1B78     		ldrb	r3, [r3]
 1737 0090 032B     		cmp	r3, #3
 1738 0092 03D1     		bne	.L119
 1739              	.L118:
1530:Generated_Source\PSoC4/UART2.c ****                 (retMode == UART2_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC4/UART2.c ****             {
1532:Generated_Source\PSoC4/UART2.c **** 
1533:Generated_Source\PSoC4/UART2.c ****             #if(UART2_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/UART2.c ****                 UART2_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1740              		.loc 1 1534 0
 1741 0094 044A     		ldr	r2, .L120+4
 1742 0096 054B     		ldr	r3, .L120+8
 1743 0098 1B78     		ldrb	r3, [r3]
 1744 009a 1370     		strb	r3, [r2]
 1745              	.L119:
 1746              	.LBE2:
1535:Generated_Source\PSoC4/UART2.c ****             #else
1536:Generated_Source\PSoC4/UART2.c ****                 UART2_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/UART2.c ****             #endif /* End UART2_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/UART2.c **** 
1539:Generated_Source\PSoC4/UART2.c ****             #if( (UART2_PARITY_TYPE != UART2__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/UART2.c ****                  (UART2_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/UART2.c ****                 UART2_WriteControlRegister(UART2_ReadControlRegister() &
1542:Generated_Source\PSoC4/UART2.c ****                                                       (uint8) ~UART2_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/UART2.c ****             #endif /* End UART2_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/UART2.c ****             }
1545:Generated_Source\PSoC4/UART2.c ****         #endif    /* End UART2_HD_ENABLED */
1546:Generated_Source\PSoC4/UART2.c ****         }
1547:Generated_Source\PSoC4/UART2.c ****     }
 1747              		.loc 1 1547 0
 1748 009c C046     		nop
 1749 009e BD46     		mov	sp, r7
 1750 00a0 04B0     		add	sp, sp, #16
 1751              		@ sp needed
 1752 00a2 80BD     		pop	{r7, pc}
 1753              	.L121:
 1754              		.align	2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 59


 1755              	.L120:
 1756 00a4 00000000 		.word	UART2_initVar
 1757 00a8 33000F40 		.word	1074724915
 1758 00ac 06000000 		.word	txPeriod.5048
 1759 00b0 42000F40 		.word	1074724930
 1760 00b4 62000F40 		.word	1074724962
 1761              		.cfi_endproc
 1762              	.LFE27:
 1763              		.size	UART2_SendBreak, .-UART2_SendBreak
 1764              		.section	.text.UART2_SetTxAddressMode,"ax",%progbits
 1765              		.align	2
 1766              		.global	UART2_SetTxAddressMode
 1767              		.code	16
 1768              		.thumb_func
 1769              		.type	UART2_SetTxAddressMode, %function
 1770              	UART2_SetTxAddressMode:
 1771              	.LFB28:
1548:Generated_Source\PSoC4/UART2.c **** 
1549:Generated_Source\PSoC4/UART2.c **** 
1550:Generated_Source\PSoC4/UART2.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/UART2.c ****     * Function Name: UART2_SetTxAddressMode
1552:Generated_Source\PSoC4/UART2.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/UART2.c ****     *
1554:Generated_Source\PSoC4/UART2.c ****     * Summary:
1555:Generated_Source\PSoC4/UART2.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/UART2.c ****     *
1557:Generated_Source\PSoC4/UART2.c ****     * Parameters:
1558:Generated_Source\PSoC4/UART2.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/UART2.c ****     *       UART2_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC4/UART2.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/UART2.c ****     *       UART2_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/UART2.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC4/UART2.c ****     *
1564:Generated_Source\PSoC4/UART2.c ****     * Return:
1565:Generated_Source\PSoC4/UART2.c ****     *  None.
1566:Generated_Source\PSoC4/UART2.c ****     *
1567:Generated_Source\PSoC4/UART2.c ****     * Side Effects:
1568:Generated_Source\PSoC4/UART2.c ****     *  This function sets and clears UART2_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/UART2.c ****     *  register.
1570:Generated_Source\PSoC4/UART2.c ****     *
1571:Generated_Source\PSoC4/UART2.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/UART2.c ****     void UART2_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/UART2.c ****     {
 1772              		.loc 1 1573 0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 8
 1775              		@ frame_needed = 1, uses_anonymous_args = 0
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 82B0     		sub	sp, sp, #8
 1781              		.cfi_def_cfa_offset 16
 1782 0004 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
 1784 0006 0200     		movs	r2, r0
 1785 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 60


 1786 000a 1A70     		strb	r2, [r3]
1574:Generated_Source\PSoC4/UART2.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/UART2.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/UART2.c ****         {
1577:Generated_Source\PSoC4/UART2.c ****         #if( UART2_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/UART2.c ****             UART2_WriteControlRegister(UART2_ReadControlRegister() |
1579:Generated_Source\PSoC4/UART2.c ****                                                   UART2_CTRL_MARK);
1580:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/UART2.c ****         }
1582:Generated_Source\PSoC4/UART2.c ****         else
1583:Generated_Source\PSoC4/UART2.c ****         {
1584:Generated_Source\PSoC4/UART2.c ****         #if( UART2_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/UART2.c ****             UART2_WriteControlRegister(UART2_ReadControlRegister() &
1586:Generated_Source\PSoC4/UART2.c ****                                                   (uint8) ~UART2_CTRL_MARK);
1587:Generated_Source\PSoC4/UART2.c ****         #endif /* End UART2_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/UART2.c ****         }
1589:Generated_Source\PSoC4/UART2.c ****     }
 1787              		.loc 1 1589 0
 1788 000c C046     		nop
 1789 000e BD46     		mov	sp, r7
 1790 0010 02B0     		add	sp, sp, #8
 1791              		@ sp needed
 1792 0012 80BD     		pop	{r7, pc}
 1793              		.cfi_endproc
 1794              	.LFE28:
 1795              		.size	UART2_SetTxAddressMode, .-UART2_SetTxAddressMode
 1796              		.bss
 1797              	txPeriod.5048:
 1798 0006 00       		.space	1
 1799              		.text
 1800              	.Letext0:
 1801              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1802              		.section	.debug_info,"",%progbits
 1803              	.Ldebug_info0:
 1804 0000 D1050000 		.4byte	0x5d1
 1805 0004 0400     		.2byte	0x4
 1806 0006 00000000 		.4byte	.Ldebug_abbrev0
 1807 000a 04       		.byte	0x4
 1808 000b 01       		.uleb128 0x1
 1809 000c 0E020000 		.4byte	.LASF71
 1810 0010 0C       		.byte	0xc
 1811 0011 39010000 		.4byte	.LASF72
 1812 0015 40040000 		.4byte	.LASF73
 1813 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1814 001d 00000000 		.4byte	0
 1815 0021 00000000 		.4byte	.Ldebug_line0
 1816 0025 02       		.uleb128 0x2
 1817 0026 01       		.byte	0x1
 1818 0027 06       		.byte	0x6
 1819 0028 78000000 		.4byte	.LASF0
 1820 002c 02       		.uleb128 0x2
 1821 002d 01       		.byte	0x1
 1822 002e 08       		.byte	0x8
 1823 002f 61030000 		.4byte	.LASF1
 1824 0033 02       		.uleb128 0x2
 1825 0034 02       		.byte	0x2
 1826 0035 05       		.byte	0x5
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 61


 1827 0036 85030000 		.4byte	.LASF2
 1828 003a 02       		.uleb128 0x2
 1829 003b 02       		.byte	0x2
 1830 003c 07       		.byte	0x7
 1831 003d A8010000 		.4byte	.LASF3
 1832 0041 02       		.uleb128 0x2
 1833 0042 04       		.byte	0x4
 1834 0043 05       		.byte	0x5
 1835 0044 E6000000 		.4byte	.LASF4
 1836 0048 02       		.uleb128 0x2
 1837 0049 04       		.byte	0x4
 1838 004a 07       		.byte	0x7
 1839 004b 82010000 		.4byte	.LASF5
 1840 004f 02       		.uleb128 0x2
 1841 0050 08       		.byte	0x8
 1842 0051 05       		.byte	0x5
 1843 0052 6A000000 		.4byte	.LASF6
 1844 0056 02       		.uleb128 0x2
 1845 0057 08       		.byte	0x8
 1846 0058 07       		.byte	0x7
 1847 0059 26000000 		.4byte	.LASF7
 1848 005d 03       		.uleb128 0x3
 1849 005e 04       		.byte	0x4
 1850 005f 05       		.byte	0x5
 1851 0060 696E7400 		.ascii	"int\000"
 1852 0064 02       		.uleb128 0x2
 1853 0065 04       		.byte	0x4
 1854 0066 07       		.byte	0x7
 1855 0067 58010000 		.4byte	.LASF8
 1856 006b 04       		.uleb128 0x4
 1857 006c 10010000 		.4byte	.LASF9
 1858 0070 02       		.byte	0x2
 1859 0071 FC01     		.2byte	0x1fc
 1860 0073 2C000000 		.4byte	0x2c
 1861 0077 04       		.uleb128 0x4
 1862 0078 00000000 		.4byte	.LASF10
 1863 007c 02       		.byte	0x2
 1864 007d FD01     		.2byte	0x1fd
 1865 007f 3A000000 		.4byte	0x3a
 1866 0083 02       		.uleb128 0x2
 1867 0084 04       		.byte	0x4
 1868 0085 04       		.byte	0x4
 1869 0086 48030000 		.4byte	.LASF11
 1870 008a 02       		.uleb128 0x2
 1871 008b 08       		.byte	0x8
 1872 008c 04       		.byte	0x4
 1873 008d 16010000 		.4byte	.LASF12
 1874 0091 04       		.uleb128 0x4
 1875 0092 05040000 		.4byte	.LASF13
 1876 0096 02       		.byte	0x2
 1877 0097 0D02     		.2byte	0x20d
 1878 0099 9D000000 		.4byte	0x9d
 1879 009d 02       		.uleb128 0x2
 1880 009e 01       		.byte	0x1
 1881 009f 08       		.byte	0x8
 1882 00a0 EC030000 		.4byte	.LASF14
 1883 00a4 04       		.uleb128 0x4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 62


 1884 00a5 5C030000 		.4byte	.LASF15
 1885 00a9 02       		.byte	0x2
 1886 00aa A602     		.2byte	0x2a6
 1887 00ac B0000000 		.4byte	0xb0
 1888 00b0 05       		.uleb128 0x5
 1889 00b1 6B000000 		.4byte	0x6b
 1890 00b5 02       		.uleb128 0x2
 1891 00b6 08       		.byte	0x8
 1892 00b7 04       		.byte	0x4
 1893 00b8 EE020000 		.4byte	.LASF16
 1894 00bc 02       		.uleb128 0x2
 1895 00bd 04       		.byte	0x4
 1896 00be 07       		.byte	0x7
 1897 00bf E5020000 		.4byte	.LASF17
 1898 00c3 06       		.uleb128 0x6
 1899 00c4 DA000000 		.4byte	.LASF18
 1900 00c8 01       		.byte	0x1
 1901 00c9 4C       		.byte	0x4c
 1902 00ca 00000000 		.4byte	.LFB2
 1903 00ce 24000000 		.4byte	.LFE2-.LFB2
 1904 00d2 01       		.uleb128 0x1
 1905 00d3 9C       		.byte	0x9c
 1906 00d4 06       		.uleb128 0x6
 1907 00d5 5F000000 		.4byte	.LASF19
 1908 00d9 01       		.byte	0x1
 1909 00da 6A       		.byte	0x6a
 1910 00db 00000000 		.4byte	.LFB3
 1911 00df 5C000000 		.4byte	.LFE3-.LFB3
 1912 00e3 01       		.uleb128 0x1
 1913 00e4 9C       		.byte	0x9c
 1914 00e5 07       		.uleb128 0x7
 1915 00e6 19000000 		.4byte	.LASF20
 1916 00ea 01       		.byte	0x1
 1917 00eb B7       		.byte	0xb7
 1918 00ec 00000000 		.4byte	.LFB4
 1919 00f0 6C000000 		.4byte	.LFE4-.LFB4
 1920 00f4 01       		.uleb128 0x1
 1921 00f5 9C       		.byte	0x9c
 1922 00f6 09010000 		.4byte	0x109
 1923 00fa 08       		.uleb128 0x8
 1924 00fb 85040000 		.4byte	.LASF22
 1925 00ff 01       		.byte	0x1
 1926 0100 B9       		.byte	0xb9
 1927 0101 6B000000 		.4byte	0x6b
 1928 0105 02       		.uleb128 0x2
 1929 0106 91       		.byte	0x91
 1930 0107 6F       		.sleb128 -17
 1931 0108 00       		.byte	0
 1932 0109 07       		.uleb128 0x7
 1933 010a DA030000 		.4byte	.LASF21
 1934 010e 01       		.byte	0x1
 1935 010f F0       		.byte	0xf0
 1936 0110 00000000 		.4byte	.LFB5
 1937 0114 68000000 		.4byte	.LFE5-.LFB5
 1938 0118 01       		.uleb128 0x1
 1939 0119 9C       		.byte	0x9c
 1940 011a 2D010000 		.4byte	0x12d
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 63


 1941 011e 08       		.uleb128 0x8
 1942 011f 85040000 		.4byte	.LASF22
 1943 0123 01       		.byte	0x1
 1944 0124 F2       		.byte	0xf2
 1945 0125 6B000000 		.4byte	0x6b
 1946 0129 02       		.uleb128 0x2
 1947 012a 91       		.byte	0x91
 1948 012b 6F       		.sleb128 -17
 1949 012c 00       		.byte	0
 1950 012d 09       		.uleb128 0x9
 1951 012e FA020000 		.4byte	.LASF48
 1952 0132 01       		.byte	0x1
 1953 0133 2701     		.2byte	0x127
 1954 0135 6B000000 		.4byte	0x6b
 1955 0139 00000000 		.4byte	.LFB6
 1956 013d 0C000000 		.4byte	.LFE6-.LFB6
 1957 0141 01       		.uleb128 0x1
 1958 0142 9C       		.byte	0x9c
 1959 0143 0A       		.uleb128 0xa
 1960 0144 9D000000 		.4byte	.LASF23
 1961 0148 01       		.byte	0x1
 1962 0149 3F01     		.2byte	0x13f
 1963 014b 00000000 		.4byte	.LFB7
 1964 014f 14000000 		.4byte	.LFE7-.LFB7
 1965 0153 01       		.uleb128 0x1
 1966 0154 9C       		.byte	0x9c
 1967 0155 69010000 		.4byte	0x169
 1968 0159 0B       		.uleb128 0xb
 1969 015a 29010000 		.4byte	.LASF25
 1970 015e 01       		.byte	0x1
 1971 015f 3F01     		.2byte	0x13f
 1972 0161 6B000000 		.4byte	0x6b
 1973 0165 02       		.uleb128 0x2
 1974 0166 91       		.byte	0x91
 1975 0167 77       		.sleb128 -9
 1976 0168 00       		.byte	0
 1977 0169 0A       		.uleb128 0xa
 1978 016a E5010000 		.4byte	.LASF24
 1979 016e 01       		.byte	0x1
 1980 016f 6701     		.2byte	0x167
 1981 0171 00000000 		.4byte	.LFB8
 1982 0175 20000000 		.4byte	.LFE8-.LFB8
 1983 0179 01       		.uleb128 0x1
 1984 017a 9C       		.byte	0x9c
 1985 017b 8F010000 		.4byte	0x18f
 1986 017f 0B       		.uleb128 0xb
 1987 0180 07020000 		.4byte	.LASF26
 1988 0184 01       		.byte	0x1
 1989 0185 6701     		.2byte	0x167
 1990 0187 6B000000 		.4byte	0x6b
 1991 018b 02       		.uleb128 0x2
 1992 018c 91       		.byte	0x91
 1993 018d 77       		.sleb128 -9
 1994 018e 00       		.byte	0
 1995 018f 0C       		.uleb128 0xc
 1996 0190 BB010000 		.4byte	.LASF30
 1997 0194 01       		.byte	0x1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 64


 1998 0195 8801     		.2byte	0x188
 1999 0197 6B000000 		.4byte	0x6b
 2000 019b 00000000 		.4byte	.LFB9
 2001 019f A0000000 		.4byte	.LFE9-.LFB9
 2002 01a3 01       		.uleb128 0x1
 2003 01a4 9C       		.byte	0x9c
 2004 01a5 D7010000 		.4byte	0x1d7
 2005 01a9 0D       		.uleb128 0xd
 2006 01aa E5030000 		.4byte	.LASF27
 2007 01ae 01       		.byte	0x1
 2008 01af 8A01     		.2byte	0x18a
 2009 01b1 6B000000 		.4byte	0x6b
 2010 01b5 02       		.uleb128 0x2
 2011 01b6 91       		.byte	0x91
 2012 01b7 77       		.sleb128 -9
 2013 01b8 0D       		.uleb128 0xd
 2014 01b9 30040000 		.4byte	.LASF28
 2015 01bd 01       		.byte	0x1
 2016 01be 8E01     		.2byte	0x18e
 2017 01c0 6B000000 		.4byte	0x6b
 2018 01c4 02       		.uleb128 0x2
 2019 01c5 91       		.byte	0x91
 2020 01c6 76       		.sleb128 -10
 2021 01c7 0D       		.uleb128 0xd
 2022 01c8 1C030000 		.4byte	.LASF29
 2023 01cc 01       		.byte	0x1
 2024 01cd 8F01     		.2byte	0x18f
 2025 01cf 6B000000 		.4byte	0x6b
 2026 01d3 02       		.uleb128 0x2
 2027 01d4 91       		.byte	0x91
 2028 01d5 75       		.sleb128 -11
 2029 01d6 00       		.byte	0
 2030 01d7 0E       		.uleb128 0xe
 2031 01d8 1D040000 		.4byte	.LASF31
 2032 01dc 01       		.byte	0x1
 2033 01dd E501     		.2byte	0x1e5
 2034 01df 6B000000 		.4byte	0x6b
 2035 01e3 00000000 		.4byte	.LFB10
 2036 01e7 48000000 		.4byte	.LFE10-.LFB10
 2037 01eb 01       		.uleb128 0x1
 2038 01ec 9C       		.byte	0x9c
 2039 01ed 01020000 		.4byte	0x201
 2040 01f1 0D       		.uleb128 0xd
 2041 01f2 96040000 		.4byte	.LASF32
 2042 01f6 01       		.byte	0x1
 2043 01f7 E701     		.2byte	0x1e7
 2044 01f9 6B000000 		.4byte	0x6b
 2045 01fd 02       		.uleb128 0x2
 2046 01fe 91       		.byte	0x91
 2047 01ff 77       		.sleb128 -9
 2048 0200 00       		.byte	0
 2049 0201 0C       		.uleb128 0xc
 2050 0202 51000000 		.4byte	.LASF33
 2051 0206 01       		.byte	0x1
 2052 0207 1402     		.2byte	0x214
 2053 0209 6B000000 		.4byte	0x6b
 2054 020d 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 65


 2055 0211 CC000000 		.4byte	.LFE11-.LFB11
 2056 0215 01       		.uleb128 0x1
 2057 0216 9C       		.byte	0x9c
 2058 0217 58020000 		.4byte	0x258
 2059 021b 0D       		.uleb128 0xd
 2060 021c E5030000 		.4byte	.LASF27
 2061 0220 01       		.byte	0x1
 2062 0221 1602     		.2byte	0x216
 2063 0223 6B000000 		.4byte	0x6b
 2064 0227 02       		.uleb128 0x2
 2065 0228 91       		.byte	0x91
 2066 0229 77       		.sleb128 -9
 2067 022a 0D       		.uleb128 0xd
 2068 022b 2D030000 		.4byte	.LASF34
 2069 022f 01       		.byte	0x1
 2070 0230 1702     		.2byte	0x217
 2071 0232 6B000000 		.4byte	0x6b
 2072 0236 02       		.uleb128 0x2
 2073 0237 91       		.byte	0x91
 2074 0238 74       		.sleb128 -12
 2075 0239 0D       		.uleb128 0xd
 2076 023a 30040000 		.4byte	.LASF28
 2077 023e 01       		.byte	0x1
 2078 023f 1A02     		.2byte	0x21a
 2079 0241 6B000000 		.4byte	0x6b
 2080 0245 02       		.uleb128 0x2
 2081 0246 91       		.byte	0x91
 2082 0247 76       		.sleb128 -10
 2083 0248 0D       		.uleb128 0xd
 2084 0249 1C030000 		.4byte	.LASF29
 2085 024d 01       		.byte	0x1
 2086 024e 1B02     		.2byte	0x21b
 2087 0250 6B000000 		.4byte	0x6b
 2088 0254 02       		.uleb128 0x2
 2089 0255 91       		.byte	0x91
 2090 0256 75       		.sleb128 -11
 2091 0257 00       		.byte	0
 2092 0258 0C       		.uleb128 0xc
 2093 0259 4E030000 		.4byte	.LASF35
 2094 025d 01       		.byte	0x1
 2095 025e 7A02     		.2byte	0x27a
 2096 0260 77000000 		.4byte	0x77
 2097 0264 00000000 		.4byte	.LFB12
 2098 0268 40000000 		.4byte	.LFE12-.LFB12
 2099 026c 01       		.uleb128 0x1
 2100 026d 9C       		.byte	0x9c
 2101 026e 82020000 		.4byte	0x282
 2102 0272 0D       		.uleb128 0xd
 2103 0273 73010000 		.4byte	.LASF36
 2104 0277 01       		.byte	0x1
 2105 0278 7E02     		.2byte	0x27e
 2106 027a 77000000 		.4byte	0x77
 2107 027e 02       		.uleb128 0x2
 2108 027f 91       		.byte	0x91
 2109 0280 6E       		.sleb128 -18
 2110 0281 00       		.byte	0
 2111 0282 0C       		.uleb128 0xc
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 66


 2112 0283 BC040000 		.4byte	.LASF37
 2113 0287 01       		.byte	0x1
 2114 0288 AB02     		.2byte	0x2ab
 2115 028a 6B000000 		.4byte	0x6b
 2116 028e 00000000 		.4byte	.LFB13
 2117 0292 90000000 		.4byte	.LFE13-.LFB13
 2118 0296 01       		.uleb128 0x1
 2119 0297 9C       		.byte	0x9c
 2120 0298 AC020000 		.4byte	0x2ac
 2121 029c 0D       		.uleb128 0xd
 2122 029d A3010000 		.4byte	.LASF38
 2123 02a1 01       		.byte	0x1
 2124 02a2 AE02     		.2byte	0x2ae
 2125 02a4 6B000000 		.4byte	0x6b
 2126 02a8 02       		.uleb128 0x2
 2127 02a9 91       		.byte	0x91
 2128 02aa 77       		.sleb128 -9
 2129 02ab 00       		.byte	0
 2130 02ac 0F       		.uleb128 0xf
 2131 02ad F1030000 		.4byte	.LASF39
 2132 02b1 01       		.byte	0x1
 2133 02b2 F502     		.2byte	0x2f5
 2134 02b4 00000000 		.4byte	.LFB14
 2135 02b8 7C000000 		.4byte	.LFE14-.LFB14
 2136 02bc 01       		.uleb128 0x1
 2137 02bd 9C       		.byte	0x9c
 2138 02be D2020000 		.4byte	0x2d2
 2139 02c2 0D       		.uleb128 0xd
 2140 02c3 85040000 		.4byte	.LASF22
 2141 02c7 01       		.byte	0x1
 2142 02c8 F702     		.2byte	0x2f7
 2143 02ca 6B000000 		.4byte	0x6b
 2144 02ce 02       		.uleb128 0x2
 2145 02cf 91       		.byte	0x91
 2146 02d0 6F       		.sleb128 -17
 2147 02d1 00       		.byte	0
 2148 02d2 0A       		.uleb128 0xa
 2149 02d3 D2040000 		.4byte	.LASF40
 2150 02d7 01       		.byte	0x1
 2151 02d8 2D03     		.2byte	0x32d
 2152 02da 00000000 		.4byte	.LFB15
 2153 02de 14000000 		.4byte	.LFE15-.LFB15
 2154 02e2 01       		.uleb128 0x1
 2155 02e3 9C       		.byte	0x9c
 2156 02e4 F8020000 		.4byte	0x2f8
 2157 02e8 0B       		.uleb128 0xb
 2158 02e9 1D010000 		.4byte	.LASF41
 2159 02ed 01       		.byte	0x1
 2160 02ee 2D03     		.2byte	0x32d
 2161 02f0 6B000000 		.4byte	0x6b
 2162 02f4 02       		.uleb128 0x2
 2163 02f5 91       		.byte	0x91
 2164 02f6 77       		.sleb128 -9
 2165 02f7 00       		.byte	0
 2166 02f8 0A       		.uleb128 0xa
 2167 02f9 A8030000 		.4byte	.LASF42
 2168 02fd 01       		.byte	0x1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 67


 2169 02fe 5903     		.2byte	0x359
 2170 0300 00000000 		.4byte	.LFB16
 2171 0304 20000000 		.4byte	.LFE16-.LFB16
 2172 0308 01       		.uleb128 0x1
 2173 0309 9C       		.byte	0x9c
 2174 030a 1E030000 		.4byte	0x31e
 2175 030e 0B       		.uleb128 0xb
 2176 030f 14030000 		.4byte	.LASF43
 2177 0313 01       		.byte	0x1
 2178 0314 5903     		.2byte	0x359
 2179 0316 6B000000 		.4byte	0x6b
 2180 031a 02       		.uleb128 0x2
 2181 031b 91       		.byte	0x91
 2182 031c 77       		.sleb128 -9
 2183 031d 00       		.byte	0
 2184 031e 0A       		.uleb128 0xa
 2185 031f BC030000 		.4byte	.LASF44
 2186 0323 01       		.byte	0x1
 2187 0324 6D03     		.2byte	0x36d
 2188 0326 00000000 		.4byte	.LFB17
 2189 032a 20000000 		.4byte	.LFE17-.LFB17
 2190 032e 01       		.uleb128 0x1
 2191 032f 9C       		.byte	0x9c
 2192 0330 44030000 		.4byte	0x344
 2193 0334 0B       		.uleb128 0xb
 2194 0335 14030000 		.4byte	.LASF43
 2195 0339 01       		.byte	0x1
 2196 033a 6D03     		.2byte	0x36d
 2197 033c 6B000000 		.4byte	0x6b
 2198 0340 02       		.uleb128 0x2
 2199 0341 91       		.byte	0x91
 2200 0342 77       		.sleb128 -9
 2201 0343 00       		.byte	0
 2202 0344 0A       		.uleb128 0xa
 2203 0345 CC010000 		.4byte	.LASF45
 2204 0349 01       		.byte	0x1
 2205 034a 8C03     		.2byte	0x38c
 2206 034c 00000000 		.4byte	.LFB18
 2207 0350 20000000 		.4byte	.LFE18-.LFB18
 2208 0354 01       		.uleb128 0x1
 2209 0355 9C       		.byte	0x9c
 2210 0356 6A030000 		.4byte	0x36a
 2211 035a 0B       		.uleb128 0xb
 2212 035b 07020000 		.4byte	.LASF26
 2213 035f 01       		.byte	0x1
 2214 0360 8C03     		.2byte	0x38c
 2215 0362 6B000000 		.4byte	0x6b
 2216 0366 02       		.uleb128 0x2
 2217 0367 91       		.byte	0x91
 2218 0368 77       		.sleb128 -9
 2219 0369 00       		.byte	0
 2220 036a 0A       		.uleb128 0xa
 2221 036b 36030000 		.4byte	.LASF46
 2222 036f 01       		.byte	0x1
 2223 0370 AE03     		.2byte	0x3ae
 2224 0372 00000000 		.4byte	.LFB19
 2225 0376 2C000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 68


 2226 037a 01       		.uleb128 0x1
 2227 037b 9C       		.byte	0x9c
 2228 037c 90030000 		.4byte	0x390
 2229 0380 0B       		.uleb128 0xb
 2230 0381 07000000 		.4byte	.LASF47
 2231 0385 01       		.byte	0x1
 2232 0386 AE03     		.2byte	0x3ae
 2233 0388 6B000000 		.4byte	0x6b
 2234 038c 02       		.uleb128 0x2
 2235 038d 91       		.byte	0x91
 2236 038e 77       		.sleb128 -9
 2237 038f 00       		.byte	0
 2238 0390 09       		.uleb128 0x9
 2239 0391 FD000000 		.4byte	.LASF49
 2240 0395 01       		.byte	0x1
 2241 0396 EB03     		.2byte	0x3eb
 2242 0398 6B000000 		.4byte	0x6b
 2243 039c 00000000 		.4byte	.LFB20
 2244 03a0 14000000 		.4byte	.LFE20-.LFB20
 2245 03a4 01       		.uleb128 0x1
 2246 03a5 9C       		.byte	0x9c
 2247 03a6 0A       		.uleb128 0xa
 2248 03a7 EF000000 		.4byte	.LASF50
 2249 03ab 01       		.byte	0x1
 2250 03ac 1104     		.2byte	0x411
 2251 03ae 00000000 		.4byte	.LFB21
 2252 03b2 34000000 		.4byte	.LFE21-.LFB21
 2253 03b6 01       		.uleb128 0x1
 2254 03b7 9C       		.byte	0x9c
 2255 03b8 CC030000 		.4byte	0x3cc
 2256 03bc 0B       		.uleb128 0xb
 2257 03bd 07000000 		.4byte	.LASF47
 2258 03c1 01       		.byte	0x1
 2259 03c2 1104     		.2byte	0x411
 2260 03c4 6B000000 		.4byte	0x6b
 2261 03c8 02       		.uleb128 0x2
 2262 03c9 91       		.byte	0x91
 2263 03ca 77       		.sleb128 -9
 2264 03cb 00       		.byte	0
 2265 03cc 0F       		.uleb128 0xf
 2266 03cd 84000000 		.4byte	.LASF51
 2267 03d1 01       		.byte	0x1
 2268 03d2 7904     		.2byte	0x479
 2269 03d4 00000000 		.4byte	.LFB22
 2270 03d8 58000000 		.4byte	.LFE22-.LFB22
 2271 03dc 01       		.uleb128 0x1
 2272 03dd 9C       		.byte	0x9c
 2273 03de 01040000 		.4byte	0x401
 2274 03e2 0B       		.uleb128 0xb
 2275 03e3 12000000 		.4byte	.LASF52
 2276 03e7 01       		.byte	0x1
 2277 03e8 7904     		.2byte	0x479
 2278 03ea 01040000 		.4byte	0x401
 2279 03ee 02       		.uleb128 0x2
 2280 03ef 91       		.byte	0x91
 2281 03f0 6C       		.sleb128 -20
 2282 03f1 0D       		.uleb128 0xd
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 69


 2283 03f2 FE010000 		.4byte	.LASF53
 2284 03f6 01       		.byte	0x1
 2285 03f7 7B04     		.2byte	0x47b
 2286 03f9 77000000 		.4byte	0x77
 2287 03fd 02       		.uleb128 0x2
 2288 03fe 91       		.byte	0x91
 2289 03ff 76       		.sleb128 -10
 2290 0400 00       		.byte	0
 2291 0401 10       		.uleb128 0x10
 2292 0402 04       		.byte	0x4
 2293 0403 07040000 		.4byte	0x407
 2294 0407 11       		.uleb128 0x11
 2295 0408 91000000 		.4byte	0x91
 2296 040c 0F       		.uleb128 0xf
 2297 040d 94010000 		.4byte	.LASF54
 2298 0411 01       		.byte	0x1
 2299 0412 A704     		.2byte	0x4a7
 2300 0414 00000000 		.4byte	.LFB23
 2301 0418 5C000000 		.4byte	.LFE23-.LFB23
 2302 041c 01       		.uleb128 0x1
 2303 041d 9C       		.byte	0x9c
 2304 041e 50040000 		.4byte	0x450
 2305 0422 0B       		.uleb128 0xb
 2306 0423 12000000 		.4byte	.LASF52
 2307 0427 01       		.byte	0x1
 2308 0428 A704     		.2byte	0x4a7
 2309 042a 50040000 		.4byte	0x450
 2310 042e 02       		.uleb128 0x2
 2311 042f 91       		.byte	0x91
 2312 0430 6C       		.sleb128 -20
 2313 0431 0B       		.uleb128 0xb
 2314 0432 D0030000 		.4byte	.LASF55
 2315 0436 01       		.byte	0x1
 2316 0437 A704     		.2byte	0x4a7
 2317 0439 6B000000 		.4byte	0x6b
 2318 043d 02       		.uleb128 0x2
 2319 043e 91       		.byte	0x91
 2320 043f 6B       		.sleb128 -21
 2321 0440 0D       		.uleb128 0xd
 2322 0441 FE010000 		.4byte	.LASF53
 2323 0445 01       		.byte	0x1
 2324 0446 AA04     		.2byte	0x4aa
 2325 0448 6B000000 		.4byte	0x6b
 2326 044c 02       		.uleb128 0x2
 2327 044d 91       		.byte	0x91
 2328 044e 77       		.sleb128 -9
 2329 044f 00       		.byte	0
 2330 0450 10       		.uleb128 0x10
 2331 0451 04       		.byte	0x4
 2332 0452 56040000 		.4byte	0x456
 2333 0456 11       		.uleb128 0x11
 2334 0457 6B000000 		.4byte	0x6b
 2335 045b 0F       		.uleb128 0xf
 2336 045c 65010000 		.4byte	.LASF56
 2337 0460 01       		.byte	0x1
 2338 0461 CE04     		.2byte	0x4ce
 2339 0463 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 70


 2340 0467 38000000 		.4byte	.LFE24-.LFB24
 2341 046b 01       		.uleb128 0x1
 2342 046c 9C       		.byte	0x9c
 2343 046d 81040000 		.4byte	0x481
 2344 0471 0B       		.uleb128 0xb
 2345 0472 07000000 		.4byte	.LASF47
 2346 0476 01       		.byte	0x1
 2347 0477 CE04     		.2byte	0x4ce
 2348 0479 6B000000 		.4byte	0x6b
 2349 047d 02       		.uleb128 0x2
 2350 047e 91       		.byte	0x91
 2351 047f 77       		.sleb128 -9
 2352 0480 00       		.byte	0
 2353 0481 0E       		.uleb128 0xe
 2354 0482 6F030000 		.4byte	.LASF57
 2355 0486 01       		.byte	0x1
 2356 0487 F904     		.2byte	0x4f9
 2357 0489 6B000000 		.4byte	0x6b
 2358 048d 00000000 		.4byte	.LFB25
 2359 0491 48000000 		.4byte	.LFE25-.LFB25
 2360 0495 01       		.uleb128 0x1
 2361 0496 9C       		.byte	0x9c
 2362 0497 AB040000 		.4byte	0x4ab
 2363 049b 0D       		.uleb128 0xd
 2364 049c A3010000 		.4byte	.LASF38
 2365 04a0 01       		.byte	0x1
 2366 04a1 FC04     		.2byte	0x4fc
 2367 04a3 6B000000 		.4byte	0x6b
 2368 04a7 02       		.uleb128 0x2
 2369 04a8 91       		.byte	0x91
 2370 04a9 77       		.sleb128 -9
 2371 04aa 00       		.byte	0
 2372 04ab 0F       		.uleb128 0xf
 2373 04ac C6000000 		.4byte	.LASF58
 2374 04b0 01       		.byte	0x1
 2375 04b1 4A05     		.2byte	0x54a
 2376 04b3 00000000 		.4byte	.LFB26
 2377 04b7 48000000 		.4byte	.LFE26-.LFB26
 2378 04bb 01       		.uleb128 0x1
 2379 04bc 9C       		.byte	0x9c
 2380 04bd D1040000 		.4byte	0x4d1
 2381 04c1 0D       		.uleb128 0xd
 2382 04c2 85040000 		.4byte	.LASF22
 2383 04c6 01       		.byte	0x1
 2384 04c7 4C05     		.2byte	0x54c
 2385 04c9 6B000000 		.4byte	0x6b
 2386 04cd 02       		.uleb128 0x2
 2387 04ce 91       		.byte	0x91
 2388 04cf 6F       		.sleb128 -17
 2389 04d0 00       		.byte	0
 2390 04d1 0A       		.uleb128 0xa
 2391 04d2 AC040000 		.4byte	.LASF59
 2392 04d6 01       		.byte	0x1
 2393 04d7 A005     		.2byte	0x5a0
 2394 04d9 00000000 		.4byte	.LFB27
 2395 04dd B8000000 		.4byte	.LFE27-.LFB27
 2396 04e1 01       		.uleb128 0x1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 71


 2397 04e2 9C       		.byte	0x9c
 2398 04e3 22050000 		.4byte	0x522
 2399 04e7 0B       		.uleb128 0xb
 2400 04e8 31010000 		.4byte	.LASF60
 2401 04ec 01       		.byte	0x1
 2402 04ed A005     		.2byte	0x5a0
 2403 04ef 6B000000 		.4byte	0x6b
 2404 04f3 02       		.uleb128 0x2
 2405 04f4 91       		.byte	0x91
 2406 04f5 6F       		.sleb128 -17
 2407 04f6 12       		.uleb128 0x12
 2408 04f7 14000000 		.4byte	.LBB2
 2409 04fb 88000000 		.4byte	.LBE2-.LBB2
 2410 04ff 0D       		.uleb128 0xd
 2411 0500 DD020000 		.4byte	.LASF61
 2412 0504 01       		.byte	0x1
 2413 0505 A805     		.2byte	0x5a8
 2414 0507 6B000000 		.4byte	0x6b
 2415 050b 02       		.uleb128 0x2
 2416 050c 91       		.byte	0x91
 2417 050d 77       		.sleb128 -9
 2418 050e 0D       		.uleb128 0xd
 2419 050f 94000000 		.4byte	.LASF62
 2420 0513 01       		.byte	0x1
 2421 0514 D005     		.2byte	0x5d0
 2422 0516 6B000000 		.4byte	0x6b
 2423 051a 05       		.uleb128 0x5
 2424 051b 03       		.byte	0x3
 2425 051c 06000000 		.4byte	txPeriod.5048
 2426 0520 00       		.byte	0
 2427 0521 00       		.byte	0
 2428 0522 0A       		.uleb128 0xa
 2429 0523 B3020000 		.4byte	.LASF63
 2430 0527 01       		.byte	0x1
 2431 0528 2406     		.2byte	0x624
 2432 052a 00000000 		.4byte	.LFB28
 2433 052e 14000000 		.4byte	.LFE28-.LFB28
 2434 0532 01       		.uleb128 0x1
 2435 0533 9C       		.byte	0x9c
 2436 0534 48050000 		.4byte	0x548
 2437 0538 0B       		.uleb128 0xb
 2438 0539 1D010000 		.4byte	.LASF41
 2439 053d 01       		.byte	0x1
 2440 053e 2406     		.2byte	0x624
 2441 0540 6B000000 		.4byte	0x6b
 2442 0544 02       		.uleb128 0x2
 2443 0545 91       		.byte	0x91
 2444 0546 77       		.sleb128 -9
 2445 0547 00       		.byte	0
 2446 0548 13       		.uleb128 0x13
 2447 0549 B8000000 		.4byte	.LASF64
 2448 054d 01       		.byte	0x1
 2449 054e 1B       		.byte	0x1b
 2450 054f 6B000000 		.4byte	0x6b
 2451 0553 05       		.uleb128 0x5
 2452 0554 03       		.byte	0x3
 2453 0555 00000000 		.4byte	UART2_initVar
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 72


 2454 0559 13       		.uleb128 0x13
 2455 055a 0B040000 		.4byte	.LASF65
 2456 055e 01       		.byte	0x1
 2457 055f 24       		.byte	0x24
 2458 0560 6B000000 		.4byte	0x6b
 2459 0564 05       		.uleb128 0x5
 2460 0565 03       		.byte	0x3
 2461 0566 00000000 		.4byte	UART2_errorStatus
 2462 056a 14       		.uleb128 0x14
 2463 056b B0000000 		.4byte	0xb0
 2464 056f 7A050000 		.4byte	0x57a
 2465 0573 15       		.uleb128 0x15
 2466 0574 BC000000 		.4byte	0xbc
 2467 0578 07       		.byte	0x7
 2468 0579 00       		.byte	0
 2469 057a 13       		.uleb128 0x13
 2470 057b 9D040000 		.4byte	.LASF66
 2471 057f 01       		.byte	0x1
 2472 0580 25       		.byte	0x25
 2473 0581 8B050000 		.4byte	0x58b
 2474 0585 05       		.uleb128 0x5
 2475 0586 03       		.byte	0x3
 2476 0587 00000000 		.4byte	UART2_rxBuffer
 2477 058b 05       		.uleb128 0x5
 2478 058c 6A050000 		.4byte	0x56a
 2479 0590 13       		.uleb128 0x13
 2480 0591 CA020000 		.4byte	.LASF67
 2481 0595 01       		.byte	0x1
 2482 0596 26       		.byte	0x26
 2483 0597 B0000000 		.4byte	0xb0
 2484 059b 05       		.uleb128 0x5
 2485 059c 03       		.byte	0x3
 2486 059d 00000000 		.4byte	UART2_rxBufferRead
 2487 05a1 13       		.uleb128 0x13
 2488 05a2 3D000000 		.4byte	.LASF68
 2489 05a6 01       		.byte	0x1
 2490 05a7 27       		.byte	0x27
 2491 05a8 B0000000 		.4byte	0xb0
 2492 05ac 05       		.uleb128 0x5
 2493 05ad 03       		.byte	0x3
 2494 05ae 00000000 		.4byte	UART2_rxBufferWrite
 2495 05b2 13       		.uleb128 0x13
 2496 05b3 8F030000 		.4byte	.LASF69
 2497 05b7 01       		.byte	0x1
 2498 05b8 28       		.byte	0x28
 2499 05b9 B0000000 		.4byte	0xb0
 2500 05bd 05       		.uleb128 0x5
 2501 05be 03       		.byte	0x3
 2502 05bf 00000000 		.4byte	UART2_rxBufferLoopDetect
 2503 05c3 13       		.uleb128 0x13
 2504 05c4 9C020000 		.4byte	.LASF70
 2505 05c8 01       		.byte	0x1
 2506 05c9 29       		.byte	0x29
 2507 05ca B0000000 		.4byte	0xb0
 2508 05ce 05       		.uleb128 0x5
 2509 05cf 03       		.byte	0x3
 2510 05d0 00000000 		.4byte	UART2_rxBufferOverflow
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 73


 2511 05d4 00       		.byte	0
 2512              		.section	.debug_abbrev,"",%progbits
 2513              	.Ldebug_abbrev0:
 2514 0000 01       		.uleb128 0x1
 2515 0001 11       		.uleb128 0x11
 2516 0002 01       		.byte	0x1
 2517 0003 25       		.uleb128 0x25
 2518 0004 0E       		.uleb128 0xe
 2519 0005 13       		.uleb128 0x13
 2520 0006 0B       		.uleb128 0xb
 2521 0007 03       		.uleb128 0x3
 2522 0008 0E       		.uleb128 0xe
 2523 0009 1B       		.uleb128 0x1b
 2524 000a 0E       		.uleb128 0xe
 2525 000b 55       		.uleb128 0x55
 2526 000c 17       		.uleb128 0x17
 2527 000d 11       		.uleb128 0x11
 2528 000e 01       		.uleb128 0x1
 2529 000f 10       		.uleb128 0x10
 2530 0010 17       		.uleb128 0x17
 2531 0011 00       		.byte	0
 2532 0012 00       		.byte	0
 2533 0013 02       		.uleb128 0x2
 2534 0014 24       		.uleb128 0x24
 2535 0015 00       		.byte	0
 2536 0016 0B       		.uleb128 0xb
 2537 0017 0B       		.uleb128 0xb
 2538 0018 3E       		.uleb128 0x3e
 2539 0019 0B       		.uleb128 0xb
 2540 001a 03       		.uleb128 0x3
 2541 001b 0E       		.uleb128 0xe
 2542 001c 00       		.byte	0
 2543 001d 00       		.byte	0
 2544 001e 03       		.uleb128 0x3
 2545 001f 24       		.uleb128 0x24
 2546 0020 00       		.byte	0
 2547 0021 0B       		.uleb128 0xb
 2548 0022 0B       		.uleb128 0xb
 2549 0023 3E       		.uleb128 0x3e
 2550 0024 0B       		.uleb128 0xb
 2551 0025 03       		.uleb128 0x3
 2552 0026 08       		.uleb128 0x8
 2553 0027 00       		.byte	0
 2554 0028 00       		.byte	0
 2555 0029 04       		.uleb128 0x4
 2556 002a 16       		.uleb128 0x16
 2557 002b 00       		.byte	0
 2558 002c 03       		.uleb128 0x3
 2559 002d 0E       		.uleb128 0xe
 2560 002e 3A       		.uleb128 0x3a
 2561 002f 0B       		.uleb128 0xb
 2562 0030 3B       		.uleb128 0x3b
 2563 0031 05       		.uleb128 0x5
 2564 0032 49       		.uleb128 0x49
 2565 0033 13       		.uleb128 0x13
 2566 0034 00       		.byte	0
 2567 0035 00       		.byte	0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 74


 2568 0036 05       		.uleb128 0x5
 2569 0037 35       		.uleb128 0x35
 2570 0038 00       		.byte	0
 2571 0039 49       		.uleb128 0x49
 2572 003a 13       		.uleb128 0x13
 2573 003b 00       		.byte	0
 2574 003c 00       		.byte	0
 2575 003d 06       		.uleb128 0x6
 2576 003e 2E       		.uleb128 0x2e
 2577 003f 00       		.byte	0
 2578 0040 3F       		.uleb128 0x3f
 2579 0041 19       		.uleb128 0x19
 2580 0042 03       		.uleb128 0x3
 2581 0043 0E       		.uleb128 0xe
 2582 0044 3A       		.uleb128 0x3a
 2583 0045 0B       		.uleb128 0xb
 2584 0046 3B       		.uleb128 0x3b
 2585 0047 0B       		.uleb128 0xb
 2586 0048 27       		.uleb128 0x27
 2587 0049 19       		.uleb128 0x19
 2588 004a 11       		.uleb128 0x11
 2589 004b 01       		.uleb128 0x1
 2590 004c 12       		.uleb128 0x12
 2591 004d 06       		.uleb128 0x6
 2592 004e 40       		.uleb128 0x40
 2593 004f 18       		.uleb128 0x18
 2594 0050 9642     		.uleb128 0x2116
 2595 0052 19       		.uleb128 0x19
 2596 0053 00       		.byte	0
 2597 0054 00       		.byte	0
 2598 0055 07       		.uleb128 0x7
 2599 0056 2E       		.uleb128 0x2e
 2600 0057 01       		.byte	0x1
 2601 0058 3F       		.uleb128 0x3f
 2602 0059 19       		.uleb128 0x19
 2603 005a 03       		.uleb128 0x3
 2604 005b 0E       		.uleb128 0xe
 2605 005c 3A       		.uleb128 0x3a
 2606 005d 0B       		.uleb128 0xb
 2607 005e 3B       		.uleb128 0x3b
 2608 005f 0B       		.uleb128 0xb
 2609 0060 27       		.uleb128 0x27
 2610 0061 19       		.uleb128 0x19
 2611 0062 11       		.uleb128 0x11
 2612 0063 01       		.uleb128 0x1
 2613 0064 12       		.uleb128 0x12
 2614 0065 06       		.uleb128 0x6
 2615 0066 40       		.uleb128 0x40
 2616 0067 18       		.uleb128 0x18
 2617 0068 9642     		.uleb128 0x2116
 2618 006a 19       		.uleb128 0x19
 2619 006b 01       		.uleb128 0x1
 2620 006c 13       		.uleb128 0x13
 2621 006d 00       		.byte	0
 2622 006e 00       		.byte	0
 2623 006f 08       		.uleb128 0x8
 2624 0070 34       		.uleb128 0x34
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 75


 2625 0071 00       		.byte	0
 2626 0072 03       		.uleb128 0x3
 2627 0073 0E       		.uleb128 0xe
 2628 0074 3A       		.uleb128 0x3a
 2629 0075 0B       		.uleb128 0xb
 2630 0076 3B       		.uleb128 0x3b
 2631 0077 0B       		.uleb128 0xb
 2632 0078 49       		.uleb128 0x49
 2633 0079 13       		.uleb128 0x13
 2634 007a 02       		.uleb128 0x2
 2635 007b 18       		.uleb128 0x18
 2636 007c 00       		.byte	0
 2637 007d 00       		.byte	0
 2638 007e 09       		.uleb128 0x9
 2639 007f 2E       		.uleb128 0x2e
 2640 0080 00       		.byte	0
 2641 0081 3F       		.uleb128 0x3f
 2642 0082 19       		.uleb128 0x19
 2643 0083 03       		.uleb128 0x3
 2644 0084 0E       		.uleb128 0xe
 2645 0085 3A       		.uleb128 0x3a
 2646 0086 0B       		.uleb128 0xb
 2647 0087 3B       		.uleb128 0x3b
 2648 0088 05       		.uleb128 0x5
 2649 0089 27       		.uleb128 0x27
 2650 008a 19       		.uleb128 0x19
 2651 008b 49       		.uleb128 0x49
 2652 008c 13       		.uleb128 0x13
 2653 008d 11       		.uleb128 0x11
 2654 008e 01       		.uleb128 0x1
 2655 008f 12       		.uleb128 0x12
 2656 0090 06       		.uleb128 0x6
 2657 0091 40       		.uleb128 0x40
 2658 0092 18       		.uleb128 0x18
 2659 0093 9742     		.uleb128 0x2117
 2660 0095 19       		.uleb128 0x19
 2661 0096 00       		.byte	0
 2662 0097 00       		.byte	0
 2663 0098 0A       		.uleb128 0xa
 2664 0099 2E       		.uleb128 0x2e
 2665 009a 01       		.byte	0x1
 2666 009b 3F       		.uleb128 0x3f
 2667 009c 19       		.uleb128 0x19
 2668 009d 03       		.uleb128 0x3
 2669 009e 0E       		.uleb128 0xe
 2670 009f 3A       		.uleb128 0x3a
 2671 00a0 0B       		.uleb128 0xb
 2672 00a1 3B       		.uleb128 0x3b
 2673 00a2 05       		.uleb128 0x5
 2674 00a3 27       		.uleb128 0x27
 2675 00a4 19       		.uleb128 0x19
 2676 00a5 11       		.uleb128 0x11
 2677 00a6 01       		.uleb128 0x1
 2678 00a7 12       		.uleb128 0x12
 2679 00a8 06       		.uleb128 0x6
 2680 00a9 40       		.uleb128 0x40
 2681 00aa 18       		.uleb128 0x18
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 76


 2682 00ab 9742     		.uleb128 0x2117
 2683 00ad 19       		.uleb128 0x19
 2684 00ae 01       		.uleb128 0x1
 2685 00af 13       		.uleb128 0x13
 2686 00b0 00       		.byte	0
 2687 00b1 00       		.byte	0
 2688 00b2 0B       		.uleb128 0xb
 2689 00b3 05       		.uleb128 0x5
 2690 00b4 00       		.byte	0
 2691 00b5 03       		.uleb128 0x3
 2692 00b6 0E       		.uleb128 0xe
 2693 00b7 3A       		.uleb128 0x3a
 2694 00b8 0B       		.uleb128 0xb
 2695 00b9 3B       		.uleb128 0x3b
 2696 00ba 05       		.uleb128 0x5
 2697 00bb 49       		.uleb128 0x49
 2698 00bc 13       		.uleb128 0x13
 2699 00bd 02       		.uleb128 0x2
 2700 00be 18       		.uleb128 0x18
 2701 00bf 00       		.byte	0
 2702 00c0 00       		.byte	0
 2703 00c1 0C       		.uleb128 0xc
 2704 00c2 2E       		.uleb128 0x2e
 2705 00c3 01       		.byte	0x1
 2706 00c4 3F       		.uleb128 0x3f
 2707 00c5 19       		.uleb128 0x19
 2708 00c6 03       		.uleb128 0x3
 2709 00c7 0E       		.uleb128 0xe
 2710 00c8 3A       		.uleb128 0x3a
 2711 00c9 0B       		.uleb128 0xb
 2712 00ca 3B       		.uleb128 0x3b
 2713 00cb 05       		.uleb128 0x5
 2714 00cc 27       		.uleb128 0x27
 2715 00cd 19       		.uleb128 0x19
 2716 00ce 49       		.uleb128 0x49
 2717 00cf 13       		.uleb128 0x13
 2718 00d0 11       		.uleb128 0x11
 2719 00d1 01       		.uleb128 0x1
 2720 00d2 12       		.uleb128 0x12
 2721 00d3 06       		.uleb128 0x6
 2722 00d4 40       		.uleb128 0x40
 2723 00d5 18       		.uleb128 0x18
 2724 00d6 9642     		.uleb128 0x2116
 2725 00d8 19       		.uleb128 0x19
 2726 00d9 01       		.uleb128 0x1
 2727 00da 13       		.uleb128 0x13
 2728 00db 00       		.byte	0
 2729 00dc 00       		.byte	0
 2730 00dd 0D       		.uleb128 0xd
 2731 00de 34       		.uleb128 0x34
 2732 00df 00       		.byte	0
 2733 00e0 03       		.uleb128 0x3
 2734 00e1 0E       		.uleb128 0xe
 2735 00e2 3A       		.uleb128 0x3a
 2736 00e3 0B       		.uleb128 0xb
 2737 00e4 3B       		.uleb128 0x3b
 2738 00e5 05       		.uleb128 0x5
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 77


 2739 00e6 49       		.uleb128 0x49
 2740 00e7 13       		.uleb128 0x13
 2741 00e8 02       		.uleb128 0x2
 2742 00e9 18       		.uleb128 0x18
 2743 00ea 00       		.byte	0
 2744 00eb 00       		.byte	0
 2745 00ec 0E       		.uleb128 0xe
 2746 00ed 2E       		.uleb128 0x2e
 2747 00ee 01       		.byte	0x1
 2748 00ef 3F       		.uleb128 0x3f
 2749 00f0 19       		.uleb128 0x19
 2750 00f1 03       		.uleb128 0x3
 2751 00f2 0E       		.uleb128 0xe
 2752 00f3 3A       		.uleb128 0x3a
 2753 00f4 0B       		.uleb128 0xb
 2754 00f5 3B       		.uleb128 0x3b
 2755 00f6 05       		.uleb128 0x5
 2756 00f7 27       		.uleb128 0x27
 2757 00f8 19       		.uleb128 0x19
 2758 00f9 49       		.uleb128 0x49
 2759 00fa 13       		.uleb128 0x13
 2760 00fb 11       		.uleb128 0x11
 2761 00fc 01       		.uleb128 0x1
 2762 00fd 12       		.uleb128 0x12
 2763 00fe 06       		.uleb128 0x6
 2764 00ff 40       		.uleb128 0x40
 2765 0100 18       		.uleb128 0x18
 2766 0101 9742     		.uleb128 0x2117
 2767 0103 19       		.uleb128 0x19
 2768 0104 01       		.uleb128 0x1
 2769 0105 13       		.uleb128 0x13
 2770 0106 00       		.byte	0
 2771 0107 00       		.byte	0
 2772 0108 0F       		.uleb128 0xf
 2773 0109 2E       		.uleb128 0x2e
 2774 010a 01       		.byte	0x1
 2775 010b 3F       		.uleb128 0x3f
 2776 010c 19       		.uleb128 0x19
 2777 010d 03       		.uleb128 0x3
 2778 010e 0E       		.uleb128 0xe
 2779 010f 3A       		.uleb128 0x3a
 2780 0110 0B       		.uleb128 0xb
 2781 0111 3B       		.uleb128 0x3b
 2782 0112 05       		.uleb128 0x5
 2783 0113 27       		.uleb128 0x27
 2784 0114 19       		.uleb128 0x19
 2785 0115 11       		.uleb128 0x11
 2786 0116 01       		.uleb128 0x1
 2787 0117 12       		.uleb128 0x12
 2788 0118 06       		.uleb128 0x6
 2789 0119 40       		.uleb128 0x40
 2790 011a 18       		.uleb128 0x18
 2791 011b 9642     		.uleb128 0x2116
 2792 011d 19       		.uleb128 0x19
 2793 011e 01       		.uleb128 0x1
 2794 011f 13       		.uleb128 0x13
 2795 0120 00       		.byte	0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 78


 2796 0121 00       		.byte	0
 2797 0122 10       		.uleb128 0x10
 2798 0123 0F       		.uleb128 0xf
 2799 0124 00       		.byte	0
 2800 0125 0B       		.uleb128 0xb
 2801 0126 0B       		.uleb128 0xb
 2802 0127 49       		.uleb128 0x49
 2803 0128 13       		.uleb128 0x13
 2804 0129 00       		.byte	0
 2805 012a 00       		.byte	0
 2806 012b 11       		.uleb128 0x11
 2807 012c 26       		.uleb128 0x26
 2808 012d 00       		.byte	0
 2809 012e 49       		.uleb128 0x49
 2810 012f 13       		.uleb128 0x13
 2811 0130 00       		.byte	0
 2812 0131 00       		.byte	0
 2813 0132 12       		.uleb128 0x12
 2814 0133 0B       		.uleb128 0xb
 2815 0134 01       		.byte	0x1
 2816 0135 11       		.uleb128 0x11
 2817 0136 01       		.uleb128 0x1
 2818 0137 12       		.uleb128 0x12
 2819 0138 06       		.uleb128 0x6
 2820 0139 00       		.byte	0
 2821 013a 00       		.byte	0
 2822 013b 13       		.uleb128 0x13
 2823 013c 34       		.uleb128 0x34
 2824 013d 00       		.byte	0
 2825 013e 03       		.uleb128 0x3
 2826 013f 0E       		.uleb128 0xe
 2827 0140 3A       		.uleb128 0x3a
 2828 0141 0B       		.uleb128 0xb
 2829 0142 3B       		.uleb128 0x3b
 2830 0143 0B       		.uleb128 0xb
 2831 0144 49       		.uleb128 0x49
 2832 0145 13       		.uleb128 0x13
 2833 0146 3F       		.uleb128 0x3f
 2834 0147 19       		.uleb128 0x19
 2835 0148 02       		.uleb128 0x2
 2836 0149 18       		.uleb128 0x18
 2837 014a 00       		.byte	0
 2838 014b 00       		.byte	0
 2839 014c 14       		.uleb128 0x14
 2840 014d 01       		.uleb128 0x1
 2841 014e 01       		.byte	0x1
 2842 014f 49       		.uleb128 0x49
 2843 0150 13       		.uleb128 0x13
 2844 0151 01       		.uleb128 0x1
 2845 0152 13       		.uleb128 0x13
 2846 0153 00       		.byte	0
 2847 0154 00       		.byte	0
 2848 0155 15       		.uleb128 0x15
 2849 0156 21       		.uleb128 0x21
 2850 0157 00       		.byte	0
 2851 0158 49       		.uleb128 0x49
 2852 0159 13       		.uleb128 0x13
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 79


 2853 015a 2F       		.uleb128 0x2f
 2854 015b 0B       		.uleb128 0xb
 2855 015c 00       		.byte	0
 2856 015d 00       		.byte	0
 2857 015e 00       		.byte	0
 2858              		.section	.debug_aranges,"",%progbits
 2859 0000 EC000000 		.4byte	0xec
 2860 0004 0200     		.2byte	0x2
 2861 0006 00000000 		.4byte	.Ldebug_info0
 2862 000a 04       		.byte	0x4
 2863 000b 00       		.byte	0
 2864 000c 0000     		.2byte	0
 2865 000e 0000     		.2byte	0
 2866 0010 00000000 		.4byte	.LFB2
 2867 0014 24000000 		.4byte	.LFE2-.LFB2
 2868 0018 00000000 		.4byte	.LFB3
 2869 001c 5C000000 		.4byte	.LFE3-.LFB3
 2870 0020 00000000 		.4byte	.LFB4
 2871 0024 6C000000 		.4byte	.LFE4-.LFB4
 2872 0028 00000000 		.4byte	.LFB5
 2873 002c 68000000 		.4byte	.LFE5-.LFB5
 2874 0030 00000000 		.4byte	.LFB6
 2875 0034 0C000000 		.4byte	.LFE6-.LFB6
 2876 0038 00000000 		.4byte	.LFB7
 2877 003c 14000000 		.4byte	.LFE7-.LFB7
 2878 0040 00000000 		.4byte	.LFB8
 2879 0044 20000000 		.4byte	.LFE8-.LFB8
 2880 0048 00000000 		.4byte	.LFB9
 2881 004c A0000000 		.4byte	.LFE9-.LFB9
 2882 0050 00000000 		.4byte	.LFB10
 2883 0054 48000000 		.4byte	.LFE10-.LFB10
 2884 0058 00000000 		.4byte	.LFB11
 2885 005c CC000000 		.4byte	.LFE11-.LFB11
 2886 0060 00000000 		.4byte	.LFB12
 2887 0064 40000000 		.4byte	.LFE12-.LFB12
 2888 0068 00000000 		.4byte	.LFB13
 2889 006c 90000000 		.4byte	.LFE13-.LFB13
 2890 0070 00000000 		.4byte	.LFB14
 2891 0074 7C000000 		.4byte	.LFE14-.LFB14
 2892 0078 00000000 		.4byte	.LFB15
 2893 007c 14000000 		.4byte	.LFE15-.LFB15
 2894 0080 00000000 		.4byte	.LFB16
 2895 0084 20000000 		.4byte	.LFE16-.LFB16
 2896 0088 00000000 		.4byte	.LFB17
 2897 008c 20000000 		.4byte	.LFE17-.LFB17
 2898 0090 00000000 		.4byte	.LFB18
 2899 0094 20000000 		.4byte	.LFE18-.LFB18
 2900 0098 00000000 		.4byte	.LFB19
 2901 009c 2C000000 		.4byte	.LFE19-.LFB19
 2902 00a0 00000000 		.4byte	.LFB20
 2903 00a4 14000000 		.4byte	.LFE20-.LFB20
 2904 00a8 00000000 		.4byte	.LFB21
 2905 00ac 34000000 		.4byte	.LFE21-.LFB21
 2906 00b0 00000000 		.4byte	.LFB22
 2907 00b4 58000000 		.4byte	.LFE22-.LFB22
 2908 00b8 00000000 		.4byte	.LFB23
 2909 00bc 5C000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 80


 2910 00c0 00000000 		.4byte	.LFB24
 2911 00c4 38000000 		.4byte	.LFE24-.LFB24
 2912 00c8 00000000 		.4byte	.LFB25
 2913 00cc 48000000 		.4byte	.LFE25-.LFB25
 2914 00d0 00000000 		.4byte	.LFB26
 2915 00d4 48000000 		.4byte	.LFE26-.LFB26
 2916 00d8 00000000 		.4byte	.LFB27
 2917 00dc B8000000 		.4byte	.LFE27-.LFB27
 2918 00e0 00000000 		.4byte	.LFB28
 2919 00e4 14000000 		.4byte	.LFE28-.LFB28
 2920 00e8 00000000 		.4byte	0
 2921 00ec 00000000 		.4byte	0
 2922              		.section	.debug_ranges,"",%progbits
 2923              	.Ldebug_ranges0:
 2924 0000 00000000 		.4byte	.LFB2
 2925 0004 24000000 		.4byte	.LFE2
 2926 0008 00000000 		.4byte	.LFB3
 2927 000c 5C000000 		.4byte	.LFE3
 2928 0010 00000000 		.4byte	.LFB4
 2929 0014 6C000000 		.4byte	.LFE4
 2930 0018 00000000 		.4byte	.LFB5
 2931 001c 68000000 		.4byte	.LFE5
 2932 0020 00000000 		.4byte	.LFB6
 2933 0024 0C000000 		.4byte	.LFE6
 2934 0028 00000000 		.4byte	.LFB7
 2935 002c 14000000 		.4byte	.LFE7
 2936 0030 00000000 		.4byte	.LFB8
 2937 0034 20000000 		.4byte	.LFE8
 2938 0038 00000000 		.4byte	.LFB9
 2939 003c A0000000 		.4byte	.LFE9
 2940 0040 00000000 		.4byte	.LFB10
 2941 0044 48000000 		.4byte	.LFE10
 2942 0048 00000000 		.4byte	.LFB11
 2943 004c CC000000 		.4byte	.LFE11
 2944 0050 00000000 		.4byte	.LFB12
 2945 0054 40000000 		.4byte	.LFE12
 2946 0058 00000000 		.4byte	.LFB13
 2947 005c 90000000 		.4byte	.LFE13
 2948 0060 00000000 		.4byte	.LFB14
 2949 0064 7C000000 		.4byte	.LFE14
 2950 0068 00000000 		.4byte	.LFB15
 2951 006c 14000000 		.4byte	.LFE15
 2952 0070 00000000 		.4byte	.LFB16
 2953 0074 20000000 		.4byte	.LFE16
 2954 0078 00000000 		.4byte	.LFB17
 2955 007c 20000000 		.4byte	.LFE17
 2956 0080 00000000 		.4byte	.LFB18
 2957 0084 20000000 		.4byte	.LFE18
 2958 0088 00000000 		.4byte	.LFB19
 2959 008c 2C000000 		.4byte	.LFE19
 2960 0090 00000000 		.4byte	.LFB20
 2961 0094 14000000 		.4byte	.LFE20
 2962 0098 00000000 		.4byte	.LFB21
 2963 009c 34000000 		.4byte	.LFE21
 2964 00a0 00000000 		.4byte	.LFB22
 2965 00a4 58000000 		.4byte	.LFE22
 2966 00a8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 81


 2967 00ac 5C000000 		.4byte	.LFE23
 2968 00b0 00000000 		.4byte	.LFB24
 2969 00b4 38000000 		.4byte	.LFE24
 2970 00b8 00000000 		.4byte	.LFB25
 2971 00bc 48000000 		.4byte	.LFE25
 2972 00c0 00000000 		.4byte	.LFB26
 2973 00c4 48000000 		.4byte	.LFE26
 2974 00c8 00000000 		.4byte	.LFB27
 2975 00cc B8000000 		.4byte	.LFE27
 2976 00d0 00000000 		.4byte	.LFB28
 2977 00d4 14000000 		.4byte	.LFE28
 2978 00d8 00000000 		.4byte	0
 2979 00dc 00000000 		.4byte	0
 2980              		.section	.debug_line,"",%progbits
 2981              	.Ldebug_line0:
 2982 0000 06030000 		.section	.debug_str,"MS",%progbits,1
 2982      02004200 
 2982      00000201 
 2982      FB0E0D00 
 2982      01010101 
 2983              	.LASF10:
 2984 0000 75696E74 		.ascii	"uint16\000"
 2984      313600
 2985              	.LASF47:
 2986 0007 74784461 		.ascii	"txDataByte\000"
 2986      74614279 
 2986      746500
 2987              	.LASF52:
 2988 0012 73747269 		.ascii	"string\000"
 2988      6E6700
 2989              	.LASF20:
 2990 0019 55415254 		.ascii	"UART2_Enable\000"
 2990      325F456E 
 2990      61626C65 
 2990      00
 2991              	.LASF7:
 2992 0026 6C6F6E67 		.ascii	"long long unsigned int\000"
 2992      206C6F6E 
 2992      6720756E 
 2992      7369676E 
 2992      65642069 
 2993              	.LASF68:
 2994 003d 55415254 		.ascii	"UART2_rxBufferWrite\000"
 2994      325F7278 
 2994      42756666 
 2994      65725772 
 2994      69746500 
 2995              	.LASF33:
 2996 0051 55415254 		.ascii	"UART2_GetChar\000"
 2996      325F4765 
 2996      74436861 
 2996      7200
 2997              	.LASF19:
 2998 005f 55415254 		.ascii	"UART2_Init\000"
 2998      325F496E 
 2998      697400
 2999              	.LASF6:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 82


 3000 006a 6C6F6E67 		.ascii	"long long int\000"
 3000      206C6F6E 
 3000      6720696E 
 3000      7400
 3001              	.LASF0:
 3002 0078 7369676E 		.ascii	"signed char\000"
 3002      65642063 
 3002      68617200 
 3003              	.LASF51:
 3004 0084 55415254 		.ascii	"UART2_PutString\000"
 3004      325F5075 
 3004      74537472 
 3004      696E6700 
 3005              	.LASF62:
 3006 0094 74785065 		.ascii	"txPeriod\000"
 3006      72696F64 
 3006      00
 3007              	.LASF23:
 3008 009d 55415254 		.ascii	"UART2_WriteControlRegister\000"
 3008      325F5772 
 3008      69746543 
 3008      6F6E7472 
 3008      6F6C5265 
 3009              	.LASF64:
 3010 00b8 55415254 		.ascii	"UART2_initVar\000"
 3010      325F696E 
 3010      69745661 
 3010      7200
 3011              	.LASF58:
 3012 00c6 55415254 		.ascii	"UART2_ClearTxBuffer\000"
 3012      325F436C 
 3012      65617254 
 3012      78427566 
 3012      66657200 
 3013              	.LASF18:
 3014 00da 55415254 		.ascii	"UART2_Start\000"
 3014      325F5374 
 3014      61727400 
 3015              	.LASF4:
 3016 00e6 6C6F6E67 		.ascii	"long int\000"
 3016      20696E74 
 3016      00
 3017              	.LASF50:
 3018 00ef 55415254 		.ascii	"UART2_PutChar\000"
 3018      325F5075 
 3018      74436861 
 3018      7200
 3019              	.LASF49:
 3020 00fd 55415254 		.ascii	"UART2_ReadTxStatus\000"
 3020      325F5265 
 3020      61645478 
 3020      53746174 
 3020      757300
 3021              	.LASF9:
 3022 0110 75696E74 		.ascii	"uint8\000"
 3022      3800
 3023              	.LASF12:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 83


 3024 0116 646F7562 		.ascii	"double\000"
 3024      6C6500
 3025              	.LASF41:
 3026 011d 61646472 		.ascii	"addressMode\000"
 3026      6573734D 
 3026      6F646500 
 3027              	.LASF25:
 3028 0129 636F6E74 		.ascii	"control\000"
 3028      726F6C00 
 3029              	.LASF60:
 3030 0131 7265744D 		.ascii	"retMode\000"
 3030      6F646500 
 3031              	.LASF72:
 3032 0139 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART2.c\000"
 3032      72617465 
 3032      645F536F 
 3032      75726365 
 3032      5C50536F 
 3033              	.LASF8:
 3034 0158 756E7369 		.ascii	"unsigned int\000"
 3034      676E6564 
 3034      20696E74 
 3034      00
 3035              	.LASF56:
 3036 0165 55415254 		.ascii	"UART2_PutCRLF\000"
 3036      325F5075 
 3036      7443524C 
 3036      4600
 3037              	.LASF36:
 3038 0173 6C6F6345 		.ascii	"locErrorStatus\000"
 3038      72726F72 
 3038      53746174 
 3038      757300
 3039              	.LASF5:
 3040 0182 6C6F6E67 		.ascii	"long unsigned int\000"
 3040      20756E73 
 3040      69676E65 
 3040      6420696E 
 3040      7400
 3041              	.LASF54:
 3042 0194 55415254 		.ascii	"UART2_PutArray\000"
 3042      325F5075 
 3042      74417272 
 3042      617900
 3043              	.LASF38:
 3044 01a3 73697A65 		.ascii	"size\000"
 3044      00
 3045              	.LASF3:
 3046 01a8 73686F72 		.ascii	"short unsigned int\000"
 3046      7420756E 
 3046      7369676E 
 3046      65642069 
 3046      6E7400
 3047              	.LASF30:
 3048 01bb 55415254 		.ascii	"UART2_ReadRxData\000"
 3048      325F5265 
 3048      61645278 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 84


 3048      44617461 
 3048      00
 3049              	.LASF45:
 3050 01cc 55415254 		.ascii	"UART2_SetTxInterruptMode\000"
 3050      325F5365 
 3050      74547849 
 3050      6E746572 
 3050      72757074 
 3051              	.LASF24:
 3052 01e5 55415254 		.ascii	"UART2_SetRxInterruptMode\000"
 3052      325F5365 
 3052      74527849 
 3052      6E746572 
 3052      72757074 
 3053              	.LASF53:
 3054 01fe 62756649 		.ascii	"bufIndex\000"
 3054      6E646578 
 3054      00
 3055              	.LASF26:
 3056 0207 696E7453 		.ascii	"intSrc\000"
 3056      726300
 3057              	.LASF71:
 3058 020e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3058      43313120 
 3058      352E342E 
 3058      31203230 
 3058      31363036 
 3059 0241 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3059      20726576 
 3059      6973696F 
 3059      6E203233 
 3059      37373135 
 3060 0274 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3060      66756E63 
 3060      74696F6E 
 3060      2D736563 
 3060      74696F6E 
 3061              	.LASF70:
 3062 029c 55415254 		.ascii	"UART2_rxBufferOverflow\000"
 3062      325F7278 
 3062      42756666 
 3062      65724F76 
 3062      6572666C 
 3063              	.LASF63:
 3064 02b3 55415254 		.ascii	"UART2_SetTxAddressMode\000"
 3064      325F5365 
 3064      74547841 
 3064      64647265 
 3064      73734D6F 
 3065              	.LASF67:
 3066 02ca 55415254 		.ascii	"UART2_rxBufferRead\000"
 3066      325F7278 
 3066      42756666 
 3066      65725265 
 3066      616400
 3067              	.LASF61:
 3068 02dd 746D7053 		.ascii	"tmpStat\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 85


 3068      74617400 
 3069              	.LASF17:
 3070 02e5 73697A65 		.ascii	"sizetype\000"
 3070      74797065 
 3070      00
 3071              	.LASF16:
 3072 02ee 6C6F6E67 		.ascii	"long double\000"
 3072      20646F75 
 3072      626C6500 
 3073              	.LASF48:
 3074 02fa 55415254 		.ascii	"UART2_ReadControlRegister\000"
 3074      325F5265 
 3074      6164436F 
 3074      6E74726F 
 3074      6C526567 
 3075              	.LASF43:
 3076 0314 61646472 		.ascii	"address\000"
 3076      65737300 
 3077              	.LASF29:
 3078 031c 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3078      78427566 
 3078      66657257 
 3078      72697465 
 3078      00
 3079              	.LASF34:
 3080 032d 72785374 		.ascii	"rxStatus\000"
 3080      61747573 
 3080      00
 3081              	.LASF46:
 3082 0336 55415254 		.ascii	"UART2_WriteTxData\000"
 3082      325F5772 
 3082      69746554 
 3082      78446174 
 3082      6100
 3083              	.LASF11:
 3084 0348 666C6F61 		.ascii	"float\000"
 3084      7400
 3085              	.LASF35:
 3086 034e 55415254 		.ascii	"UART2_GetByte\000"
 3086      325F4765 
 3086      74427974 
 3086      6500
 3087              	.LASF15:
 3088 035c 72656738 		.ascii	"reg8\000"
 3088      00
 3089              	.LASF1:
 3090 0361 756E7369 		.ascii	"unsigned char\000"
 3090      676E6564 
 3090      20636861 
 3090      7200
 3091              	.LASF57:
 3092 036f 55415254 		.ascii	"UART2_GetTxBufferSize\000"
 3092      325F4765 
 3092      74547842 
 3092      75666665 
 3092      7253697A 
 3093              	.LASF2:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 86


 3094 0385 73686F72 		.ascii	"short int\000"
 3094      7420696E 
 3094      7400
 3095              	.LASF69:
 3096 038f 55415254 		.ascii	"UART2_rxBufferLoopDetect\000"
 3096      325F7278 
 3096      42756666 
 3096      65724C6F 
 3096      6F704465 
 3097              	.LASF42:
 3098 03a8 55415254 		.ascii	"UART2_SetRxAddress1\000"
 3098      325F5365 
 3098      74527841 
 3098      64647265 
 3098      73733100 
 3099              	.LASF44:
 3100 03bc 55415254 		.ascii	"UART2_SetRxAddress2\000"
 3100      325F5365 
 3100      74527841 
 3100      64647265 
 3100      73733200 
 3101              	.LASF55:
 3102 03d0 62797465 		.ascii	"byteCount\000"
 3102      436F756E 
 3102      7400
 3103              	.LASF21:
 3104 03da 55415254 		.ascii	"UART2_Stop\000"
 3104      325F5374 
 3104      6F7000
 3105              	.LASF27:
 3106 03e5 72784461 		.ascii	"rxData\000"
 3106      746100
 3107              	.LASF14:
 3108 03ec 63686172 		.ascii	"char\000"
 3108      00
 3109              	.LASF39:
 3110 03f1 55415254 		.ascii	"UART2_ClearRxBuffer\000"
 3110      325F436C 
 3110      65617252 
 3110      78427566 
 3110      66657200 
 3111              	.LASF13:
 3112 0405 63686172 		.ascii	"char8\000"
 3112      3800
 3113              	.LASF65:
 3114 040b 55415254 		.ascii	"UART2_errorStatus\000"
 3114      325F6572 
 3114      726F7253 
 3114      74617475 
 3114      7300
 3115              	.LASF31:
 3116 041d 55415254 		.ascii	"UART2_ReadRxStatus\000"
 3116      325F5265 
 3116      61645278 
 3116      53746174 
 3116      757300
 3117              	.LASF28:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccXZRlLg.s 			page 87


 3118 0430 6C6F6352 		.ascii	"locRxBufferRead\000"
 3118      78427566 
 3118      66657252 
 3118      65616400 
 3119              	.LASF73:
 3120 0440 433A5C55 		.ascii	"C:\\Users\\alexport\\OneDrive - Safeguard Analytics"
 3120      73657273 
 3120      5C616C65 
 3120      78706F72 
 3120      745C4F6E 
 3121 0470 5C53412D 		.ascii	"\\SA-220\\SA-220.cydsn\000"
 3121      3232305C 
 3121      53412D32 
 3121      32302E63 
 3121      7964736E 
 3122              	.LASF22:
 3123 0485 656E6162 		.ascii	"enableInterrupts\000"
 3123      6C65496E 
 3123      74657272 
 3123      75707473 
 3123      00
 3124              	.LASF32:
 3125 0496 73746174 		.ascii	"status\000"
 3125      757300
 3126              	.LASF66:
 3127 049d 55415254 		.ascii	"UART2_rxBuffer\000"
 3127      325F7278 
 3127      42756666 
 3127      657200
 3128              	.LASF59:
 3129 04ac 55415254 		.ascii	"UART2_SendBreak\000"
 3129      325F5365 
 3129      6E644272 
 3129      65616B00 
 3130              	.LASF37:
 3131 04bc 55415254 		.ascii	"UART2_GetRxBufferSize\000"
 3131      325F4765 
 3131      74527842 
 3131      75666665 
 3131      7253697A 
 3132              	.LASF40:
 3133 04d2 55415254 		.ascii	"UART2_SetRxAddressMode\000"
 3133      325F5365 
 3133      74527841 
 3133      64647265 
 3133      73734D6F 
 3134              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
