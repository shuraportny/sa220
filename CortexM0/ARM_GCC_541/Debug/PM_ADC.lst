ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PM_ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PM_ADC_initVar
  20              		.bss
  21              		.type	PM_ADC_initVar, %object
  22              		.size	PM_ADC_initVar, 1
  23              	PM_ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	PM_ADC_offset,2,4
  26              		.comm	PM_ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	PM_ADC_channelsConfig, %object
  30              		.size	PM_ADC_channelsConfig, 4
  31              	PM_ADC_channelsConfig:
  32 0000 00000000 		.space	4
  33              		.section	.text.PM_ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	PM_ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	PM_ADC_Start, %function
  39              	PM_ADC_Start:
  40              	.LFB2:
  41              		.file 1 "Generated_Source\\PSoC4\\PM_ADC.c"
   1:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PM_ADC.c **** * File Name: PM_ADC.c
   3:Generated_Source\PSoC4/PM_ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/PM_ADC.c **** *
   5:Generated_Source\PSoC4/PM_ADC.c **** * Description:
   6:Generated_Source\PSoC4/PM_ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/PM_ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/PM_ADC.c **** *
   9:Generated_Source\PSoC4/PM_ADC.c **** * Note:
  10:Generated_Source\PSoC4/PM_ADC.c **** *
  11:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/PM_ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/PM_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/PM_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/PM_ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 2


  17:Generated_Source\PSoC4/PM_ADC.c **** 
  18:Generated_Source\PSoC4/PM_ADC.c **** #include "PM_ADC.h"
  19:Generated_Source\PSoC4/PM_ADC.c **** 
  20:Generated_Source\PSoC4/PM_ADC.c **** 
  21:Generated_Source\PSoC4/PM_ADC.c **** /***************************************
  22:Generated_Source\PSoC4/PM_ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/PM_ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/PM_ADC.c **** uint8 PM_ADC_initVar = 0u;
  25:Generated_Source\PSoC4/PM_ADC.c **** volatile int16 PM_ADC_offset[PM_ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/PM_ADC.c **** volatile int32 PM_ADC_countsPer10Volt[PM_ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/PM_ADC.c **** 
  28:Generated_Source\PSoC4/PM_ADC.c **** 
  29:Generated_Source\PSoC4/PM_ADC.c **** /***************************************
  30:Generated_Source\PSoC4/PM_ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/PM_ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/PM_ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/PM_ADC.c **** static const uint32 CYCODE PM_ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/PM_ADC.c **** 
  35:Generated_Source\PSoC4/PM_ADC.c **** 
  36:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_Start
  38:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/PM_ADC.c **** *
  40:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
  41:Generated_Source\PSoC4/PM_ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/PM_ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/PM_ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/PM_ADC.c **** *
  45:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/PM_ADC.c **** *  None.
  47:Generated_Source\PSoC4/PM_ADC.c **** *
  48:Generated_Source\PSoC4/PM_ADC.c **** * Return:
  49:Generated_Source\PSoC4/PM_ADC.c **** *  None.
  50:Generated_Source\PSoC4/PM_ADC.c **** *
  51:Generated_Source\PSoC4/PM_ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/PM_ADC.c **** *  The PM_ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/PM_ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/PM_ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/PM_ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_Start() routine.
  57:Generated_Source\PSoC4/PM_ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/PM_ADC.c **** *  to zero before call of PM_ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_Init() and PM_ADC_Enable() as done in the
  60:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_Start() routine.
  61:Generated_Source\PSoC4/PM_ADC.c **** *
  62:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_Start(void)
  64:Generated_Source\PSoC4/PM_ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/PM_ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/PM_ADC.c ****     if(PM_ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/PM_ADC.c ****     {
  68:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	PM_ADC_Init
  69:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/PM_ADC.c ****     }
  71:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	PM_ADC_Enable
  72:Generated_Source\PSoC4/PM_ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	PM_ADC_initVar
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	PM_ADC_Start, .-PM_ADC_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.PM_ADC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	PM_ADC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	PM_ADC_Init, %function
  85              	PM_ADC_Init:
  86              	.LFB3:
  73:Generated_Source\PSoC4/PM_ADC.c **** 
  74:Generated_Source\PSoC4/PM_ADC.c **** 
  75:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_Init
  77:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/PM_ADC.c **** *
  79:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
  80:Generated_Source\PSoC4/PM_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/PM_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_Start().
  83:Generated_Source\PSoC4/PM_ADC.c **** *
  84:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/PM_ADC.c **** *  None.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 4


  86:Generated_Source\PSoC4/PM_ADC.c **** *
  87:Generated_Source\PSoC4/PM_ADC.c **** * Return:
  88:Generated_Source\PSoC4/PM_ADC.c **** *  None.
  89:Generated_Source\PSoC4/PM_ADC.c **** *
  90:Generated_Source\PSoC4/PM_ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/PM_ADC.c **** *  The PM_ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/PM_ADC.c **** *
  93:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_Init(void)
  95:Generated_Source\PSoC4/PM_ADC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/PM_ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/PM_ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/PM_ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/PM_ADC.c **** 
 100:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/PM_ADC.c ****         static const uint8 CYCODE PM_ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/PM_ADC.c ****         {
 103:Generated_Source\PSoC4/PM_ADC.c ****             (uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/PM_ADC.c ****             (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/PM_ADC.c ****             ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/PM_ADC.c ****              (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 5


 131:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/PM_ADC.c ****                 ,(uint8)(PM_ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/PM_ADC.c ****                  (uint8)PM_ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/PM_ADC.c ****         };
 168:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/PM_ADC.c **** 
 170:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/PM_ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/PM_ADC.c ****         CyIntSetPriority(PM_ADC_INTC_NUMBER, PM_ADC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0F20     		movs	r0, #15
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/PM_ADC.c ****         (void)CyIntSetVector(PM_ADC_INTC_NUMBER, &PM_ADC_ISR);
 103              		.loc 1 173 0
 104 000e 514B     		ldr	r3, .L16
 105 0010 1900     		movs	r1, r3
 106 0012 0F20     		movs	r0, #15
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/PM_ADC.c ****     #endif   /* End PM_ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/PM_ADC.c **** 
 176:Generated_Source\PSoC4/PM_ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CHAN_EN_REG = PM_ADC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 6


 109 0018 4F4B     		ldr	r3, .L16+4
 110 001a FF22     		movs	r2, #255
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG |= PM_ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/PM_ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/PM_ADC.c ****         (((PM_ADC_PUMP_CTRL_REG & PM_ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 4F4B     		ldr	r3, .L16+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG |= PM_ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG |= PM_ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 4E49     		ldr	r1, .L16+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG |= PM_ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 4E49     		ldr	r1, .L16+16
 124              	.L7:
 178:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG |= PM_ADC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 4E4B     		ldr	r3, .L16+20
 127 002e 4E4A     		ldr	r2, .L16+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_SAMPLE_CTRL_REG = PM_ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 4D4B     		ldr	r3, .L16+24
 133 0038 4D4A     		ldr	r2, .L16+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_THRES_REG = PM_ADC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 4D4B     		ldr	r3, .L16+32
 137 003e 4E4A     		ldr	r2, .L16+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_COND_REG  = PM_ADC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 4E4B     		ldr	r3, .L16+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_SAMPLE_TIME01_REG = PM_ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 4D4B     		ldr	r3, .L16+44
 145 004a 4E4A     		ldr	r2, .L16+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_SAMPLE_TIME23_REG = PM_ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 4E4B     		ldr	r3, .L16+52
 149 0050 4E4A     		ldr	r2, .L16+56
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/PM_ADC.c ****     
 188:Generated_Source\PSoC4/PM_ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 7


 189:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_MUX_SWITCH0_REG |= PM_ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/PM_ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/PM_ADC.c ****             PM_ADC_MUX_SWITCH_HW_CTRL_REG |= PM_ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/PM_ADC.c ****     #endif /*PM_ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/PM_ADC.c **** 
 197:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 151              		.loc 1 197 0 discriminator 4
 152 0054 4E4B     		ldr	r3, .L16+60
 153 0056 0022     		movs	r2, #0
 154 0058 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 155              		.loc 1 198 0 discriminator 4
 156 005a 4E4B     		ldr	r3, .L16+64
 157 005c 0022     		movs	r2, #0
 158 005e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_INTR_MASK_REG = PM_ADC_SAR_INTR_MASK;
 159              		.loc 1 199 0 discriminator 4
 160 0060 4D4B     		ldr	r3, .L16+68
 161 0062 0122     		movs	r2, #1
 162 0064 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/PM_ADC.c **** 
 201:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_CY_SAR_IP_VER == PM_ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_ANA_TRIM_REG = PM_ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* (PM_ADC_CY_SAR_IP_VER == PM_ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/PM_ADC.c **** 
 205:Generated_Source\PSoC4/PM_ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/PM_ADC.c ****     tmpRegVal = PM_ADC_SAR_DFT_CTRL_REG;
 163              		.loc 1 206 0 discriminator 4
 164 0066 4D4B     		ldr	r3, .L16+72
 165 0068 1B68     		ldr	r3, [r3]
 166 006a 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/PM_ADC.c ****     tmpRegVal &= (uint32)~PM_ADC_DCEN;
 167              		.loc 1 207 0 discriminator 4
 168 006c 7B68     		ldr	r3, [r7, #4]
 169 006e 4C4A     		ldr	r2, .L16+76
 170 0070 1340     		ands	r3, r2
 171 0072 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/PM_ADC.c ****     
 209:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_CY_SAR_IP_VER == PM_ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_NOMINAL_CLOCK_FREQ > (PM_ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal |= PM_ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/PM_ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal |= PM_ADC_DLY_INC;
 214:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/PM_ADC.c ****     #else
 216:Generated_Source\PSoC4/PM_ADC.c ****         #if ((PM_ADC_DEFAULT_VREF_SEL == PM_ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/PM_ADC.c ****              (PM_ADC_DEFAULT_VREF_SEL == PM_ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal |= PM_ADC_DLY_INC;
 219:Generated_Source\PSoC4/PM_ADC.c ****         #else
 220:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal |= PM_ADC_DCEN;
 172              		.loc 1 220 0 discriminator 4
 173 0074 7B68     		ldr	r3, [r7, #4]
 174 0076 8022     		movs	r2, #128
 175 0078 9205     		lsls	r2, r2, #22
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 8


 176 007a 1343     		orrs	r3, r2
 177 007c 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal &= (uint32)~PM_ADC_DLY_INC;
 178              		.loc 1 221 0 discriminator 4
 179 007e 7B68     		ldr	r3, [r7, #4]
 180 0080 0122     		movs	r2, #1
 181 0082 9343     		bics	r3, r2
 182 0084 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* ((PM_ADC_DEFAULT_VREF_SEL == PM_ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/PM_ADC.c ****                    (PM_ADC_DEFAULT_VREF_SEL == PM_ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* (PM_ADC_CY_SAR_IP_VER == PM_ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/PM_ADC.c ****     
 226:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 183              		.loc 1 226 0 discriminator 4
 184 0086 454B     		ldr	r3, .L16+72
 185 0088 7A68     		ldr	r2, [r7, #4]
 186 008a 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/PM_ADC.c **** 
 228:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_MAX_RESOLUTION != PM_ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_WOUNDING_REG = PM_ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* PM_ADC_MAX_RESOLUTION != PM_ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/PM_ADC.c **** 
 232:Generated_Source\PSoC4/PM_ADC.c ****     for(chNum = 0u; chNum < PM_ADC_TOTAL_CHANNELS_NUM; chNum++)
 187              		.loc 1 232 0 discriminator 4
 188 008c 0023     		movs	r3, #0
 189 008e FB60     		str	r3, [r7, #12]
 190 0090 59E0     		b	.L8
 191              	.L15:
 233:Generated_Source\PSoC4/PM_ADC.c ****     {
 234:Generated_Source\PSoC4/PM_ADC.c ****         tmpRegVal = (PM_ADC_channelsConfig[chNum] & PM_ADC_CHANNEL_CONFIG_MASK);
 192              		.loc 1 234 0
 193 0092 0022     		movs	r2, #0
 194 0094 DC23     		movs	r3, #220
 195 0096 9B01     		lsls	r3, r3, #6
 196 0098 1340     		ands	r3, r2
 197 009a 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal |= PM_ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* End PM_ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/PM_ADC.c ****         
 239:Generated_Source\PSoC4/PM_ADC.c ****         
 240:Generated_Source\PSoC4/PM_ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/PM_ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/PM_ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/PM_ADC.c ****         */
 244:Generated_Source\PSoC4/PM_ADC.c ****         #if((PM_ADC_MAX_RESOLUTION != PM_ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/PM_ADC.c ****             (PM_ADC_ALT_WOUNDING == PM_ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/PM_ADC.c ****             tmpRegVal &= (uint32)(~PM_ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_MAX_RESOLUTION != PM_ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/PM_ADC.c **** 
 249:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/PM_ADC.c ****         if(chNum < PM_ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/PM_ADC.c ****         {
 253:Generated_Source\PSoC4/PM_ADC.c ****             CY_SET_REG32((reg32 *)(PM_ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 198              		.loc 1 253 0
 199 009c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 9


 200 009e 9B00     		lsls	r3, r3, #2
 201 00a0 404A     		ldr	r2, .L16+80
 202 00a2 9446     		mov	ip, r2
 203 00a4 6344     		add	r3, r3, ip
 204 00a6 7A68     		ldr	r2, [r7, #4]
 205 00a8 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/PM_ADC.c **** 
 255:Generated_Source\PSoC4/PM_ADC.c ****             if((PM_ADC_channelsConfig[chNum] & PM_ADC_IS_SATURATE_EN_MASK) != 0u)
 206              		.loc 1 255 0
 207 00aa 0022     		movs	r2, #0
 208 00ac 0123     		movs	r3, #1
 209 00ae 1340     		ands	r3, r2
 210 00b0 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/PM_ADC.c ****             {
 257:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 211              		.loc 1 257 0
 212 00b2 374B     		ldr	r3, .L16+60
 213 00b4 364A     		ldr	r2, .L16+60
 214 00b6 1168     		ldr	r1, [r2]
 215 00b8 0120     		movs	r0, #1
 216 00ba FA68     		ldr	r2, [r7, #12]
 217 00bc 9040     		lsls	r0, r0, r2
 218 00be 0200     		movs	r2, r0
 219 00c0 1204     		lsls	r2, r2, #16
 220 00c2 120C     		lsrs	r2, r2, #16
 221 00c4 0A43     		orrs	r2, r1
 222 00c6 1A60     		str	r2, [r3]
 223              	.L9:
 258:Generated_Source\PSoC4/PM_ADC.c ****             }
 259:Generated_Source\PSoC4/PM_ADC.c **** 
 260:Generated_Source\PSoC4/PM_ADC.c ****             if((PM_ADC_channelsConfig[chNum] & PM_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 224              		.loc 1 260 0
 225 00c8 0022     		movs	r2, #0
 226 00ca 0223     		movs	r3, #2
 227 00cc 1340     		ands	r3, r2
 228 00ce 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/PM_ADC.c ****             {
 262:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 229              		.loc 1 262 0
 230 00d0 304B     		ldr	r3, .L16+64
 231 00d2 304A     		ldr	r2, .L16+64
 232 00d4 1168     		ldr	r1, [r2]
 233 00d6 0120     		movs	r0, #1
 234 00d8 FA68     		ldr	r2, [r7, #12]
 235 00da 9040     		lsls	r0, r0, r2
 236 00dc 0200     		movs	r2, r0
 237 00de 1204     		lsls	r2, r2, #16
 238 00e0 120C     		lsrs	r2, r2, #16
 239 00e2 0A43     		orrs	r2, r1
 240 00e4 1A60     		str	r2, [r3]
 241              	.L10:
 263:Generated_Source\PSoC4/PM_ADC.c ****             }
 264:Generated_Source\PSoC4/PM_ADC.c ****         }
 265:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/PM_ADC.c ****             else
 267:Generated_Source\PSoC4/PM_ADC.c ****             {
 268:Generated_Source\PSoC4/PM_ADC.c ****                 CY_SET_REG32(PM_ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | PM_ADC_INJ_TAILGATING);
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 10


 269:Generated_Source\PSoC4/PM_ADC.c **** 
 270:Generated_Source\PSoC4/PM_ADC.c ****                 if((PM_ADC_channelsConfig[chNum] & PM_ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/PM_ADC.c ****                 {
 272:Generated_Source\PSoC4/PM_ADC.c ****                     PM_ADC_SAR_INTR_MASK_REG |= PM_ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/PM_ADC.c ****                 }
 274:Generated_Source\PSoC4/PM_ADC.c **** 
 275:Generated_Source\PSoC4/PM_ADC.c ****                 if((PM_ADC_channelsConfig[chNum] & PM_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/PM_ADC.c ****                 {
 277:Generated_Source\PSoC4/PM_ADC.c ****                     PM_ADC_SAR_INTR_MASK_REG |= PM_ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/PM_ADC.c ****                 }
 279:Generated_Source\PSoC4/PM_ADC.c ****             }
 280:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/PM_ADC.c **** 
 282:Generated_Source\PSoC4/PM_ADC.c ****         if((PM_ADC_channelsConfig[chNum] & PM_ADC_ALT_RESOLUTION_ON) != 0u)
 242              		.loc 1 282 0
 243 00e6 0022     		movs	r2, #0
 244 00e8 8023     		movs	r3, #128
 245 00ea 9B00     		lsls	r3, r3, #2
 246 00ec 1340     		ands	r3, r2
 247 00ee 03D0     		beq	.L11
 283:Generated_Source\PSoC4/PM_ADC.c ****         {
 284:Generated_Source\PSoC4/PM_ADC.c ****                counts = (int32)PM_ADC_DEFAULT_MAX_WRK_ALT;
 248              		.loc 1 284 0
 249 00f0 8023     		movs	r3, #128
 250 00f2 5B00     		lsls	r3, r3, #1
 251 00f4 BB60     		str	r3, [r7, #8]
 252 00f6 02E0     		b	.L12
 253              	.L11:
 285:Generated_Source\PSoC4/PM_ADC.c ****         }
 286:Generated_Source\PSoC4/PM_ADC.c ****         else
 287:Generated_Source\PSoC4/PM_ADC.c ****         {
 288:Generated_Source\PSoC4/PM_ADC.c ****                counts = (int32)PM_ADC_SAR_WRK_MAX_12BIT;
 254              		.loc 1 288 0
 255 00f8 8023     		movs	r3, #128
 256 00fa 5B01     		lsls	r3, r3, #5
 257 00fc BB60     		str	r3, [r7, #8]
 258              	.L12:
 289:Generated_Source\PSoC4/PM_ADC.c ****         }
 290:Generated_Source\PSoC4/PM_ADC.c **** 
 291:Generated_Source\PSoC4/PM_ADC.c ****         if((PM_ADC_channelsConfig[chNum] & PM_ADC_DIFFERENTIAL_EN) == 0u)
 259              		.loc 1 291 0
 260 00fe 0022     		movs	r2, #0
 261 0100 8023     		movs	r3, #128
 262 0102 5B00     		lsls	r3, r3, #1
 263 0104 1340     		ands	r3, r2
 264 0106 05D1     		bne	.L13
 292:Generated_Source\PSoC4/PM_ADC.c ****         {
 293:Generated_Source\PSoC4/PM_ADC.c ****             #if((PM_ADC_DEFAULT_SE_RESULT_FORMAT_SEL == PM_ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/PM_ADC.c ****                 (PM_ADC_DEFAULT_NEG_INPUT_SEL == PM_ADC__VREF))
 295:Generated_Source\PSoC4/PM_ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/PM_ADC.c ****             #else
 298:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_offset[chNum] = 0;
 265              		.loc 1 298 0
 266 0108 274B     		ldr	r3, .L16+84
 267 010a FA68     		ldr	r2, [r7, #12]
 268 010c 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 11


 269 010e 0021     		movs	r1, #0
 270 0110 D152     		strh	r1, [r2, r3]
 271 0112 04E0     		b	.L14
 272              	.L13:
 299:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == PM_ADC__FSIGNED */
 300:Generated_Source\PSoC4/PM_ADC.c ****         }
 301:Generated_Source\PSoC4/PM_ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/PM_ADC.c ****         {
 303:Generated_Source\PSoC4/PM_ADC.c ****             #if(PM_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == PM_ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/PM_ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/PM_ADC.c ****             #else
 307:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_offset[chNum] = 0;
 273              		.loc 1 307 0
 274 0114 244B     		ldr	r3, .L16+84
 275 0116 FA68     		ldr	r2, [r7, #12]
 276 0118 5200     		lsls	r2, r2, #1
 277 011a 0021     		movs	r1, #0
 278 011c D152     		strh	r1, [r2, r3]
 279              	.L14:
 308:Generated_Source\PSoC4/PM_ADC.c ****             #endif /* end PM_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == PM_ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/PM_ADC.c ****         }
 310:Generated_Source\PSoC4/PM_ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_countsPer10Volt[chNum] = (int16)(((counts * PM_ADC_10MV_COUNTS) +
 280              		.loc 1 311 0 discriminator 2
 281 011e BB68     		ldr	r3, [r7, #8]
 282 0120 224A     		ldr	r2, .L16+88
 283 0122 5343     		muls	r3, r2
 284 0124 224A     		ldr	r2, .L16+92
 285 0126 9446     		mov	ip, r2
 286 0128 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/PM_ADC.c ****                             PM_ADC_DEFAULT_VREF_MV_VALUE) / (PM_ADC_DEFAULT_VREF_MV_VALUE * 2));
 287              		.loc 1 312 0 discriminator 2
 288 012a 2249     		ldr	r1, .L16+96
 289 012c 1800     		movs	r0, r3
 290 012e FFF7FEFF 		bl	__aeabi_idiv
 291 0132 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/PM_ADC.c ****                             PM_ADC_DEFAULT_VREF_MV_VALUE) / (PM_ADC_DEFAULT_VREF_MV_VALUE * 2));
 292              		.loc 1 311 0 discriminator 2
 293 0134 1BB2     		sxth	r3, r3
 294 0136 1900     		movs	r1, r3
 295 0138 1F4B     		ldr	r3, .L16+100
 296 013a FA68     		ldr	r2, [r7, #12]
 297 013c 9200     		lsls	r2, r2, #2
 298 013e D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/PM_ADC.c ****     {
 299              		.loc 1 232 0 discriminator 2
 300 0140 FB68     		ldr	r3, [r7, #12]
 301 0142 0133     		adds	r3, r3, #1
 302 0144 FB60     		str	r3, [r7, #12]
 303              	.L8:
 232:Generated_Source\PSoC4/PM_ADC.c ****     {
 304              		.loc 1 232 0 is_stmt 0 discriminator 1
 305 0146 FB68     		ldr	r3, [r7, #12]
 306 0148 002B     		cmp	r3, #0
 307 014a A2D0     		beq	.L15
 313:Generated_Source\PSoC4/PM_ADC.c ****     }
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 12


 314:Generated_Source\PSoC4/PM_ADC.c **** }
 308              		.loc 1 314 0 is_stmt 1
 309 014c C046     		nop
 310 014e BD46     		mov	sp, r7
 311 0150 04B0     		add	sp, sp, #16
 312              		@ sp needed
 313 0152 80BD     		pop	{r7, pc}
 314              	.L17:
 315              		.align	2
 316              	.L16:
 317 0154 00000000 		.word	PM_ADC_ISR
 318 0158 20003A40 		.word	1077542944
 319 015c 80033A40 		.word	1077543808
 320 0160 500E1050 		.word	1343229520
 321 0164 500E0050 		.word	1342180944
 322 0168 00003A40 		.word	1077542912
 323 016c 04003A40 		.word	1077542916
 324 0170 88000080 		.word	-2147483512
 325 0174 18003A40 		.word	1077542936
 326 0178 0000FF07 		.word	134152192
 327 017c 1C003A40 		.word	1077542940
 328 0180 10003A40 		.word	1077542928
 329 0184 20000200 		.word	131104
 330 0188 14003A40 		.word	1077542932
 331 018c 02000200 		.word	131074
 332 0190 28023A40 		.word	1077543464
 333 0194 38023A40 		.word	1077543480
 334 0198 18023A40 		.word	1077543448
 335 019c 30003A40 		.word	1077542960
 336 01a0 FFFFFFDF 		.word	-536870913
 337 01a4 80003A40 		.word	1077543040
 338 01a8 00000000 		.word	PM_ADC_offset
 339 01ac 10270000 		.word	10000
 340 01b0 C4090000 		.word	2500
 341 01b4 88130000 		.word	5000
 342 01b8 00000000 		.word	PM_ADC_countsPer10Volt
 343              		.cfi_endproc
 344              	.LFE3:
 345              		.size	PM_ADC_Init, .-PM_ADC_Init
 346              		.section	.text.PM_ADC_Enable,"ax",%progbits
 347              		.align	2
 348              		.global	PM_ADC_Enable
 349              		.code	16
 350              		.thumb_func
 351              		.type	PM_ADC_Enable, %function
 352              	PM_ADC_Enable:
 353              	.LFB4:
 315:Generated_Source\PSoC4/PM_ADC.c **** 
 316:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/PM_ADC.c **** *
 320:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 321:Generated_Source\PSoC4/PM_ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/PM_ADC.c **** *
 323:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/PM_ADC.c **** *  None.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 13


 325:Generated_Source\PSoC4/PM_ADC.c **** *
 326:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 327:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 328:Generated_Source\PSoC4/PM_ADC.c **** *
 329:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_Enable(void)
 331:Generated_Source\PSoC4/PM_ADC.c **** {
 354              		.loc 1 331 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/PM_ADC.c ****     if (0u == (PM_ADC_SAR_CTRL_REG & PM_ADC_ENABLE))
 364              		.loc 1 332 0
 365 0004 0A4B     		ldr	r3, .L22
 366 0006 1B68     		ldr	r3, [r3]
 367 0008 002B     		cmp	r3, #0
 368 000a 0EDB     		blt	.L21
 333:Generated_Source\PSoC4/PM_ADC.c ****     {
 334:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_CY_SAR_IP_VER != PM_ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/PM_ADC.c **** 
 336:Generated_Source\PSoC4/PM_ADC.c ****             while (0u != (PM_ADC_SAR_STATUS_REG & PM_ADC_STATUS_BUSY))
 369              		.loc 1 336 0
 370 000c C046     		nop
 371              	.L20:
 372              		.loc 1 336 0 is_stmt 0 discriminator 1
 373 000e 094B     		ldr	r3, .L22+4
 374 0010 1B68     		ldr	r3, [r3]
 375 0012 002B     		cmp	r3, #0
 376 0014 FBDB     		blt	.L20
 337:Generated_Source\PSoC4/PM_ADC.c ****             {
 338:Generated_Source\PSoC4/PM_ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/PM_ADC.c ****             }
 340:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* (PM_ADC_CY_SAR_IP_VER != PM_ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/PM_ADC.c ****         
 342:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_SAR_CTRL_REG |= PM_ADC_ENABLE;
 377              		.loc 1 342 0 is_stmt 1
 378 0016 064B     		ldr	r3, .L22
 379 0018 054A     		ldr	r2, .L22
 380 001a 1268     		ldr	r2, [r2]
 381 001c 8021     		movs	r1, #128
 382 001e 0906     		lsls	r1, r1, #24
 383 0020 0A43     		orrs	r2, r1
 384 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/PM_ADC.c ****         
 344:Generated_Source\PSoC4/PM_ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/PM_ADC.c ****         CyDelayUs(PM_ADC_10US_DELAY);         
 385              		.loc 1 345 0
 386 0024 0A20     		movs	r0, #10
 387 0026 FFF7FEFF 		bl	CyDelayUs
 388              	.L21:
 346:Generated_Source\PSoC4/PM_ADC.c ****     }
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 14


 347:Generated_Source\PSoC4/PM_ADC.c **** }
 389              		.loc 1 347 0
 390 002a C046     		nop
 391 002c BD46     		mov	sp, r7
 392              		@ sp needed
 393 002e 80BD     		pop	{r7, pc}
 394              	.L23:
 395              		.align	2
 396              	.L22:
 397 0030 00003A40 		.word	1077542912
 398 0034 08023A40 		.word	1077543432
 399              		.cfi_endproc
 400              	.LFE4:
 401              		.size	PM_ADC_Enable, .-PM_ADC_Enable
 402              		.section	.text.PM_ADC_Stop,"ax",%progbits
 403              		.align	2
 404              		.global	PM_ADC_Stop
 405              		.code	16
 406              		.thumb_func
 407              		.type	PM_ADC_Stop, %function
 408              	PM_ADC_Stop:
 409              	.LFB5:
 348:Generated_Source\PSoC4/PM_ADC.c **** 
 349:Generated_Source\PSoC4/PM_ADC.c **** 
 350:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_Stop
 352:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/PM_ADC.c **** *
 354:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 355:Generated_Source\PSoC4/PM_ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/PM_ADC.c **** *  mode.
 357:Generated_Source\PSoC4/PM_ADC.c **** *
 358:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 360:Generated_Source\PSoC4/PM_ADC.c **** *
 361:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 362:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 363:Generated_Source\PSoC4/PM_ADC.c **** *
 364:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_Stop(void)
 366:Generated_Source\PSoC4/PM_ADC.c **** {
 410              		.loc 1 366 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 0000 80B5     		push	{r7, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CTRL_REG &= (uint32)~PM_ADC_ENABLE;
 420              		.loc 1 367 0
 421 0004 044B     		ldr	r3, .L25
 422 0006 044A     		ldr	r2, .L25
 423 0008 1268     		ldr	r2, [r2]
 424 000a 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 15


 425 000c 5208     		lsrs	r2, r2, #1
 426 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/PM_ADC.c **** }
 427              		.loc 1 368 0
 428 0010 C046     		nop
 429 0012 BD46     		mov	sp, r7
 430              		@ sp needed
 431 0014 80BD     		pop	{r7, pc}
 432              	.L26:
 433 0016 C046     		.align	2
 434              	.L25:
 435 0018 00003A40 		.word	1077542912
 436              		.cfi_endproc
 437              	.LFE5:
 438              		.size	PM_ADC_Stop, .-PM_ADC_Stop
 439              		.section	.text.PM_ADC_StartConvert,"ax",%progbits
 440              		.align	2
 441              		.global	PM_ADC_StartConvert
 442              		.code	16
 443              		.thumb_func
 444              		.type	PM_ADC_StartConvert, %function
 445              	PM_ADC_StartConvert:
 446              	.LFB6:
 369:Generated_Source\PSoC4/PM_ADC.c **** 
 370:Generated_Source\PSoC4/PM_ADC.c **** 
 371:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_StartConvert
 373:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/PM_ADC.c **** *
 375:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 376:Generated_Source\PSoC4/PM_ADC.c **** *  Description:
 377:Generated_Source\PSoC4/PM_ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/PM_ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/PM_ADC.c **** *
 380:Generated_Source\PSoC4/PM_ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/PM_ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/PM_ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/PM_ADC.c **** *
 384:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 386:Generated_Source\PSoC4/PM_ADC.c **** *
 387:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 388:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 389:Generated_Source\PSoC4/PM_ADC.c **** *
 390:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_StartConvert(void)
 392:Generated_Source\PSoC4/PM_ADC.c **** {
 447              		.loc 1 392 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 16


 393:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_DEFAULT_SAMPLE_MODE_SEL == PM_ADC__FREERUNNING)
 394:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_SAR_SAMPLE_CTRL_REG |= PM_ADC_CONTINUOUS_EN;
 457              		.loc 1 394 0
 458 0004 044B     		ldr	r3, .L28
 459 0006 044A     		ldr	r2, .L28
 460 0008 1268     		ldr	r2, [r2]
 461 000a 8021     		movs	r1, #128
 462 000c 4902     		lsls	r1, r1, #9
 463 000e 0A43     		orrs	r2, r1
 464 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/PM_ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_SAR_START_CTRL_REG = PM_ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* End PM_ADC_DEFAULT_SAMPLE_MODE == PM_ADC__FREERUNNING */
 398:Generated_Source\PSoC4/PM_ADC.c **** 
 399:Generated_Source\PSoC4/PM_ADC.c **** }
 465              		.loc 1 399 0
 466 0012 C046     		nop
 467 0014 BD46     		mov	sp, r7
 468              		@ sp needed
 469 0016 80BD     		pop	{r7, pc}
 470              	.L29:
 471              		.align	2
 472              	.L28:
 473 0018 04003A40 		.word	1077542916
 474              		.cfi_endproc
 475              	.LFE6:
 476              		.size	PM_ADC_StartConvert, .-PM_ADC_StartConvert
 477              		.section	.text.PM_ADC_StopConvert,"ax",%progbits
 478              		.align	2
 479              		.global	PM_ADC_StopConvert
 480              		.code	16
 481              		.thumb_func
 482              		.type	PM_ADC_StopConvert, %function
 483              	PM_ADC_StopConvert:
 484              	.LFB7:
 400:Generated_Source\PSoC4/PM_ADC.c **** 
 401:Generated_Source\PSoC4/PM_ADC.c **** 
 402:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_StopConvert
 404:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/PM_ADC.c **** *
 406:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 407:Generated_Source\PSoC4/PM_ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/PM_ADC.c **** *
 409:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 411:Generated_Source\PSoC4/PM_ADC.c **** *
 412:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 413:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 414:Generated_Source\PSoC4/PM_ADC.c **** *
 415:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_StopConvert(void)
 417:Generated_Source\PSoC4/PM_ADC.c **** {
 485              		.loc 1 417 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 17


 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 00AF     		add	r7, sp, #0
 494              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_DEFAULT_SAMPLE_MODE_SEL == PM_ADC__FREERUNNING)
 419:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~PM_ADC_CONTINUOUS_EN);
 495              		.loc 1 419 0
 496 0004 044B     		ldr	r3, .L31
 497 0006 044A     		ldr	r2, .L31
 498 0008 1268     		ldr	r2, [r2]
 499 000a 0449     		ldr	r1, .L31+4
 500 000c 0A40     		ands	r2, r1
 501 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* PM_ADC_DEFAULT_SAMPLE_MODE == PM_ADC__FREERUNNING */
 421:Generated_Source\PSoC4/PM_ADC.c **** }
 502              		.loc 1 421 0
 503 0010 C046     		nop
 504 0012 BD46     		mov	sp, r7
 505              		@ sp needed
 506 0014 80BD     		pop	{r7, pc}
 507              	.L32:
 508 0016 C046     		.align	2
 509              	.L31:
 510 0018 04003A40 		.word	1077542916
 511 001c FFFFFEFF 		.word	-65537
 512              		.cfi_endproc
 513              	.LFE7:
 514              		.size	PM_ADC_StopConvert, .-PM_ADC_StopConvert
 515              		.section	.text.PM_ADC_IsEndConversion,"ax",%progbits
 516              		.align	2
 517              		.global	PM_ADC_IsEndConversion
 518              		.code	16
 519              		.thumb_func
 520              		.type	PM_ADC_IsEndConversion, %function
 521              	PM_ADC_IsEndConversion:
 522              	.LFB8:
 422:Generated_Source\PSoC4/PM_ADC.c **** 
 423:Generated_Source\PSoC4/PM_ADC.c **** 
 424:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_IsEndConversion
 426:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/PM_ADC.c **** *
 428:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 429:Generated_Source\PSoC4/PM_ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/PM_ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/PM_ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/PM_ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/PM_ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/PM_ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/PM_ADC.c **** *  completed.
 436:Generated_Source\PSoC4/PM_ADC.c **** *
 437:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/PM_ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/PM_ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/PM_ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 18


 441:Generated_Source\PSoC4/PM_ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/PM_ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/PM_ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/PM_ADC.c **** *
 445:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 446:Generated_Source\PSoC4/PM_ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/PM_ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/PM_ADC.c **** *
 449:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/PM_ADC.c **** uint32 PM_ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/PM_ADC.c **** {
 523              		.loc 1 451 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 84B0     		sub	sp, sp, #16
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/PM_ADC.c ****     uint32 status = 0u;
 536              		.loc 1 452 0
 537 0008 0023     		movs	r3, #0
 538 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/PM_ADC.c **** 
 454:Generated_Source\PSoC4/PM_ADC.c ****     if((retMode & (PM_ADC_RETURN_STATUS | PM_ADC_WAIT_FOR_RESULT)) != 0u)
 539              		.loc 1 454 0
 540 000c 7B68     		ldr	r3, [r7, #4]
 541 000e 0322     		movs	r2, #3
 542 0010 1340     		ands	r3, r2
 543 0012 11D0     		beq	.L34
 544              	.L36:
 455:Generated_Source\PSoC4/PM_ADC.c ****     {
 456:Generated_Source\PSoC4/PM_ADC.c ****         do
 457:Generated_Source\PSoC4/PM_ADC.c ****         {
 458:Generated_Source\PSoC4/PM_ADC.c ****             status = PM_ADC_SAR_INTR_REG & PM_ADC_EOS_MASK;
 545              		.loc 1 458 0 discriminator 2
 546 0014 0B4B     		ldr	r3, .L38
 547 0016 1B68     		ldr	r3, [r3]
 548 0018 0122     		movs	r2, #1
 549 001a 1340     		ands	r3, r2
 550 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/PM_ADC.c ****         }while((status == 0u) && ((retMode & PM_ADC_WAIT_FOR_RESULT) != 0u));
 551              		.loc 1 459 0 discriminator 2
 552 001e FB68     		ldr	r3, [r7, #12]
 553 0020 002B     		cmp	r3, #0
 554 0022 03D1     		bne	.L35
 555              		.loc 1 459 0 is_stmt 0 discriminator 1
 556 0024 7B68     		ldr	r3, [r7, #4]
 557 0026 0222     		movs	r2, #2
 558 0028 1340     		ands	r3, r2
 559 002a F3D1     		bne	.L36
 560              	.L35:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 19


 460:Generated_Source\PSoC4/PM_ADC.c **** 
 461:Generated_Source\PSoC4/PM_ADC.c ****         if(status != 0u)
 561              		.loc 1 461 0 is_stmt 1
 562 002c FB68     		ldr	r3, [r7, #12]
 563 002e 002B     		cmp	r3, #0
 564 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/PM_ADC.c ****         {
 463:Generated_Source\PSoC4/PM_ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/PM_ADC.c ****             PM_ADC_SAR_INTR_REG = PM_ADC_EOS_MASK;
 565              		.loc 1 464 0
 566 0032 044B     		ldr	r3, .L38
 567 0034 0122     		movs	r2, #1
 568 0036 1A60     		str	r2, [r3]
 569              	.L34:
 465:Generated_Source\PSoC4/PM_ADC.c ****         }
 466:Generated_Source\PSoC4/PM_ADC.c ****     }
 467:Generated_Source\PSoC4/PM_ADC.c **** 
 468:Generated_Source\PSoC4/PM_ADC.c ****     #if(PM_ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/PM_ADC.c ****         if((retMode & (PM_ADC_RETURN_STATUS_INJ | PM_ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/PM_ADC.c ****         {
 471:Generated_Source\PSoC4/PM_ADC.c ****             do
 472:Generated_Source\PSoC4/PM_ADC.c ****             {
 473:Generated_Source\PSoC4/PM_ADC.c ****                 status |= PM_ADC_SAR_INTR_REG & PM_ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/PM_ADC.c ****             }while(((status & PM_ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/PM_ADC.c ****                    ((retMode & PM_ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/PM_ADC.c **** 
 477:Generated_Source\PSoC4/PM_ADC.c ****             if((status & PM_ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/PM_ADC.c ****             {
 479:Generated_Source\PSoC4/PM_ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_SAR_INTR_REG = PM_ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/PM_ADC.c ****             }
 482:Generated_Source\PSoC4/PM_ADC.c ****         }
 483:Generated_Source\PSoC4/PM_ADC.c ****     #endif /* PM_ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/PM_ADC.c **** 
 485:Generated_Source\PSoC4/PM_ADC.c ****     return (status);
 570              		.loc 1 485 0
 571 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/PM_ADC.c **** }
 572              		.loc 1 486 0
 573 003a 1800     		movs	r0, r3
 574 003c BD46     		mov	sp, r7
 575 003e 04B0     		add	sp, sp, #16
 576              		@ sp needed
 577 0040 80BD     		pop	{r7, pc}
 578              	.L39:
 579 0042 C046     		.align	2
 580              	.L38:
 581 0044 10023A40 		.word	1077543440
 582              		.cfi_endproc
 583              	.LFE8:
 584              		.size	PM_ADC_IsEndConversion, .-PM_ADC_IsEndConversion
 585              		.section	.text.PM_ADC_GetResult16,"ax",%progbits
 586              		.align	2
 587              		.global	PM_ADC_GetResult16
 588              		.code	16
 589              		.thumb_func
 590              		.type	PM_ADC_GetResult16, %function
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 20


 591              	PM_ADC_GetResult16:
 592              	.LFB9:
 487:Generated_Source\PSoC4/PM_ADC.c **** 
 488:Generated_Source\PSoC4/PM_ADC.c **** 
 489:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_GetResult16
 491:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/PM_ADC.c **** *
 493:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 494:Generated_Source\PSoC4/PM_ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/PM_ADC.c **** *
 496:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/PM_ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/PM_ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/PM_ADC.c **** *
 500:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 501:Generated_Source\PSoC4/PM_ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/PM_ADC.c **** *
 503:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/PM_ADC.c **** int16 PM_ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/PM_ADC.c **** {
 593              		.loc 1 505 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 16
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 84B0     		sub	sp, sp, #16
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/PM_ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/PM_ADC.c **** 
 508:Generated_Source\PSoC4/PM_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/PM_ADC.c ****     CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
 606              		.loc 1 509 0
 607 0008 7B68     		ldr	r3, [r7, #4]
 608 000a 002B     		cmp	r3, #0
 609 000c 02D0     		beq	.L41
 610              		.loc 1 509 0 is_stmt 0 discriminator 1
 611 000e 0020     		movs	r0, #0
 612 0010 FFF7FEFF 		bl	CyHalt
 613              	.L41:
 510:Generated_Source\PSoC4/PM_ADC.c **** 
 511:Generated_Source\PSoC4/PM_ADC.c ****     if(chan < PM_ADC_SEQUENCED_CHANNELS_NUM)
 614              		.loc 1 511 0 is_stmt 1
 615 0014 7B68     		ldr	r3, [r7, #4]
 616 0016 002B     		cmp	r3, #0
 617 0018 09D1     		bne	.L42
 512:Generated_Source\PSoC4/PM_ADC.c ****     {
 513:Generated_Source\PSoC4/PM_ADC.c ****         result = CY_GET_REG32((reg32 *)(PM_ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 618              		.loc 1 513 0
 619 001a 7B68     		ldr	r3, [r7, #4]
 620 001c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 21


 621 001e 084A     		ldr	r2, .L45
 622 0020 9446     		mov	ip, r2
 623 0022 6344     		add	r3, r3, ip
 624 0024 1B68     		ldr	r3, [r3]
 625 0026 1B04     		lsls	r3, r3, #16
 626 0028 1B0C     		lsrs	r3, r3, #16
 627 002a FB60     		str	r3, [r7, #12]
 628 002c 01E0     		b	.L43
 629              	.L42:
 514:Generated_Source\PSoC4/PM_ADC.c ****                 PM_ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/PM_ADC.c ****     }
 516:Generated_Source\PSoC4/PM_ADC.c ****     else
 517:Generated_Source\PSoC4/PM_ADC.c ****     {
 518:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/PM_ADC.c ****             result = PM_ADC_SAR_INJ_RESULT_REG & PM_ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/PM_ADC.c ****         #else
 521:Generated_Source\PSoC4/PM_ADC.c ****             result = 0u;
 630              		.loc 1 521 0
 631 002e 0023     		movs	r3, #0
 632 0030 FB60     		str	r3, [r7, #12]
 633              	.L43:
 522:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/PM_ADC.c ****     }
 524:Generated_Source\PSoC4/PM_ADC.c **** 
 525:Generated_Source\PSoC4/PM_ADC.c ****     return ( (int16)result );
 634              		.loc 1 525 0
 635 0032 FB68     		ldr	r3, [r7, #12]
 636 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/PM_ADC.c **** }
 637              		.loc 1 526 0
 638 0036 1800     		movs	r0, r3
 639 0038 BD46     		mov	sp, r7
 640 003a 04B0     		add	sp, sp, #16
 641              		@ sp needed
 642 003c 80BD     		pop	{r7, pc}
 643              	.L46:
 644 003e C046     		.align	2
 645              	.L45:
 646 0040 80013A40 		.word	1077543296
 647              		.cfi_endproc
 648              	.LFE9:
 649              		.size	PM_ADC_GetResult16, .-PM_ADC_GetResult16
 650              		.section	.text.PM_ADC_SetChanMask,"ax",%progbits
 651              		.align	2
 652              		.global	PM_ADC_SetChanMask
 653              		.code	16
 654              		.thumb_func
 655              		.type	PM_ADC_SetChanMask, %function
 656              	PM_ADC_SetChanMask:
 657              	.LFB10:
 527:Generated_Source\PSoC4/PM_ADC.c **** 
 528:Generated_Source\PSoC4/PM_ADC.c **** 
 529:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetChanMask
 531:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/PM_ADC.c **** *
 533:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 22


 534:Generated_Source\PSoC4/PM_ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/PM_ADC.c **** *
 536:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/PM_ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/PM_ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/PM_ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/PM_ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/PM_ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/PM_ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/PM_ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/PM_ADC.c **** *
 545:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 546:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 547:Generated_Source\PSoC4/PM_ADC.c **** *
 548:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/PM_ADC.c **** {
 658              		.loc 1 550 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 82B0     		sub	sp, sp, #8
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 670 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_CHAN_EN_REG = mask & PM_ADC_MAX_CHANNELS_EN_MASK;
 671              		.loc 1 551 0
 672 0008 044B     		ldr	r3, .L48
 673 000a 7A68     		ldr	r2, [r7, #4]
 674 000c 0121     		movs	r1, #1
 675 000e 0A40     		ands	r2, r1
 676 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/PM_ADC.c **** }
 677              		.loc 1 552 0
 678 0012 C046     		nop
 679 0014 BD46     		mov	sp, r7
 680 0016 02B0     		add	sp, sp, #8
 681              		@ sp needed
 682 0018 80BD     		pop	{r7, pc}
 683              	.L49:
 684 001a C046     		.align	2
 685              	.L48:
 686 001c 20003A40 		.word	1077542944
 687              		.cfi_endproc
 688              	.LFE10:
 689              		.size	PM_ADC_SetChanMask, .-PM_ADC_SetChanMask
 690              		.section	.text.PM_ADC_SetLowLimit,"ax",%progbits
 691              		.align	2
 692              		.global	PM_ADC_SetLowLimit
 693              		.code	16
 694              		.thumb_func
 695              		.type	PM_ADC_SetLowLimit, %function
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 23


 696              	PM_ADC_SetLowLimit:
 697              	.LFB11:
 553:Generated_Source\PSoC4/PM_ADC.c **** 
 554:Generated_Source\PSoC4/PM_ADC.c **** #if(PM_ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/PM_ADC.c **** 
 556:Generated_Source\PSoC4/PM_ADC.c **** 
 557:Generated_Source\PSoC4/PM_ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/PM_ADC.c ****     * Function Name: PM_ADC_EnableInjection
 559:Generated_Source\PSoC4/PM_ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/PM_ADC.c ****     *
 561:Generated_Source\PSoC4/PM_ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/PM_ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/PM_ADC.c ****     *
 564:Generated_Source\PSoC4/PM_ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/PM_ADC.c ****     *  None.
 566:Generated_Source\PSoC4/PM_ADC.c ****     *
 567:Generated_Source\PSoC4/PM_ADC.c ****     * Return:
 568:Generated_Source\PSoC4/PM_ADC.c ****     *  None.
 569:Generated_Source\PSoC4/PM_ADC.c ****     *
 570:Generated_Source\PSoC4/PM_ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/PM_ADC.c ****     void PM_ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/PM_ADC.c ****     {
 573:Generated_Source\PSoC4/PM_ADC.c ****         PM_ADC_SAR_INJ_CHAN_CONFIG_REG |= PM_ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/PM_ADC.c ****     }
 575:Generated_Source\PSoC4/PM_ADC.c **** 
 576:Generated_Source\PSoC4/PM_ADC.c **** #endif /* PM_ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/PM_ADC.c **** 
 578:Generated_Source\PSoC4/PM_ADC.c **** 
 579:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetLowLimit
 581:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/PM_ADC.c **** *
 583:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 584:Generated_Source\PSoC4/PM_ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/PM_ADC.c **** *
 586:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/PM_ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/PM_ADC.c **** *
 589:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 590:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 591:Generated_Source\PSoC4/PM_ADC.c **** *
 592:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/PM_ADC.c **** {
 698              		.loc 1 594 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 80B5     		push	{r7, lr}
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 7, -8
 705              		.cfi_offset 14, -4
 706 0002 82B0     		sub	sp, sp, #8
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 24


 595:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_THRES_REG &= (uint32)(~PM_ADC_RANGE_LOW_MASK);
 711              		.loc 1 595 0
 712 0008 084B     		ldr	r3, .L51
 713 000a 084A     		ldr	r2, .L51
 714 000c 1268     		ldr	r2, [r2]
 715 000e 120C     		lsrs	r2, r2, #16
 716 0010 1204     		lsls	r2, r2, #16
 717 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_THRES_REG |= lowLimit & PM_ADC_RANGE_LOW_MASK;
 718              		.loc 1 596 0
 719 0014 054B     		ldr	r3, .L51
 720 0016 054A     		ldr	r2, .L51
 721 0018 1168     		ldr	r1, [r2]
 722 001a 7A68     		ldr	r2, [r7, #4]
 723 001c 1204     		lsls	r2, r2, #16
 724 001e 120C     		lsrs	r2, r2, #16
 725 0020 0A43     		orrs	r2, r1
 726 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/PM_ADC.c **** }
 727              		.loc 1 597 0
 728 0024 C046     		nop
 729 0026 BD46     		mov	sp, r7
 730 0028 02B0     		add	sp, sp, #8
 731              		@ sp needed
 732 002a 80BD     		pop	{r7, pc}
 733              	.L52:
 734              		.align	2
 735              	.L51:
 736 002c 18003A40 		.word	1077542936
 737              		.cfi_endproc
 738              	.LFE11:
 739              		.size	PM_ADC_SetLowLimit, .-PM_ADC_SetLowLimit
 740              		.section	.text.PM_ADC_SetHighLimit,"ax",%progbits
 741              		.align	2
 742              		.global	PM_ADC_SetHighLimit
 743              		.code	16
 744              		.thumb_func
 745              		.type	PM_ADC_SetHighLimit, %function
 746              	PM_ADC_SetHighLimit:
 747              	.LFB12:
 598:Generated_Source\PSoC4/PM_ADC.c **** 
 599:Generated_Source\PSoC4/PM_ADC.c **** 
 600:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetHighLimit
 602:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/PM_ADC.c **** *
 604:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 605:Generated_Source\PSoC4/PM_ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/PM_ADC.c **** *
 607:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/PM_ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/PM_ADC.c **** *
 610:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 611:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 612:Generated_Source\PSoC4/PM_ADC.c **** *
 613:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetHighLimit(uint32 highLimit)
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 25


 615:Generated_Source\PSoC4/PM_ADC.c **** {
 748              		.loc 1 615 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 8
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 82B0     		sub	sp, sp, #8
 757              		.cfi_def_cfa_offset 16
 758 0004 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_THRES_REG &= (uint32)(~PM_ADC_RANGE_HIGH_MASK);
 761              		.loc 1 616 0
 762 0008 084B     		ldr	r3, .L54
 763 000a 084A     		ldr	r2, .L54
 764 000c 1268     		ldr	r2, [r2]
 765 000e 1204     		lsls	r2, r2, #16
 766 0010 120C     		lsrs	r2, r2, #16
 767 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << PM_ADC_RANGE_HIGH_OFFSET);
 768              		.loc 1 617 0
 769 0014 054B     		ldr	r3, .L54
 770 0016 054A     		ldr	r2, .L54
 771 0018 1168     		ldr	r1, [r2]
 772 001a 7A68     		ldr	r2, [r7, #4]
 773 001c 1204     		lsls	r2, r2, #16
 774 001e 0A43     		orrs	r2, r1
 775 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PM_ADC.c **** }
 776              		.loc 1 618 0
 777 0022 C046     		nop
 778 0024 BD46     		mov	sp, r7
 779 0026 02B0     		add	sp, sp, #8
 780              		@ sp needed
 781 0028 80BD     		pop	{r7, pc}
 782              	.L55:
 783 002a C046     		.align	2
 784              	.L54:
 785 002c 18003A40 		.word	1077542936
 786              		.cfi_endproc
 787              	.LFE12:
 788              		.size	PM_ADC_SetHighLimit, .-PM_ADC_SetHighLimit
 789              		.section	.text.PM_ADC_SetLimitMask,"ax",%progbits
 790              		.align	2
 791              		.global	PM_ADC_SetLimitMask
 792              		.code	16
 793              		.thumb_func
 794              		.type	PM_ADC_SetLimitMask, %function
 795              	PM_ADC_SetLimitMask:
 796              	.LFB13:
 619:Generated_Source\PSoC4/PM_ADC.c **** 
 620:Generated_Source\PSoC4/PM_ADC.c **** 
 621:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetLimitMask
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 26


 623:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PM_ADC.c **** *
 625:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 626:Generated_Source\PSoC4/PM_ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/PM_ADC.c **** *
 628:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/PM_ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/PM_ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/PM_ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/PM_ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/PM_ADC.c **** *
 634:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 635:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 636:Generated_Source\PSoC4/PM_ADC.c **** *
 637:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/PM_ADC.c **** {
 797              		.loc 1 639 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 8
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 80B5     		push	{r7, lr}
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 7, -8
 804              		.cfi_offset 14, -4
 805 0002 82B0     		sub	sp, sp, #8
 806              		.cfi_def_cfa_offset 16
 807 0004 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_RANGE_INTR_MASK_REG = mask & PM_ADC_MAX_CHANNELS_EN_MASK;
 810              		.loc 1 640 0
 811 0008 044B     		ldr	r3, .L57
 812 000a 7A68     		ldr	r2, [r7, #4]
 813 000c 0121     		movs	r1, #1
 814 000e 0A40     		ands	r2, r1
 815 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/PM_ADC.c **** }
 816              		.loc 1 641 0
 817 0012 C046     		nop
 818 0014 BD46     		mov	sp, r7
 819 0016 02B0     		add	sp, sp, #8
 820              		@ sp needed
 821 0018 80BD     		pop	{r7, pc}
 822              	.L58:
 823 001a C046     		.align	2
 824              	.L57:
 825 001c 38023A40 		.word	1077543480
 826              		.cfi_endproc
 827              	.LFE13:
 828              		.size	PM_ADC_SetLimitMask, .-PM_ADC_SetLimitMask
 829              		.section	.text.PM_ADC_SetSatMask,"ax",%progbits
 830              		.align	2
 831              		.global	PM_ADC_SetSatMask
 832              		.code	16
 833              		.thumb_func
 834              		.type	PM_ADC_SetSatMask, %function
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 27


 835              	PM_ADC_SetSatMask:
 836              	.LFB14:
 642:Generated_Source\PSoC4/PM_ADC.c **** 
 643:Generated_Source\PSoC4/PM_ADC.c **** 
 644:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetSatMask
 646:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/PM_ADC.c **** *
 648:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 649:Generated_Source\PSoC4/PM_ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/PM_ADC.c **** *
 651:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/PM_ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/PM_ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/PM_ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/PM_ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/PM_ADC.c **** *
 657:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 658:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 659:Generated_Source\PSoC4/PM_ADC.c **** *
 660:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/PM_ADC.c **** {
 837              		.loc 1 662 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 8
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 82B0     		sub	sp, sp, #8
 846              		.cfi_def_cfa_offset 16
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_SAR_SATURATE_INTR_MASK_REG = mask & PM_ADC_MAX_CHANNELS_EN_MASK;
 850              		.loc 1 663 0
 851 0008 044B     		ldr	r3, .L60
 852 000a 7A68     		ldr	r2, [r7, #4]
 853 000c 0121     		movs	r1, #1
 854 000e 0A40     		ands	r2, r1
 855 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/PM_ADC.c **** }
 856              		.loc 1 664 0
 857 0012 C046     		nop
 858 0014 BD46     		mov	sp, r7
 859 0016 02B0     		add	sp, sp, #8
 860              		@ sp needed
 861 0018 80BD     		pop	{r7, pc}
 862              	.L61:
 863 001a C046     		.align	2
 864              	.L60:
 865 001c 28023A40 		.word	1077543464
 866              		.cfi_endproc
 867              	.LFE14:
 868              		.size	PM_ADC_SetSatMask, .-PM_ADC_SetSatMask
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 28


 869              		.section	.text.PM_ADC_SetOffset,"ax",%progbits
 870              		.align	2
 871              		.global	PM_ADC_SetOffset
 872              		.code	16
 873              		.thumb_func
 874              		.type	PM_ADC_SetOffset, %function
 875              	PM_ADC_SetOffset:
 876              	.LFB15:
 665:Generated_Source\PSoC4/PM_ADC.c **** 
 666:Generated_Source\PSoC4/PM_ADC.c **** 
 667:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetOffset
 669:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/PM_ADC.c **** *
 671:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 672:Generated_Source\PSoC4/PM_ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/PM_ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/PM_ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/PM_ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/PM_ADC.c **** *
 677:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/PM_ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/PM_ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/PM_ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/PM_ADC.c **** *
 682:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 683:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 684:Generated_Source\PSoC4/PM_ADC.c **** *
 685:Generated_Source\PSoC4/PM_ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/PM_ADC.c **** *
 688:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/PM_ADC.c **** {
 877              		.loc 1 690 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 7860     		str	r0, [r7, #4]
 890 0008 0A00     		movs	r2, r1
 891 000a BB1C     		adds	r3, r7, #2
 892 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/PM_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/PM_ADC.c ****     CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
 893              		.loc 1 692 0
 894 000e 7B68     		ldr	r3, [r7, #4]
 895 0010 002B     		cmp	r3, #0
 896 0012 02D0     		beq	.L63
 897              		.loc 1 692 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 29


 898 0014 0020     		movs	r0, #0
 899 0016 FFF7FEFF 		bl	CyHalt
 900              	.L63:
 693:Generated_Source\PSoC4/PM_ADC.c **** 
 694:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_offset[chan] = offset;
 901              		.loc 1 694 0 is_stmt 1
 902 001a 054B     		ldr	r3, .L64
 903 001c 7A68     		ldr	r2, [r7, #4]
 904 001e 5200     		lsls	r2, r2, #1
 905 0020 B91C     		adds	r1, r7, #2
 906 0022 0988     		ldrh	r1, [r1]
 907 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/PM_ADC.c **** }
 908              		.loc 1 695 0
 909 0026 C046     		nop
 910 0028 BD46     		mov	sp, r7
 911 002a 02B0     		add	sp, sp, #8
 912              		@ sp needed
 913 002c 80BD     		pop	{r7, pc}
 914              	.L65:
 915 002e C046     		.align	2
 916              	.L64:
 917 0030 00000000 		.word	PM_ADC_offset
 918              		.cfi_endproc
 919              	.LFE15:
 920              		.size	PM_ADC_SetOffset, .-PM_ADC_SetOffset
 921              		.section	.text.PM_ADC_SetGain,"ax",%progbits
 922              		.align	2
 923              		.global	PM_ADC_SetGain
 924              		.code	16
 925              		.thumb_func
 926              		.type	PM_ADC_SetGain, %function
 927              	PM_ADC_SetGain:
 928              	.LFB16:
 696:Generated_Source\PSoC4/PM_ADC.c **** 
 697:Generated_Source\PSoC4/PM_ADC.c **** 
 698:Generated_Source\PSoC4/PM_ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/PM_ADC.c **** * Function Name: PM_ADC_SetGain
 700:Generated_Source\PSoC4/PM_ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/PM_ADC.c **** *
 702:Generated_Source\PSoC4/PM_ADC.c **** * Summary:
 703:Generated_Source\PSoC4/PM_ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/PM_ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/PM_ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/PM_ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/PM_ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/PM_ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/PM_ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/PM_ADC.c **** *
 711:Generated_Source\PSoC4/PM_ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/PM_ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/PM_ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/PM_ADC.c **** *
 715:Generated_Source\PSoC4/PM_ADC.c **** * Return:
 716:Generated_Source\PSoC4/PM_ADC.c **** *  None.
 717:Generated_Source\PSoC4/PM_ADC.c **** *
 718:Generated_Source\PSoC4/PM_ADC.c **** * Global variables:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 30


 719:Generated_Source\PSoC4/PM_ADC.c **** *  PM_ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/PM_ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/PM_ADC.c **** *
 722:Generated_Source\PSoC4/PM_ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/PM_ADC.c **** void PM_ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/PM_ADC.c **** {
 929              		.loc 1 724 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933 0000 80B5     		push	{r7, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 942 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/PM_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/PM_ADC.c ****     CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
 943              		.loc 1 726 0
 944 000a 7B68     		ldr	r3, [r7, #4]
 945 000c 002B     		cmp	r3, #0
 946 000e 02D0     		beq	.L67
 947              		.loc 1 726 0 is_stmt 0 discriminator 1
 948 0010 0020     		movs	r0, #0
 949 0012 FFF7FEFF 		bl	CyHalt
 950              	.L67:
 727:Generated_Source\PSoC4/PM_ADC.c **** 
 728:Generated_Source\PSoC4/PM_ADC.c ****     PM_ADC_countsPer10Volt[chan] = adcGain;
 951              		.loc 1 728 0 is_stmt 1
 952 0016 044B     		ldr	r3, .L68
 953 0018 7A68     		ldr	r2, [r7, #4]
 954 001a 9200     		lsls	r2, r2, #2
 955 001c 3968     		ldr	r1, [r7]
 956 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/PM_ADC.c **** }
 957              		.loc 1 729 0
 958 0020 C046     		nop
 959 0022 BD46     		mov	sp, r7
 960 0024 02B0     		add	sp, sp, #8
 961              		@ sp needed
 962 0026 80BD     		pop	{r7, pc}
 963              	.L69:
 964              		.align	2
 965              	.L68:
 966 0028 00000000 		.word	PM_ADC_countsPer10Volt
 967              		.cfi_endproc
 968              	.LFE16:
 969              		.size	PM_ADC_SetGain, .-PM_ADC_SetGain
 970              		.section	.text.PM_ADC_CountsTo_mVolts,"ax",%progbits
 971              		.align	2
 972              		.global	PM_ADC_CountsTo_mVolts
 973              		.code	16
 974              		.thumb_func
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 31


 975              		.type	PM_ADC_CountsTo_mVolts, %function
 976              	PM_ADC_CountsTo_mVolts:
 977              	.LFB17:
 730:Generated_Source\PSoC4/PM_ADC.c **** 
 731:Generated_Source\PSoC4/PM_ADC.c **** 
 732:Generated_Source\PSoC4/PM_ADC.c **** #if(PM_ADC_DEFAULT_JUSTIFICATION_SEL == PM_ADC__RIGHT)
 733:Generated_Source\PSoC4/PM_ADC.c **** 
 734:Generated_Source\PSoC4/PM_ADC.c **** 
 735:Generated_Source\PSoC4/PM_ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/PM_ADC.c ****     * Function Name: PM_ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/PM_ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/PM_ADC.c ****     *
 739:Generated_Source\PSoC4/PM_ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/PM_ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/PM_ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/PM_ADC.c ****     *
 743:Generated_Source\PSoC4/PM_ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/PM_ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/PM_ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/PM_ADC.c ****     *
 747:Generated_Source\PSoC4/PM_ADC.c ****     * Return:
 748:Generated_Source\PSoC4/PM_ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/PM_ADC.c ****     *
 750:Generated_Source\PSoC4/PM_ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/PM_ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/PM_ADC.c ****     *
 755:Generated_Source\PSoC4/PM_ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/PM_ADC.c ****     int16 PM_ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/PM_ADC.c ****     {
 978              		.loc 1 757 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 16
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 84B0     		sub	sp, sp, #16
 987              		.cfi_def_cfa_offset 24
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
 991 0008 0A00     		movs	r2, r1
 992 000a BB1C     		adds	r3, r7, #2
 993 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/PM_ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/PM_ADC.c **** 
 760:Generated_Source\PSoC4/PM_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/PM_ADC.c ****         CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
 994              		.loc 1 761 0
 995 000e 7B68     		ldr	r3, [r7, #4]
 996 0010 002B     		cmp	r3, #0
 997 0012 02D0     		beq	.L71
 998              		.loc 1 761 0 is_stmt 0 discriminator 1
 999 0014 0020     		movs	r0, #0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 32


 1000 0016 FFF7FEFF 		bl	CyHalt
 1001              	.L71:
 762:Generated_Source\PSoC4/PM_ADC.c **** 
 763:Generated_Source\PSoC4/PM_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/PM_ADC.c ****             if((PM_ADC_channelsConfig[chan] & PM_ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/PM_ADC.c ****             {
 767:Generated_Source\PSoC4/PM_ADC.c ****                 adcCounts /= PM_ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/PM_ADC.c ****             }
 769:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/PM_ADC.c **** 
 771:Generated_Source\PSoC4/PM_ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/PM_ADC.c ****         adcCounts -= PM_ADC_offset[chan];
 1002              		.loc 1 772 0 is_stmt 1
 1003 001a 1E4B     		ldr	r3, .L77
 1004 001c 7A68     		ldr	r2, [r7, #4]
 1005 001e 5200     		lsls	r2, r2, #1
 1006 0020 D35A     		ldrh	r3, [r2, r3]
 1007 0022 19B2     		sxth	r1, r3
 1008 0024 BB1C     		adds	r3, r7, #2
 1009 0026 1A88     		ldrh	r2, [r3]
 1010 0028 8BB2     		uxth	r3, r1
 1011 002a D31A     		subs	r3, r2, r3
 1012 002c 9AB2     		uxth	r2, r3
 1013 002e BB1C     		adds	r3, r7, #2
 1014 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/PM_ADC.c **** 
 774:Generated_Source\PSoC4/PM_ADC.c ****         mVolts = (int16)((((int32)adcCounts * PM_ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1015              		.loc 1 774 0
 1016 0032 BB1C     		adds	r3, r7, #2
 1017 0034 0022     		movs	r2, #0
 1018 0036 9B5E     		ldrsh	r3, [r3, r2]
 1019 0038 174A     		ldr	r2, .L77+4
 1020 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/PM_ADC.c ****                  (PM_ADC_countsPer10Volt[chan] / 2) : (-(PM_ADC_countsPer10Volt[chan] / 2)) ))
 1021              		.loc 1 775 0
 1022 003c BB1C     		adds	r3, r7, #2
 1023 003e 0021     		movs	r1, #0
 1024 0040 5B5E     		ldrsh	r3, [r3, r1]
 1025 0042 002B     		cmp	r3, #0
 1026 0044 08DD     		ble	.L72
 1027              		.loc 1 775 0 is_stmt 0 discriminator 1
 1028 0046 154B     		ldr	r3, .L77+8
 1029 0048 7968     		ldr	r1, [r7, #4]
 1030 004a 8900     		lsls	r1, r1, #2
 1031 004c CB58     		ldr	r3, [r1, r3]
 1032 004e 002B     		cmp	r3, #0
 1033 0050 00DA     		bge	.L73
 1034 0052 0133     		adds	r3, r3, #1
 1035              	.L73:
 1036 0054 5B10     		asrs	r3, r3, #1
 1037 0056 08E0     		b	.L74
 1038              	.L72:
 1039              		.loc 1 775 0 discriminator 2
 1040 0058 104B     		ldr	r3, .L77+8
 1041 005a 7968     		ldr	r1, [r7, #4]
 1042 005c 8900     		lsls	r1, r1, #2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 33


 1043 005e CB58     		ldr	r3, [r1, r3]
 1044 0060 002B     		cmp	r3, #0
 1045 0062 00DA     		bge	.L75
 1046 0064 0133     		adds	r3, r3, #1
 1047              	.L75:
 1048 0066 5B10     		asrs	r3, r3, #1
 1049 0068 5B42     		rsbs	r3, r3, #0
 1050              	.L74:
 774:Generated_Source\PSoC4/PM_ADC.c ****                  (PM_ADC_countsPer10Volt[chan] / 2) : (-(PM_ADC_countsPer10Volt[chan] / 2)) ))
 1051              		.loc 1 774 0 is_stmt 1
 1052 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/PM_ADC.c ****                  / PM_ADC_countsPer10Volt[chan]);
 1053              		.loc 1 776 0
 1054 006c 0B4B     		ldr	r3, .L77+8
 1055 006e 7A68     		ldr	r2, [r7, #4]
 1056 0070 9200     		lsls	r2, r2, #2
 1057 0072 D358     		ldr	r3, [r2, r3]
 1058 0074 1900     		movs	r1, r3
 1059 0076 FFF7FEFF 		bl	__aeabi_idiv
 1060 007a 0300     		movs	r3, r0
 1061 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/PM_ADC.c ****                  (PM_ADC_countsPer10Volt[chan] / 2) : (-(PM_ADC_countsPer10Volt[chan] / 2)) ))
 1062              		.loc 1 774 0
 1063 007e 0E23     		movs	r3, #14
 1064 0080 FB18     		adds	r3, r7, r3
 1065 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/PM_ADC.c **** 
 778:Generated_Source\PSoC4/PM_ADC.c ****         return( mVolts );
 1066              		.loc 1 778 0
 1067 0084 0E23     		movs	r3, #14
 1068 0086 FB18     		adds	r3, r7, r3
 1069 0088 0022     		movs	r2, #0
 1070 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/PM_ADC.c ****     }
 1071              		.loc 1 779 0
 1072 008c 1800     		movs	r0, r3
 1073 008e BD46     		mov	sp, r7
 1074 0090 04B0     		add	sp, sp, #16
 1075              		@ sp needed
 1076 0092 80BD     		pop	{r7, pc}
 1077              	.L78:
 1078              		.align	2
 1079              	.L77:
 1080 0094 00000000 		.word	PM_ADC_offset
 1081 0098 10270000 		.word	10000
 1082 009c 00000000 		.word	PM_ADC_countsPer10Volt
 1083              		.cfi_endproc
 1084              	.LFE17:
 1085              		.size	PM_ADC_CountsTo_mVolts, .-PM_ADC_CountsTo_mVolts
 1086              		.global	__aeabi_lmul
 1087              		.global	__aeabi_ldivmod
 1088              		.section	.text.PM_ADC_CountsTo_uVolts,"ax",%progbits
 1089              		.align	2
 1090              		.global	PM_ADC_CountsTo_uVolts
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	PM_ADC_CountsTo_uVolts, %function
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 34


 1094              	PM_ADC_CountsTo_uVolts:
 1095              	.LFB18:
 780:Generated_Source\PSoC4/PM_ADC.c **** 
 781:Generated_Source\PSoC4/PM_ADC.c **** 
 782:Generated_Source\PSoC4/PM_ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/PM_ADC.c ****     * Function Name: PM_ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/PM_ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/PM_ADC.c ****     *
 786:Generated_Source\PSoC4/PM_ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/PM_ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/PM_ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/PM_ADC.c ****     *
 790:Generated_Source\PSoC4/PM_ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/PM_ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/PM_ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/PM_ADC.c ****     *
 794:Generated_Source\PSoC4/PM_ADC.c ****     * Return:
 795:Generated_Source\PSoC4/PM_ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/PM_ADC.c ****     *
 797:Generated_Source\PSoC4/PM_ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/PM_ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/PM_ADC.c ****     *
 802:Generated_Source\PSoC4/PM_ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/PM_ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/PM_ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/PM_ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/PM_ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/PM_ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/PM_ADC.c ****     *
 809:Generated_Source\PSoC4/PM_ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/PM_ADC.c ****     int32 PM_ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/PM_ADC.c ****     {
 1096              		.loc 1 811 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 24
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0000 B0B5     		push	{r4, r5, r7, lr}
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 4, -16
 1103              		.cfi_offset 5, -12
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 1106 0002 86B0     		sub	sp, sp, #24
 1107              		.cfi_def_cfa_offset 40
 1108 0004 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 1110 0006 F860     		str	r0, [r7, #12]
 1111 0008 0A00     		movs	r2, r1
 1112 000a 0A23     		movs	r3, #10
 1113 000c FB18     		adds	r3, r7, r3
 1114 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/PM_ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/PM_ADC.c **** 
 814:Generated_Source\PSoC4/PM_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/PM_ADC.c ****         CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 35


 1115              		.loc 1 815 0
 1116 0010 FB68     		ldr	r3, [r7, #12]
 1117 0012 002B     		cmp	r3, #0
 1118 0014 02D0     		beq	.L80
 1119              		.loc 1 815 0 is_stmt 0 discriminator 1
 1120 0016 0020     		movs	r0, #0
 1121 0018 FFF7FEFF 		bl	CyHalt
 1122              	.L80:
 816:Generated_Source\PSoC4/PM_ADC.c **** 
 817:Generated_Source\PSoC4/PM_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/PM_ADC.c ****             if((PM_ADC_channelsConfig[chan] & PM_ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/PM_ADC.c ****             {
 821:Generated_Source\PSoC4/PM_ADC.c ****                 adcCounts /= PM_ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/PM_ADC.c ****             }
 823:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/PM_ADC.c **** 
 825:Generated_Source\PSoC4/PM_ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/PM_ADC.c ****         adcCounts -= PM_ADC_offset[chan];
 1123              		.loc 1 826 0 is_stmt 1
 1124 001c 194B     		ldr	r3, .L82
 1125 001e FA68     		ldr	r2, [r7, #12]
 1126 0020 5200     		lsls	r2, r2, #1
 1127 0022 D35A     		ldrh	r3, [r2, r3]
 1128 0024 19B2     		sxth	r1, r3
 1129 0026 0A23     		movs	r3, #10
 1130 0028 FB18     		adds	r3, r7, r3
 1131 002a 1A88     		ldrh	r2, [r3]
 1132 002c 8BB2     		uxth	r3, r1
 1133 002e D31A     		subs	r3, r2, r3
 1134 0030 9AB2     		uxth	r2, r3
 1135 0032 0A23     		movs	r3, #10
 1136 0034 FB18     		adds	r3, r7, r3
 1137 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/PM_ADC.c **** 
 828:Generated_Source\PSoC4/PM_ADC.c ****         uVolts = ((int64)adcCounts * PM_ADC_10UV_COUNTS) / PM_ADC_countsPer10Volt[chan];
 1138              		.loc 1 828 0
 1139 0038 0A23     		movs	r3, #10
 1140 003a FB18     		adds	r3, r7, r3
 1141 003c 1B88     		ldrh	r3, [r3]
 1142 003e 1BB2     		sxth	r3, r3
 1143 0040 3B60     		str	r3, [r7]
 1144 0042 DB17     		asrs	r3, r3, #31
 1145 0044 7B60     		str	r3, [r7, #4]
 1146 0046 104A     		ldr	r2, .L82+4
 1147 0048 0023     		movs	r3, #0
 1148 004a 3868     		ldr	r0, [r7]
 1149 004c 7968     		ldr	r1, [r7, #4]
 1150 004e FFF7FEFF 		bl	__aeabi_lmul
 1151 0052 0200     		movs	r2, r0
 1152 0054 0B00     		movs	r3, r1
 1153 0056 1000     		movs	r0, r2
 1154 0058 1900     		movs	r1, r3
 1155 005a 0C4B     		ldr	r3, .L82+8
 1156 005c FA68     		ldr	r2, [r7, #12]
 1157 005e 9200     		lsls	r2, r2, #2
 1158 0060 D358     		ldr	r3, [r2, r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 36


 1159 0062 1C00     		movs	r4, r3
 1160 0064 DB17     		asrs	r3, r3, #31
 1161 0066 1D00     		movs	r5, r3
 1162 0068 2200     		movs	r2, r4
 1163 006a 2B00     		movs	r3, r5
 1164 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1165 0070 0300     		movs	r3, r0
 1166 0072 0C00     		movs	r4, r1
 1167 0074 3B61     		str	r3, [r7, #16]
 1168 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/PM_ADC.c **** 
 830:Generated_Source\PSoC4/PM_ADC.c ****         return( (int32)uVolts );
 1169              		.loc 1 830 0
 1170 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/PM_ADC.c ****     }
 1171              		.loc 1 831 0
 1172 007a 1800     		movs	r0, r3
 1173 007c BD46     		mov	sp, r7
 1174 007e 06B0     		add	sp, sp, #24
 1175              		@ sp needed
 1176 0080 B0BD     		pop	{r4, r5, r7, pc}
 1177              	.L83:
 1178 0082 C046     		.align	2
 1179              	.L82:
 1180 0084 00000000 		.word	PM_ADC_offset
 1181 0088 80969800 		.word	10000000
 1182 008c 00000000 		.word	PM_ADC_countsPer10Volt
 1183              		.cfi_endproc
 1184              	.LFE18:
 1185              		.size	PM_ADC_CountsTo_uVolts, .-PM_ADC_CountsTo_uVolts
 1186              		.global	__aeabi_i2f
 1187              		.global	__aeabi_fmul
 1188              		.global	__aeabi_fdiv
 1189              		.section	.text.PM_ADC_CountsTo_Volts,"ax",%progbits
 1190              		.align	2
 1191              		.global	PM_ADC_CountsTo_Volts
 1192              		.code	16
 1193              		.thumb_func
 1194              		.type	PM_ADC_CountsTo_Volts, %function
 1195              	PM_ADC_CountsTo_Volts:
 1196              	.LFB19:
 832:Generated_Source\PSoC4/PM_ADC.c **** 
 833:Generated_Source\PSoC4/PM_ADC.c **** 
 834:Generated_Source\PSoC4/PM_ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/PM_ADC.c ****     * Function Name: PM_ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/PM_ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/PM_ADC.c ****     *
 838:Generated_Source\PSoC4/PM_ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/PM_ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/PM_ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/PM_ADC.c ****     *
 842:Generated_Source\PSoC4/PM_ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/PM_ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/PM_ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/PM_ADC.c ****     *
 846:Generated_Source\PSoC4/PM_ADC.c ****     * Return:
 847:Generated_Source\PSoC4/PM_ADC.c ****     *  Results in Volts
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 37


 848:Generated_Source\PSoC4/PM_ADC.c ****     *
 849:Generated_Source\PSoC4/PM_ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/PM_ADC.c ****     *  PM_ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/PM_ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/PM_ADC.c ****     *
 854:Generated_Source\PSoC4/PM_ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/PM_ADC.c ****     float32 PM_ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/PM_ADC.c ****     {
 1197              		.loc 1 856 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 16
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 90B5     		push	{r4, r7, lr}
 1202              		.cfi_def_cfa_offset 12
 1203              		.cfi_offset 4, -12
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 85B0     		sub	sp, sp, #20
 1207              		.cfi_def_cfa_offset 32
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 1211 0008 0A00     		movs	r2, r1
 1212 000a BB1C     		adds	r3, r7, #2
 1213 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/PM_ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/PM_ADC.c **** 
 859:Generated_Source\PSoC4/PM_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/PM_ADC.c ****         CYASSERT(chan < PM_ADC_TOTAL_CHANNELS_NUM);
 1214              		.loc 1 860 0
 1215 000e 7B68     		ldr	r3, [r7, #4]
 1216 0010 002B     		cmp	r3, #0
 1217 0012 02D0     		beq	.L85
 1218              		.loc 1 860 0 is_stmt 0 discriminator 1
 1219 0014 0020     		movs	r0, #0
 1220 0016 FFF7FEFF 		bl	CyHalt
 1221              	.L85:
 861:Generated_Source\PSoC4/PM_ADC.c **** 
 862:Generated_Source\PSoC4/PM_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/PM_ADC.c ****         #if(PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/PM_ADC.c ****             if((PM_ADC_channelsConfig[chan] & PM_ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/PM_ADC.c ****             {
 866:Generated_Source\PSoC4/PM_ADC.c ****                 adcCounts /= PM_ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/PM_ADC.c ****             }
 868:Generated_Source\PSoC4/PM_ADC.c ****         #endif /* PM_ADC_DEFAULT_AVG_MODE == PM_ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/PM_ADC.c **** 
 870:Generated_Source\PSoC4/PM_ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/PM_ADC.c ****         adcCounts -= PM_ADC_offset[chan];
 1222              		.loc 1 871 0 is_stmt 1
 1223 001a 164B     		ldr	r3, .L87
 1224 001c 7A68     		ldr	r2, [r7, #4]
 1225 001e 5200     		lsls	r2, r2, #1
 1226 0020 D35A     		ldrh	r3, [r2, r3]
 1227 0022 19B2     		sxth	r1, r3
 1228 0024 BB1C     		adds	r3, r7, #2
 1229 0026 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 38


 1230 0028 8BB2     		uxth	r3, r1
 1231 002a D31A     		subs	r3, r2, r3
 1232 002c 9AB2     		uxth	r2, r3
 1233 002e BB1C     		adds	r3, r7, #2
 1234 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/PM_ADC.c **** 
 873:Generated_Source\PSoC4/PM_ADC.c ****         volts = ((float32)adcCounts * PM_ADC_10V_COUNTS) / (float32)PM_ADC_countsPer10Volt[chan];
 1235              		.loc 1 873 0
 1236 0032 BB1C     		adds	r3, r7, #2
 1237 0034 0022     		movs	r2, #0
 1238 0036 9B5E     		ldrsh	r3, [r3, r2]
 1239 0038 1800     		movs	r0, r3
 1240 003a FFF7FEFF 		bl	__aeabi_i2f
 1241 003e 031C     		adds	r3, r0, #0
 1242 0040 0D49     		ldr	r1, .L87+4
 1243 0042 181C     		adds	r0, r3, #0
 1244 0044 FFF7FEFF 		bl	__aeabi_fmul
 1245 0048 031C     		adds	r3, r0, #0
 1246 004a 1C1C     		adds	r4, r3, #0
 1247 004c 0B4B     		ldr	r3, .L87+8
 1248 004e 7A68     		ldr	r2, [r7, #4]
 1249 0050 9200     		lsls	r2, r2, #2
 1250 0052 D358     		ldr	r3, [r2, r3]
 1251 0054 1800     		movs	r0, r3
 1252 0056 FFF7FEFF 		bl	__aeabi_i2f
 1253 005a 031C     		adds	r3, r0, #0
 1254 005c 191C     		adds	r1, r3, #0
 1255 005e 201C     		adds	r0, r4, #0
 1256 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1257 0064 031C     		adds	r3, r0, #0
 1258 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/PM_ADC.c **** 
 875:Generated_Source\PSoC4/PM_ADC.c ****         return( volts );
 1259              		.loc 1 875 0
 1260 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/PM_ADC.c ****     }
 1261              		.loc 1 876 0
 1262 006a 181C     		adds	r0, r3, #0
 1263 006c BD46     		mov	sp, r7
 1264 006e 05B0     		add	sp, sp, #20
 1265              		@ sp needed
 1266 0070 90BD     		pop	{r4, r7, pc}
 1267              	.L88:
 1268 0072 C046     		.align	2
 1269              	.L87:
 1270 0074 00000000 		.word	PM_ADC_offset
 1271 0078 00002041 		.word	1092616192
 1272 007c 00000000 		.word	PM_ADC_countsPer10Volt
 1273              		.cfi_endproc
 1274              	.LFE19:
 1275              		.size	PM_ADC_CountsTo_Volts, .-PM_ADC_CountsTo_Volts
 1276              		.text
 1277              	.Letext0:
 1278              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1279              		.section	.debug_info,"",%progbits
 1280              	.Ldebug_info0:
 1281 0000 8D040000 		.4byte	0x48d
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 39


 1282 0004 0400     		.2byte	0x4
 1283 0006 00000000 		.4byte	.Ldebug_abbrev0
 1284 000a 04       		.byte	0x4
 1285 000b 01       		.uleb128 0x1
 1286 000c 77010000 		.4byte	.LASF60
 1287 0010 0C       		.byte	0xc
 1288 0011 4F020000 		.4byte	.LASF61
 1289 0015 16030000 		.4byte	.LASF62
 1290 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1291 001d 00000000 		.4byte	0
 1292 0021 00000000 		.4byte	.Ldebug_line0
 1293 0025 02       		.uleb128 0x2
 1294 0026 01       		.byte	0x1
 1295 0027 06       		.byte	0x6
 1296 0028 53000000 		.4byte	.LASF0
 1297 002c 02       		.uleb128 0x2
 1298 002d 01       		.byte	0x1
 1299 002e 08       		.byte	0x8
 1300 002f 85020000 		.4byte	.LASF1
 1301 0033 02       		.uleb128 0x2
 1302 0034 02       		.byte	0x2
 1303 0035 05       		.byte	0x5
 1304 0036 93020000 		.4byte	.LASF2
 1305 003a 02       		.uleb128 0x2
 1306 003b 02       		.byte	0x2
 1307 003c 07       		.byte	0x7
 1308 003d 64010000 		.4byte	.LASF3
 1309 0041 02       		.uleb128 0x2
 1310 0042 04       		.byte	0x4
 1311 0043 05       		.byte	0x5
 1312 0044 8D000000 		.4byte	.LASF4
 1313 0048 02       		.uleb128 0x2
 1314 0049 04       		.byte	0x4
 1315 004a 07       		.byte	0x7
 1316 004b 31010000 		.4byte	.LASF5
 1317 004f 02       		.uleb128 0x2
 1318 0050 08       		.byte	0x8
 1319 0051 05       		.byte	0x5
 1320 0052 45000000 		.4byte	.LASF6
 1321 0056 02       		.uleb128 0x2
 1322 0057 08       		.byte	0x8
 1323 0058 07       		.byte	0x7
 1324 0059 1B000000 		.4byte	.LASF7
 1325 005d 03       		.uleb128 0x3
 1326 005e 04       		.byte	0x4
 1327 005f 05       		.byte	0x5
 1328 0060 696E7400 		.ascii	"int\000"
 1329 0064 02       		.uleb128 0x2
 1330 0065 04       		.byte	0x4
 1331 0066 07       		.byte	0x7
 1332 0067 FE000000 		.4byte	.LASF8
 1333 006b 04       		.uleb128 0x4
 1334 006c 96000000 		.4byte	.LASF9
 1335 0070 02       		.byte	0x2
 1336 0071 FC01     		.2byte	0x1fc
 1337 0073 2C000000 		.4byte	0x2c
 1338 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 40


 1339 0078 00000000 		.4byte	.LASF10
 1340 007c 02       		.byte	0x2
 1341 007d FD01     		.2byte	0x1fd
 1342 007f 3A000000 		.4byte	0x3a
 1343 0083 04       		.uleb128 0x4
 1344 0084 C0000000 		.4byte	.LASF11
 1345 0088 02       		.byte	0x2
 1346 0089 FE01     		.2byte	0x1fe
 1347 008b 48000000 		.4byte	0x48
 1348 008f 04       		.uleb128 0x4
 1349 0090 76030000 		.4byte	.LASF12
 1350 0094 02       		.byte	0x2
 1351 0095 0002     		.2byte	0x200
 1352 0097 33000000 		.4byte	0x33
 1353 009b 04       		.uleb128 0x4
 1354 009c 5F000000 		.4byte	.LASF13
 1355 00a0 02       		.byte	0x2
 1356 00a1 0102     		.2byte	0x201
 1357 00a3 41000000 		.4byte	0x41
 1358 00a7 04       		.uleb128 0x4
 1359 00a8 12020000 		.4byte	.LASF14
 1360 00ac 02       		.byte	0x2
 1361 00ad 0202     		.2byte	0x202
 1362 00af B3000000 		.4byte	0xb3
 1363 00b3 02       		.uleb128 0x2
 1364 00b4 04       		.byte	0x4
 1365 00b5 04       		.byte	0x4
 1366 00b6 75020000 		.4byte	.LASF15
 1367 00ba 02       		.uleb128 0x2
 1368 00bb 08       		.byte	0x8
 1369 00bc 04       		.byte	0x4
 1370 00bd 9C000000 		.4byte	.LASF16
 1371 00c1 04       		.uleb128 0x4
 1372 00c2 6F020000 		.4byte	.LASF17
 1373 00c6 02       		.byte	0x2
 1374 00c7 0702     		.2byte	0x207
 1375 00c9 4F000000 		.4byte	0x4f
 1376 00cd 02       		.uleb128 0x2
 1377 00ce 01       		.byte	0x1
 1378 00cf 08       		.byte	0x8
 1379 00d0 D5020000 		.4byte	.LASF18
 1380 00d4 04       		.uleb128 0x4
 1381 00d5 0C020000 		.4byte	.LASF19
 1382 00d9 02       		.byte	0x2
 1383 00da A802     		.2byte	0x2a8
 1384 00dc E0000000 		.4byte	0xe0
 1385 00e0 05       		.uleb128 0x5
 1386 00e1 83000000 		.4byte	0x83
 1387 00e5 02       		.uleb128 0x2
 1388 00e6 08       		.byte	0x8
 1389 00e7 04       		.byte	0x4
 1390 00e8 2C020000 		.4byte	.LASF20
 1391 00ec 02       		.uleb128 0x2
 1392 00ed 04       		.byte	0x4
 1393 00ee 07       		.byte	0x7
 1394 00ef 1A020000 		.4byte	.LASF21
 1395 00f3 06       		.uleb128 0x6
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 41


 1396 00f4 07000000 		.4byte	.LASF25
 1397 00f8 01       		.byte	0x1
 1398 00f9 3F       		.byte	0x3f
 1399 00fa 00000000 		.4byte	.LFB2
 1400 00fe 24000000 		.4byte	.LFE2-.LFB2
 1401 0102 01       		.uleb128 0x1
 1402 0103 9C       		.byte	0x9c
 1403 0104 07       		.uleb128 0x7
 1404 0105 25010000 		.4byte	.LASF36
 1405 0109 01       		.byte	0x1
 1406 010a 5E       		.byte	0x5e
 1407 010b 00000000 		.4byte	.LFB3
 1408 010f BC010000 		.4byte	.LFE3-.LFB3
 1409 0113 01       		.uleb128 0x1
 1410 0114 9C       		.byte	0x9c
 1411 0115 44010000 		.4byte	0x144
 1412 0119 08       		.uleb128 0x8
 1413 011a BC020000 		.4byte	.LASF22
 1414 011e 01       		.byte	0x1
 1415 011f 60       		.byte	0x60
 1416 0120 83000000 		.4byte	0x83
 1417 0124 02       		.uleb128 0x2
 1418 0125 91       		.byte	0x91
 1419 0126 74       		.sleb128 -12
 1420 0127 08       		.uleb128 0x8
 1421 0128 49010000 		.4byte	.LASF23
 1422 012c 01       		.byte	0x1
 1423 012d 61       		.byte	0x61
 1424 012e 83000000 		.4byte	0x83
 1425 0132 02       		.uleb128 0x2
 1426 0133 91       		.byte	0x91
 1427 0134 6C       		.sleb128 -20
 1428 0135 08       		.uleb128 0x8
 1429 0136 14000000 		.4byte	.LASF24
 1430 013a 01       		.byte	0x1
 1431 013b 62       		.byte	0x62
 1432 013c 9B000000 		.4byte	0x9b
 1433 0140 02       		.uleb128 0x2
 1434 0141 91       		.byte	0x91
 1435 0142 70       		.sleb128 -16
 1436 0143 00       		.byte	0
 1437 0144 09       		.uleb128 0x9
 1438 0145 C2020000 		.4byte	.LASF26
 1439 0149 01       		.byte	0x1
 1440 014a 4A01     		.2byte	0x14a
 1441 014c 00000000 		.4byte	.LFB4
 1442 0150 38000000 		.4byte	.LFE4-.LFB4
 1443 0154 01       		.uleb128 0x1
 1444 0155 9C       		.byte	0x9c
 1445 0156 0A       		.uleb128 0xa
 1446 0157 92030000 		.4byte	.LASF27
 1447 015b 01       		.byte	0x1
 1448 015c 6D01     		.2byte	0x16d
 1449 015e 00000000 		.4byte	.LFB5
 1450 0162 1C000000 		.4byte	.LFE5-.LFB5
 1451 0166 01       		.uleb128 0x1
 1452 0167 9C       		.byte	0x9c
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 42


 1453 0168 0A       		.uleb128 0xa
 1454 0169 62030000 		.4byte	.LASF28
 1455 016d 01       		.byte	0x1
 1456 016e 8701     		.2byte	0x187
 1457 0170 00000000 		.4byte	.LFB6
 1458 0174 1C000000 		.4byte	.LFE6-.LFB6
 1459 0178 01       		.uleb128 0x1
 1460 0179 9C       		.byte	0x9c
 1461 017a 0A       		.uleb128 0xa
 1462 017b 32000000 		.4byte	.LASF29
 1463 017f 01       		.byte	0x1
 1464 0180 A001     		.2byte	0x1a0
 1465 0182 00000000 		.4byte	.LFB7
 1466 0186 20000000 		.4byte	.LFE7-.LFB7
 1467 018a 01       		.uleb128 0x1
 1468 018b 9C       		.byte	0x9c
 1469 018c 0B       		.uleb128 0xb
 1470 018d A5020000 		.4byte	.LASF31
 1471 0191 01       		.byte	0x1
 1472 0192 C201     		.2byte	0x1c2
 1473 0194 83000000 		.4byte	0x83
 1474 0198 00000000 		.4byte	.LFB8
 1475 019c 48000000 		.4byte	.LFE8-.LFB8
 1476 01a0 01       		.uleb128 0x1
 1477 01a1 9C       		.byte	0x9c
 1478 01a2 C5010000 		.4byte	0x1c5
 1479 01a6 0C       		.uleb128 0xc
 1480 01a7 F6000000 		.4byte	.LASF33
 1481 01ab 01       		.byte	0x1
 1482 01ac C201     		.2byte	0x1c2
 1483 01ae 83000000 		.4byte	0x83
 1484 01b2 02       		.uleb128 0x2
 1485 01b3 91       		.byte	0x91
 1486 01b4 6C       		.sleb128 -20
 1487 01b5 0D       		.uleb128 0xd
 1488 01b6 5B030000 		.4byte	.LASF30
 1489 01ba 01       		.byte	0x1
 1490 01bb C401     		.2byte	0x1c4
 1491 01bd 83000000 		.4byte	0x83
 1492 01c1 02       		.uleb128 0x2
 1493 01c2 91       		.byte	0x91
 1494 01c3 74       		.sleb128 -12
 1495 01c4 00       		.byte	0
 1496 01c5 0E       		.uleb128 0xe
 1497 01c6 AD030000 		.4byte	.LASF32
 1498 01ca 01       		.byte	0x1
 1499 01cb F801     		.2byte	0x1f8
 1500 01cd 8F000000 		.4byte	0x8f
 1501 01d1 00000000 		.4byte	.LFB9
 1502 01d5 44000000 		.4byte	.LFE9-.LFB9
 1503 01d9 01       		.uleb128 0x1
 1504 01da 9C       		.byte	0x9c
 1505 01db FE010000 		.4byte	0x1fe
 1506 01df 0C       		.uleb128 0xc
 1507 01e0 D0020000 		.4byte	.LASF34
 1508 01e4 01       		.byte	0x1
 1509 01e5 F801     		.2byte	0x1f8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 43


 1510 01e7 83000000 		.4byte	0x83
 1511 01eb 02       		.uleb128 0x2
 1512 01ec 91       		.byte	0x91
 1513 01ed 6C       		.sleb128 -20
 1514 01ee 0D       		.uleb128 0xd
 1515 01ef C0030000 		.4byte	.LASF35
 1516 01f3 01       		.byte	0x1
 1517 01f4 FA01     		.2byte	0x1fa
 1518 01f6 83000000 		.4byte	0x83
 1519 01fa 02       		.uleb128 0x2
 1520 01fb 91       		.byte	0x91
 1521 01fc 74       		.sleb128 -12
 1522 01fd 00       		.byte	0
 1523 01fe 0F       		.uleb128 0xf
 1524 01ff C7000000 		.4byte	.LASF37
 1525 0203 01       		.byte	0x1
 1526 0204 2502     		.2byte	0x225
 1527 0206 00000000 		.4byte	.LFB10
 1528 020a 20000000 		.4byte	.LFE10-.LFB10
 1529 020e 01       		.uleb128 0x1
 1530 020f 9C       		.byte	0x9c
 1531 0210 24020000 		.4byte	0x224
 1532 0214 0C       		.uleb128 0xc
 1533 0215 F1000000 		.4byte	.LASF38
 1534 0219 01       		.byte	0x1
 1535 021a 2502     		.2byte	0x225
 1536 021c 83000000 		.4byte	0x83
 1537 0220 02       		.uleb128 0x2
 1538 0221 91       		.byte	0x91
 1539 0222 74       		.sleb128 -12
 1540 0223 00       		.byte	0
 1541 0224 0F       		.uleb128 0xf
 1542 0225 0B010000 		.4byte	.LASF39
 1543 0229 01       		.byte	0x1
 1544 022a 5102     		.2byte	0x251
 1545 022c 00000000 		.4byte	.LFB11
 1546 0230 30000000 		.4byte	.LFE11-.LFB11
 1547 0234 01       		.uleb128 0x1
 1548 0235 9C       		.byte	0x9c
 1549 0236 4A020000 		.4byte	0x24a
 1550 023a 0C       		.uleb128 0xc
 1551 023b 23020000 		.4byte	.LASF40
 1552 023f 01       		.byte	0x1
 1553 0240 5102     		.2byte	0x251
 1554 0242 83000000 		.4byte	0x83
 1555 0246 02       		.uleb128 0x2
 1556 0247 91       		.byte	0x91
 1557 0248 74       		.sleb128 -12
 1558 0249 00       		.byte	0
 1559 024a 0F       		.uleb128 0xf
 1560 024b C7030000 		.4byte	.LASF41
 1561 024f 01       		.byte	0x1
 1562 0250 6602     		.2byte	0x266
 1563 0252 00000000 		.4byte	.LFB12
 1564 0256 30000000 		.4byte	.LFE12-.LFB12
 1565 025a 01       		.uleb128 0x1
 1566 025b 9C       		.byte	0x9c
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 44


 1567 025c 70020000 		.4byte	0x270
 1568 0260 0C       		.uleb128 0xc
 1569 0261 7B020000 		.4byte	.LASF42
 1570 0265 01       		.byte	0x1
 1571 0266 6602     		.2byte	0x266
 1572 0268 83000000 		.4byte	0x83
 1573 026c 02       		.uleb128 0x2
 1574 026d 91       		.byte	0x91
 1575 026e 74       		.sleb128 -12
 1576 026f 00       		.byte	0
 1577 0270 0F       		.uleb128 0xf
 1578 0271 DA020000 		.4byte	.LASF43
 1579 0275 01       		.byte	0x1
 1580 0276 7E02     		.2byte	0x27e
 1581 0278 00000000 		.4byte	.LFB13
 1582 027c 20000000 		.4byte	.LFE13-.LFB13
 1583 0280 01       		.uleb128 0x1
 1584 0281 9C       		.byte	0x9c
 1585 0282 96020000 		.4byte	0x296
 1586 0286 0C       		.uleb128 0xc
 1587 0287 F1000000 		.4byte	.LASF38
 1588 028b 01       		.byte	0x1
 1589 028c 7E02     		.2byte	0x27e
 1590 028e 83000000 		.4byte	0x83
 1591 0292 02       		.uleb128 0x2
 1592 0293 91       		.byte	0x91
 1593 0294 74       		.sleb128 -12
 1594 0295 00       		.byte	0
 1595 0296 0F       		.uleb128 0xf
 1596 0297 65000000 		.4byte	.LASF44
 1597 029b 01       		.byte	0x1
 1598 029c 9502     		.2byte	0x295
 1599 029e 00000000 		.4byte	.LFB14
 1600 02a2 20000000 		.4byte	.LFE14-.LFB14
 1601 02a6 01       		.uleb128 0x1
 1602 02a7 9C       		.byte	0x9c
 1603 02a8 BC020000 		.4byte	0x2bc
 1604 02ac 0C       		.uleb128 0xc
 1605 02ad F1000000 		.4byte	.LASF38
 1606 02b1 01       		.byte	0x1
 1607 02b2 9502     		.2byte	0x295
 1608 02b4 83000000 		.4byte	0x83
 1609 02b8 02       		.uleb128 0x2
 1610 02b9 91       		.byte	0x91
 1611 02ba 74       		.sleb128 -12
 1612 02bb 00       		.byte	0
 1613 02bc 10       		.uleb128 0x10
 1614 02bd 53010000 		.4byte	.LASF45
 1615 02c1 01       		.byte	0x1
 1616 02c2 B102     		.2byte	0x2b1
 1617 02c4 00000000 		.4byte	.LFB15
 1618 02c8 34000000 		.4byte	.LFE15-.LFB15
 1619 02cc 01       		.uleb128 0x1
 1620 02cd 9C       		.byte	0x9c
 1621 02ce F1020000 		.4byte	0x2f1
 1622 02d2 0C       		.uleb128 0xc
 1623 02d3 D0020000 		.4byte	.LASF34
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 45


 1624 02d7 01       		.byte	0x1
 1625 02d8 B102     		.2byte	0x2b1
 1626 02da 83000000 		.4byte	0x83
 1627 02de 02       		.uleb128 0x2
 1628 02df 91       		.byte	0x91
 1629 02e0 74       		.sleb128 -12
 1630 02e1 0C       		.uleb128 0xc
 1631 02e2 EE020000 		.4byte	.LASF46
 1632 02e6 01       		.byte	0x1
 1633 02e7 B102     		.2byte	0x2b1
 1634 02e9 8F000000 		.4byte	0x8f
 1635 02ed 02       		.uleb128 0x2
 1636 02ee 91       		.byte	0x91
 1637 02ef 72       		.sleb128 -14
 1638 02f0 00       		.byte	0
 1639 02f1 10       		.uleb128 0x10
 1640 02f2 B1000000 		.4byte	.LASF47
 1641 02f6 01       		.byte	0x1
 1642 02f7 D302     		.2byte	0x2d3
 1643 02f9 00000000 		.4byte	.LFB16
 1644 02fd 2C000000 		.4byte	.LFE16-.LFB16
 1645 0301 01       		.uleb128 0x1
 1646 0302 9C       		.byte	0x9c
 1647 0303 26030000 		.4byte	0x326
 1648 0307 0C       		.uleb128 0xc
 1649 0308 D0020000 		.4byte	.LASF34
 1650 030c 01       		.byte	0x1
 1651 030d D302     		.2byte	0x2d3
 1652 030f 83000000 		.4byte	0x83
 1653 0313 02       		.uleb128 0x2
 1654 0314 91       		.byte	0x91
 1655 0315 74       		.sleb128 -12
 1656 0316 0C       		.uleb128 0xc
 1657 0317 9D020000 		.4byte	.LASF48
 1658 031b 01       		.byte	0x1
 1659 031c D302     		.2byte	0x2d3
 1660 031e 9B000000 		.4byte	0x9b
 1661 0322 02       		.uleb128 0x2
 1662 0323 91       		.byte	0x91
 1663 0324 70       		.sleb128 -16
 1664 0325 00       		.byte	0
 1665 0326 0E       		.uleb128 0xe
 1666 0327 DA000000 		.4byte	.LASF49
 1667 032b 01       		.byte	0x1
 1668 032c F402     		.2byte	0x2f4
 1669 032e 8F000000 		.4byte	0x8f
 1670 0332 00000000 		.4byte	.LFB17
 1671 0336 A0000000 		.4byte	.LFE17-.LFB17
 1672 033a 01       		.uleb128 0x1
 1673 033b 9C       		.byte	0x9c
 1674 033c 6E030000 		.4byte	0x36e
 1675 0340 0C       		.uleb128 0xc
 1676 0341 D0020000 		.4byte	.LASF34
 1677 0345 01       		.byte	0x1
 1678 0346 F402     		.2byte	0x2f4
 1679 0348 83000000 		.4byte	0x83
 1680 034c 02       		.uleb128 0x2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 46


 1681 034d 91       		.byte	0x91
 1682 034e 6C       		.sleb128 -20
 1683 034f 0C       		.uleb128 0xc
 1684 0350 F5020000 		.4byte	.LASF50
 1685 0354 01       		.byte	0x1
 1686 0355 F402     		.2byte	0x2f4
 1687 0357 8F000000 		.4byte	0x8f
 1688 035b 02       		.uleb128 0x2
 1689 035c 91       		.byte	0x91
 1690 035d 6A       		.sleb128 -22
 1691 035e 0D       		.uleb128 0xd
 1692 035f 05020000 		.4byte	.LASF51
 1693 0363 01       		.byte	0x1
 1694 0364 F602     		.2byte	0x2f6
 1695 0366 8F000000 		.4byte	0x8f
 1696 036a 02       		.uleb128 0x2
 1697 036b 91       		.byte	0x91
 1698 036c 76       		.sleb128 -10
 1699 036d 00       		.byte	0
 1700 036e 0E       		.uleb128 0xe
 1701 036f FF020000 		.4byte	.LASF52
 1702 0373 01       		.byte	0x1
 1703 0374 2A03     		.2byte	0x32a
 1704 0376 9B000000 		.4byte	0x9b
 1705 037a 00000000 		.4byte	.LFB18
 1706 037e 90000000 		.4byte	.LFE18-.LFB18
 1707 0382 01       		.uleb128 0x1
 1708 0383 9C       		.byte	0x9c
 1709 0384 B6030000 		.4byte	0x3b6
 1710 0388 0C       		.uleb128 0xc
 1711 0389 D0020000 		.4byte	.LASF34
 1712 038d 01       		.byte	0x1
 1713 038e 2A03     		.2byte	0x32a
 1714 0390 83000000 		.4byte	0x83
 1715 0394 02       		.uleb128 0x2
 1716 0395 91       		.byte	0x91
 1717 0396 64       		.sleb128 -28
 1718 0397 0C       		.uleb128 0xc
 1719 0398 F5020000 		.4byte	.LASF50
 1720 039c 01       		.byte	0x1
 1721 039d 2A03     		.2byte	0x32a
 1722 039f 8F000000 		.4byte	0x8f
 1723 03a3 02       		.uleb128 0x2
 1724 03a4 91       		.byte	0x91
 1725 03a5 62       		.sleb128 -30
 1726 03a6 0D       		.uleb128 0xd
 1727 03a7 1E010000 		.4byte	.LASF53
 1728 03ab 01       		.byte	0x1
 1729 03ac 2C03     		.2byte	0x32c
 1730 03ae C1000000 		.4byte	0xc1
 1731 03b2 02       		.uleb128 0x2
 1732 03b3 91       		.byte	0x91
 1733 03b4 68       		.sleb128 -24
 1734 03b5 00       		.byte	0
 1735 03b6 0E       		.uleb128 0xe
 1736 03b7 77000000 		.4byte	.LASF54
 1737 03bb 01       		.byte	0x1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 47


 1738 03bc 5703     		.2byte	0x357
 1739 03be A7000000 		.4byte	0xa7
 1740 03c2 00000000 		.4byte	.LFB19
 1741 03c6 80000000 		.4byte	.LFE19-.LFB19
 1742 03ca 01       		.uleb128 0x1
 1743 03cb 9C       		.byte	0x9c
 1744 03cc FE030000 		.4byte	0x3fe
 1745 03d0 0C       		.uleb128 0xc
 1746 03d1 D0020000 		.4byte	.LASF34
 1747 03d5 01       		.byte	0x1
 1748 03d6 5703     		.2byte	0x357
 1749 03d8 83000000 		.4byte	0x83
 1750 03dc 02       		.uleb128 0x2
 1751 03dd 91       		.byte	0x91
 1752 03de 64       		.sleb128 -28
 1753 03df 0C       		.uleb128 0xc
 1754 03e0 F5020000 		.4byte	.LASF50
 1755 03e4 01       		.byte	0x1
 1756 03e5 5703     		.2byte	0x357
 1757 03e7 8F000000 		.4byte	0x8f
 1758 03eb 02       		.uleb128 0x2
 1759 03ec 91       		.byte	0x91
 1760 03ed 62       		.sleb128 -30
 1761 03ee 0D       		.uleb128 0xd
 1762 03ef 43010000 		.4byte	.LASF55
 1763 03f3 01       		.byte	0x1
 1764 03f4 5903     		.2byte	0x359
 1765 03f6 A7000000 		.4byte	0xa7
 1766 03fa 02       		.uleb128 0x2
 1767 03fb 91       		.byte	0x91
 1768 03fc 6C       		.sleb128 -20
 1769 03fd 00       		.byte	0
 1770 03fe 11       		.uleb128 0x11
 1771 03ff 0E040000 		.4byte	0x40e
 1772 0403 0E040000 		.4byte	0x40e
 1773 0407 12       		.uleb128 0x12
 1774 0408 EC000000 		.4byte	0xec
 1775 040c 00       		.byte	0
 1776 040d 00       		.byte	0
 1777 040e 13       		.uleb128 0x13
 1778 040f 83000000 		.4byte	0x83
 1779 0413 08       		.uleb128 0x8
 1780 0414 7C030000 		.4byte	.LASF56
 1781 0418 01       		.byte	0x1
 1782 0419 21       		.byte	0x21
 1783 041a 24040000 		.4byte	0x424
 1784 041e 05       		.uleb128 0x5
 1785 041f 03       		.byte	0x3
 1786 0420 00000000 		.4byte	PM_ADC_channelsConfig
 1787 0424 13       		.uleb128 0x13
 1788 0425 FE030000 		.4byte	0x3fe
 1789 0429 14       		.uleb128 0x14
 1790 042a 9E030000 		.4byte	.LASF57
 1791 042e 01       		.byte	0x1
 1792 042f 18       		.byte	0x18
 1793 0430 6B000000 		.4byte	0x6b
 1794 0434 05       		.uleb128 0x5
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 48


 1795 0435 03       		.byte	0x3
 1796 0436 00000000 		.4byte	PM_ADC_initVar
 1797 043a 11       		.uleb128 0x11
 1798 043b 4A040000 		.4byte	0x44a
 1799 043f 4A040000 		.4byte	0x44a
 1800 0443 12       		.uleb128 0x12
 1801 0444 EC000000 		.4byte	0xec
 1802 0448 00       		.byte	0
 1803 0449 00       		.byte	0
 1804 044a 05       		.uleb128 0x5
 1805 044b 8F000000 		.4byte	0x8f
 1806 044f 14       		.uleb128 0x14
 1807 0450 A3000000 		.4byte	.LASF58
 1808 0454 01       		.byte	0x1
 1809 0455 19       		.byte	0x19
 1810 0456 60040000 		.4byte	0x460
 1811 045a 05       		.uleb128 0x5
 1812 045b 03       		.byte	0x3
 1813 045c 00000000 		.4byte	PM_ADC_offset
 1814 0460 05       		.uleb128 0x5
 1815 0461 3A040000 		.4byte	0x43a
 1816 0465 11       		.uleb128 0x11
 1817 0466 75040000 		.4byte	0x475
 1818 046a 75040000 		.4byte	0x475
 1819 046e 12       		.uleb128 0x12
 1820 046f EC000000 		.4byte	0xec
 1821 0473 00       		.byte	0
 1822 0474 00       		.byte	0
 1823 0475 05       		.uleb128 0x5
 1824 0476 9B000000 		.4byte	0x9b
 1825 047a 14       		.uleb128 0x14
 1826 047b 38020000 		.4byte	.LASF59
 1827 047f 01       		.byte	0x1
 1828 0480 1A       		.byte	0x1a
 1829 0481 8B040000 		.4byte	0x48b
 1830 0485 05       		.uleb128 0x5
 1831 0486 03       		.byte	0x3
 1832 0487 00000000 		.4byte	PM_ADC_countsPer10Volt
 1833 048b 05       		.uleb128 0x5
 1834 048c 65040000 		.4byte	0x465
 1835 0490 00       		.byte	0
 1836              		.section	.debug_abbrev,"",%progbits
 1837              	.Ldebug_abbrev0:
 1838 0000 01       		.uleb128 0x1
 1839 0001 11       		.uleb128 0x11
 1840 0002 01       		.byte	0x1
 1841 0003 25       		.uleb128 0x25
 1842 0004 0E       		.uleb128 0xe
 1843 0005 13       		.uleb128 0x13
 1844 0006 0B       		.uleb128 0xb
 1845 0007 03       		.uleb128 0x3
 1846 0008 0E       		.uleb128 0xe
 1847 0009 1B       		.uleb128 0x1b
 1848 000a 0E       		.uleb128 0xe
 1849 000b 55       		.uleb128 0x55
 1850 000c 17       		.uleb128 0x17
 1851 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 49


 1852 000e 01       		.uleb128 0x1
 1853 000f 10       		.uleb128 0x10
 1854 0010 17       		.uleb128 0x17
 1855 0011 00       		.byte	0
 1856 0012 00       		.byte	0
 1857 0013 02       		.uleb128 0x2
 1858 0014 24       		.uleb128 0x24
 1859 0015 00       		.byte	0
 1860 0016 0B       		.uleb128 0xb
 1861 0017 0B       		.uleb128 0xb
 1862 0018 3E       		.uleb128 0x3e
 1863 0019 0B       		.uleb128 0xb
 1864 001a 03       		.uleb128 0x3
 1865 001b 0E       		.uleb128 0xe
 1866 001c 00       		.byte	0
 1867 001d 00       		.byte	0
 1868 001e 03       		.uleb128 0x3
 1869 001f 24       		.uleb128 0x24
 1870 0020 00       		.byte	0
 1871 0021 0B       		.uleb128 0xb
 1872 0022 0B       		.uleb128 0xb
 1873 0023 3E       		.uleb128 0x3e
 1874 0024 0B       		.uleb128 0xb
 1875 0025 03       		.uleb128 0x3
 1876 0026 08       		.uleb128 0x8
 1877 0027 00       		.byte	0
 1878 0028 00       		.byte	0
 1879 0029 04       		.uleb128 0x4
 1880 002a 16       		.uleb128 0x16
 1881 002b 00       		.byte	0
 1882 002c 03       		.uleb128 0x3
 1883 002d 0E       		.uleb128 0xe
 1884 002e 3A       		.uleb128 0x3a
 1885 002f 0B       		.uleb128 0xb
 1886 0030 3B       		.uleb128 0x3b
 1887 0031 05       		.uleb128 0x5
 1888 0032 49       		.uleb128 0x49
 1889 0033 13       		.uleb128 0x13
 1890 0034 00       		.byte	0
 1891 0035 00       		.byte	0
 1892 0036 05       		.uleb128 0x5
 1893 0037 35       		.uleb128 0x35
 1894 0038 00       		.byte	0
 1895 0039 49       		.uleb128 0x49
 1896 003a 13       		.uleb128 0x13
 1897 003b 00       		.byte	0
 1898 003c 00       		.byte	0
 1899 003d 06       		.uleb128 0x6
 1900 003e 2E       		.uleb128 0x2e
 1901 003f 00       		.byte	0
 1902 0040 3F       		.uleb128 0x3f
 1903 0041 19       		.uleb128 0x19
 1904 0042 03       		.uleb128 0x3
 1905 0043 0E       		.uleb128 0xe
 1906 0044 3A       		.uleb128 0x3a
 1907 0045 0B       		.uleb128 0xb
 1908 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 50


 1909 0047 0B       		.uleb128 0xb
 1910 0048 27       		.uleb128 0x27
 1911 0049 19       		.uleb128 0x19
 1912 004a 11       		.uleb128 0x11
 1913 004b 01       		.uleb128 0x1
 1914 004c 12       		.uleb128 0x12
 1915 004d 06       		.uleb128 0x6
 1916 004e 40       		.uleb128 0x40
 1917 004f 18       		.uleb128 0x18
 1918 0050 9642     		.uleb128 0x2116
 1919 0052 19       		.uleb128 0x19
 1920 0053 00       		.byte	0
 1921 0054 00       		.byte	0
 1922 0055 07       		.uleb128 0x7
 1923 0056 2E       		.uleb128 0x2e
 1924 0057 01       		.byte	0x1
 1925 0058 3F       		.uleb128 0x3f
 1926 0059 19       		.uleb128 0x19
 1927 005a 03       		.uleb128 0x3
 1928 005b 0E       		.uleb128 0xe
 1929 005c 3A       		.uleb128 0x3a
 1930 005d 0B       		.uleb128 0xb
 1931 005e 3B       		.uleb128 0x3b
 1932 005f 0B       		.uleb128 0xb
 1933 0060 27       		.uleb128 0x27
 1934 0061 19       		.uleb128 0x19
 1935 0062 11       		.uleb128 0x11
 1936 0063 01       		.uleb128 0x1
 1937 0064 12       		.uleb128 0x12
 1938 0065 06       		.uleb128 0x6
 1939 0066 40       		.uleb128 0x40
 1940 0067 18       		.uleb128 0x18
 1941 0068 9642     		.uleb128 0x2116
 1942 006a 19       		.uleb128 0x19
 1943 006b 01       		.uleb128 0x1
 1944 006c 13       		.uleb128 0x13
 1945 006d 00       		.byte	0
 1946 006e 00       		.byte	0
 1947 006f 08       		.uleb128 0x8
 1948 0070 34       		.uleb128 0x34
 1949 0071 00       		.byte	0
 1950 0072 03       		.uleb128 0x3
 1951 0073 0E       		.uleb128 0xe
 1952 0074 3A       		.uleb128 0x3a
 1953 0075 0B       		.uleb128 0xb
 1954 0076 3B       		.uleb128 0x3b
 1955 0077 0B       		.uleb128 0xb
 1956 0078 49       		.uleb128 0x49
 1957 0079 13       		.uleb128 0x13
 1958 007a 02       		.uleb128 0x2
 1959 007b 18       		.uleb128 0x18
 1960 007c 00       		.byte	0
 1961 007d 00       		.byte	0
 1962 007e 09       		.uleb128 0x9
 1963 007f 2E       		.uleb128 0x2e
 1964 0080 00       		.byte	0
 1965 0081 3F       		.uleb128 0x3f
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 51


 1966 0082 19       		.uleb128 0x19
 1967 0083 03       		.uleb128 0x3
 1968 0084 0E       		.uleb128 0xe
 1969 0085 3A       		.uleb128 0x3a
 1970 0086 0B       		.uleb128 0xb
 1971 0087 3B       		.uleb128 0x3b
 1972 0088 05       		.uleb128 0x5
 1973 0089 27       		.uleb128 0x27
 1974 008a 19       		.uleb128 0x19
 1975 008b 11       		.uleb128 0x11
 1976 008c 01       		.uleb128 0x1
 1977 008d 12       		.uleb128 0x12
 1978 008e 06       		.uleb128 0x6
 1979 008f 40       		.uleb128 0x40
 1980 0090 18       		.uleb128 0x18
 1981 0091 9642     		.uleb128 0x2116
 1982 0093 19       		.uleb128 0x19
 1983 0094 00       		.byte	0
 1984 0095 00       		.byte	0
 1985 0096 0A       		.uleb128 0xa
 1986 0097 2E       		.uleb128 0x2e
 1987 0098 00       		.byte	0
 1988 0099 3F       		.uleb128 0x3f
 1989 009a 19       		.uleb128 0x19
 1990 009b 03       		.uleb128 0x3
 1991 009c 0E       		.uleb128 0xe
 1992 009d 3A       		.uleb128 0x3a
 1993 009e 0B       		.uleb128 0xb
 1994 009f 3B       		.uleb128 0x3b
 1995 00a0 05       		.uleb128 0x5
 1996 00a1 27       		.uleb128 0x27
 1997 00a2 19       		.uleb128 0x19
 1998 00a3 11       		.uleb128 0x11
 1999 00a4 01       		.uleb128 0x1
 2000 00a5 12       		.uleb128 0x12
 2001 00a6 06       		.uleb128 0x6
 2002 00a7 40       		.uleb128 0x40
 2003 00a8 18       		.uleb128 0x18
 2004 00a9 9742     		.uleb128 0x2117
 2005 00ab 19       		.uleb128 0x19
 2006 00ac 00       		.byte	0
 2007 00ad 00       		.byte	0
 2008 00ae 0B       		.uleb128 0xb
 2009 00af 2E       		.uleb128 0x2e
 2010 00b0 01       		.byte	0x1
 2011 00b1 3F       		.uleb128 0x3f
 2012 00b2 19       		.uleb128 0x19
 2013 00b3 03       		.uleb128 0x3
 2014 00b4 0E       		.uleb128 0xe
 2015 00b5 3A       		.uleb128 0x3a
 2016 00b6 0B       		.uleb128 0xb
 2017 00b7 3B       		.uleb128 0x3b
 2018 00b8 05       		.uleb128 0x5
 2019 00b9 27       		.uleb128 0x27
 2020 00ba 19       		.uleb128 0x19
 2021 00bb 49       		.uleb128 0x49
 2022 00bc 13       		.uleb128 0x13
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 52


 2023 00bd 11       		.uleb128 0x11
 2024 00be 01       		.uleb128 0x1
 2025 00bf 12       		.uleb128 0x12
 2026 00c0 06       		.uleb128 0x6
 2027 00c1 40       		.uleb128 0x40
 2028 00c2 18       		.uleb128 0x18
 2029 00c3 9742     		.uleb128 0x2117
 2030 00c5 19       		.uleb128 0x19
 2031 00c6 01       		.uleb128 0x1
 2032 00c7 13       		.uleb128 0x13
 2033 00c8 00       		.byte	0
 2034 00c9 00       		.byte	0
 2035 00ca 0C       		.uleb128 0xc
 2036 00cb 05       		.uleb128 0x5
 2037 00cc 00       		.byte	0
 2038 00cd 03       		.uleb128 0x3
 2039 00ce 0E       		.uleb128 0xe
 2040 00cf 3A       		.uleb128 0x3a
 2041 00d0 0B       		.uleb128 0xb
 2042 00d1 3B       		.uleb128 0x3b
 2043 00d2 05       		.uleb128 0x5
 2044 00d3 49       		.uleb128 0x49
 2045 00d4 13       		.uleb128 0x13
 2046 00d5 02       		.uleb128 0x2
 2047 00d6 18       		.uleb128 0x18
 2048 00d7 00       		.byte	0
 2049 00d8 00       		.byte	0
 2050 00d9 0D       		.uleb128 0xd
 2051 00da 34       		.uleb128 0x34
 2052 00db 00       		.byte	0
 2053 00dc 03       		.uleb128 0x3
 2054 00dd 0E       		.uleb128 0xe
 2055 00de 3A       		.uleb128 0x3a
 2056 00df 0B       		.uleb128 0xb
 2057 00e0 3B       		.uleb128 0x3b
 2058 00e1 05       		.uleb128 0x5
 2059 00e2 49       		.uleb128 0x49
 2060 00e3 13       		.uleb128 0x13
 2061 00e4 02       		.uleb128 0x2
 2062 00e5 18       		.uleb128 0x18
 2063 00e6 00       		.byte	0
 2064 00e7 00       		.byte	0
 2065 00e8 0E       		.uleb128 0xe
 2066 00e9 2E       		.uleb128 0x2e
 2067 00ea 01       		.byte	0x1
 2068 00eb 3F       		.uleb128 0x3f
 2069 00ec 19       		.uleb128 0x19
 2070 00ed 03       		.uleb128 0x3
 2071 00ee 0E       		.uleb128 0xe
 2072 00ef 3A       		.uleb128 0x3a
 2073 00f0 0B       		.uleb128 0xb
 2074 00f1 3B       		.uleb128 0x3b
 2075 00f2 05       		.uleb128 0x5
 2076 00f3 27       		.uleb128 0x27
 2077 00f4 19       		.uleb128 0x19
 2078 00f5 49       		.uleb128 0x49
 2079 00f6 13       		.uleb128 0x13
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 53


 2080 00f7 11       		.uleb128 0x11
 2081 00f8 01       		.uleb128 0x1
 2082 00f9 12       		.uleb128 0x12
 2083 00fa 06       		.uleb128 0x6
 2084 00fb 40       		.uleb128 0x40
 2085 00fc 18       		.uleb128 0x18
 2086 00fd 9642     		.uleb128 0x2116
 2087 00ff 19       		.uleb128 0x19
 2088 0100 01       		.uleb128 0x1
 2089 0101 13       		.uleb128 0x13
 2090 0102 00       		.byte	0
 2091 0103 00       		.byte	0
 2092 0104 0F       		.uleb128 0xf
 2093 0105 2E       		.uleb128 0x2e
 2094 0106 01       		.byte	0x1
 2095 0107 3F       		.uleb128 0x3f
 2096 0108 19       		.uleb128 0x19
 2097 0109 03       		.uleb128 0x3
 2098 010a 0E       		.uleb128 0xe
 2099 010b 3A       		.uleb128 0x3a
 2100 010c 0B       		.uleb128 0xb
 2101 010d 3B       		.uleb128 0x3b
 2102 010e 05       		.uleb128 0x5
 2103 010f 27       		.uleb128 0x27
 2104 0110 19       		.uleb128 0x19
 2105 0111 11       		.uleb128 0x11
 2106 0112 01       		.uleb128 0x1
 2107 0113 12       		.uleb128 0x12
 2108 0114 06       		.uleb128 0x6
 2109 0115 40       		.uleb128 0x40
 2110 0116 18       		.uleb128 0x18
 2111 0117 9742     		.uleb128 0x2117
 2112 0119 19       		.uleb128 0x19
 2113 011a 01       		.uleb128 0x1
 2114 011b 13       		.uleb128 0x13
 2115 011c 00       		.byte	0
 2116 011d 00       		.byte	0
 2117 011e 10       		.uleb128 0x10
 2118 011f 2E       		.uleb128 0x2e
 2119 0120 01       		.byte	0x1
 2120 0121 3F       		.uleb128 0x3f
 2121 0122 19       		.uleb128 0x19
 2122 0123 03       		.uleb128 0x3
 2123 0124 0E       		.uleb128 0xe
 2124 0125 3A       		.uleb128 0x3a
 2125 0126 0B       		.uleb128 0xb
 2126 0127 3B       		.uleb128 0x3b
 2127 0128 05       		.uleb128 0x5
 2128 0129 27       		.uleb128 0x27
 2129 012a 19       		.uleb128 0x19
 2130 012b 11       		.uleb128 0x11
 2131 012c 01       		.uleb128 0x1
 2132 012d 12       		.uleb128 0x12
 2133 012e 06       		.uleb128 0x6
 2134 012f 40       		.uleb128 0x40
 2135 0130 18       		.uleb128 0x18
 2136 0131 9642     		.uleb128 0x2116
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 54


 2137 0133 19       		.uleb128 0x19
 2138 0134 01       		.uleb128 0x1
 2139 0135 13       		.uleb128 0x13
 2140 0136 00       		.byte	0
 2141 0137 00       		.byte	0
 2142 0138 11       		.uleb128 0x11
 2143 0139 01       		.uleb128 0x1
 2144 013a 01       		.byte	0x1
 2145 013b 49       		.uleb128 0x49
 2146 013c 13       		.uleb128 0x13
 2147 013d 01       		.uleb128 0x1
 2148 013e 13       		.uleb128 0x13
 2149 013f 00       		.byte	0
 2150 0140 00       		.byte	0
 2151 0141 12       		.uleb128 0x12
 2152 0142 21       		.uleb128 0x21
 2153 0143 00       		.byte	0
 2154 0144 49       		.uleb128 0x49
 2155 0145 13       		.uleb128 0x13
 2156 0146 2F       		.uleb128 0x2f
 2157 0147 0B       		.uleb128 0xb
 2158 0148 00       		.byte	0
 2159 0149 00       		.byte	0
 2160 014a 13       		.uleb128 0x13
 2161 014b 26       		.uleb128 0x26
 2162 014c 00       		.byte	0
 2163 014d 49       		.uleb128 0x49
 2164 014e 13       		.uleb128 0x13
 2165 014f 00       		.byte	0
 2166 0150 00       		.byte	0
 2167 0151 14       		.uleb128 0x14
 2168 0152 34       		.uleb128 0x34
 2169 0153 00       		.byte	0
 2170 0154 03       		.uleb128 0x3
 2171 0155 0E       		.uleb128 0xe
 2172 0156 3A       		.uleb128 0x3a
 2173 0157 0B       		.uleb128 0xb
 2174 0158 3B       		.uleb128 0x3b
 2175 0159 0B       		.uleb128 0xb
 2176 015a 49       		.uleb128 0x49
 2177 015b 13       		.uleb128 0x13
 2178 015c 3F       		.uleb128 0x3f
 2179 015d 19       		.uleb128 0x19
 2180 015e 02       		.uleb128 0x2
 2181 015f 18       		.uleb128 0x18
 2182 0160 00       		.byte	0
 2183 0161 00       		.byte	0
 2184 0162 00       		.byte	0
 2185              		.section	.debug_aranges,"",%progbits
 2186 0000 A4000000 		.4byte	0xa4
 2187 0004 0200     		.2byte	0x2
 2188 0006 00000000 		.4byte	.Ldebug_info0
 2189 000a 04       		.byte	0x4
 2190 000b 00       		.byte	0
 2191 000c 0000     		.2byte	0
 2192 000e 0000     		.2byte	0
 2193 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 55


 2194 0014 24000000 		.4byte	.LFE2-.LFB2
 2195 0018 00000000 		.4byte	.LFB3
 2196 001c BC010000 		.4byte	.LFE3-.LFB3
 2197 0020 00000000 		.4byte	.LFB4
 2198 0024 38000000 		.4byte	.LFE4-.LFB4
 2199 0028 00000000 		.4byte	.LFB5
 2200 002c 1C000000 		.4byte	.LFE5-.LFB5
 2201 0030 00000000 		.4byte	.LFB6
 2202 0034 1C000000 		.4byte	.LFE6-.LFB6
 2203 0038 00000000 		.4byte	.LFB7
 2204 003c 20000000 		.4byte	.LFE7-.LFB7
 2205 0040 00000000 		.4byte	.LFB8
 2206 0044 48000000 		.4byte	.LFE8-.LFB8
 2207 0048 00000000 		.4byte	.LFB9
 2208 004c 44000000 		.4byte	.LFE9-.LFB9
 2209 0050 00000000 		.4byte	.LFB10
 2210 0054 20000000 		.4byte	.LFE10-.LFB10
 2211 0058 00000000 		.4byte	.LFB11
 2212 005c 30000000 		.4byte	.LFE11-.LFB11
 2213 0060 00000000 		.4byte	.LFB12
 2214 0064 30000000 		.4byte	.LFE12-.LFB12
 2215 0068 00000000 		.4byte	.LFB13
 2216 006c 20000000 		.4byte	.LFE13-.LFB13
 2217 0070 00000000 		.4byte	.LFB14
 2218 0074 20000000 		.4byte	.LFE14-.LFB14
 2219 0078 00000000 		.4byte	.LFB15
 2220 007c 34000000 		.4byte	.LFE15-.LFB15
 2221 0080 00000000 		.4byte	.LFB16
 2222 0084 2C000000 		.4byte	.LFE16-.LFB16
 2223 0088 00000000 		.4byte	.LFB17
 2224 008c A0000000 		.4byte	.LFE17-.LFB17
 2225 0090 00000000 		.4byte	.LFB18
 2226 0094 90000000 		.4byte	.LFE18-.LFB18
 2227 0098 00000000 		.4byte	.LFB19
 2228 009c 80000000 		.4byte	.LFE19-.LFB19
 2229 00a0 00000000 		.4byte	0
 2230 00a4 00000000 		.4byte	0
 2231              		.section	.debug_ranges,"",%progbits
 2232              	.Ldebug_ranges0:
 2233 0000 00000000 		.4byte	.LFB2
 2234 0004 24000000 		.4byte	.LFE2
 2235 0008 00000000 		.4byte	.LFB3
 2236 000c BC010000 		.4byte	.LFE3
 2237 0010 00000000 		.4byte	.LFB4
 2238 0014 38000000 		.4byte	.LFE4
 2239 0018 00000000 		.4byte	.LFB5
 2240 001c 1C000000 		.4byte	.LFE5
 2241 0020 00000000 		.4byte	.LFB6
 2242 0024 1C000000 		.4byte	.LFE6
 2243 0028 00000000 		.4byte	.LFB7
 2244 002c 20000000 		.4byte	.LFE7
 2245 0030 00000000 		.4byte	.LFB8
 2246 0034 48000000 		.4byte	.LFE8
 2247 0038 00000000 		.4byte	.LFB9
 2248 003c 44000000 		.4byte	.LFE9
 2249 0040 00000000 		.4byte	.LFB10
 2250 0044 20000000 		.4byte	.LFE10
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 56


 2251 0048 00000000 		.4byte	.LFB11
 2252 004c 30000000 		.4byte	.LFE11
 2253 0050 00000000 		.4byte	.LFB12
 2254 0054 30000000 		.4byte	.LFE12
 2255 0058 00000000 		.4byte	.LFB13
 2256 005c 20000000 		.4byte	.LFE13
 2257 0060 00000000 		.4byte	.LFB14
 2258 0064 20000000 		.4byte	.LFE14
 2259 0068 00000000 		.4byte	.LFB15
 2260 006c 34000000 		.4byte	.LFE15
 2261 0070 00000000 		.4byte	.LFB16
 2262 0074 2C000000 		.4byte	.LFE16
 2263 0078 00000000 		.4byte	.LFB17
 2264 007c A0000000 		.4byte	.LFE17
 2265 0080 00000000 		.4byte	.LFB18
 2266 0084 90000000 		.4byte	.LFE18
 2267 0088 00000000 		.4byte	.LFB19
 2268 008c 80000000 		.4byte	.LFE19
 2269 0090 00000000 		.4byte	0
 2270 0094 00000000 		.4byte	0
 2271              		.section	.debug_line,"",%progbits
 2272              	.Ldebug_line0:
 2273 0000 98020000 		.section	.debug_str,"MS",%progbits,1
 2273      02004300 
 2273      00000201 
 2273      FB0E0D00 
 2273      01010101 
 2274              	.LASF10:
 2275 0000 75696E74 		.ascii	"uint16\000"
 2275      313600
 2276              	.LASF25:
 2277 0007 504D5F41 		.ascii	"PM_ADC_Start\000"
 2277      44435F53 
 2277      74617274 
 2277      00
 2278              	.LASF24:
 2279 0014 636F756E 		.ascii	"counts\000"
 2279      747300
 2280              	.LASF7:
 2281 001b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2281      206C6F6E 
 2281      6720756E 
 2281      7369676E 
 2281      65642069 
 2282              	.LASF29:
 2283 0032 504D5F41 		.ascii	"PM_ADC_StopConvert\000"
 2283      44435F53 
 2283      746F7043 
 2283      6F6E7665 
 2283      727400
 2284              	.LASF6:
 2285 0045 6C6F6E67 		.ascii	"long long int\000"
 2285      206C6F6E 
 2285      6720696E 
 2285      7400
 2286              	.LASF0:
 2287 0053 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 57


 2287      65642063 
 2287      68617200 
 2288              	.LASF13:
 2289 005f 696E7433 		.ascii	"int32\000"
 2289      3200
 2290              	.LASF44:
 2291 0065 504D5F41 		.ascii	"PM_ADC_SetSatMask\000"
 2291      44435F53 
 2291      65745361 
 2291      744D6173 
 2291      6B00
 2292              	.LASF54:
 2293 0077 504D5F41 		.ascii	"PM_ADC_CountsTo_Volts\000"
 2293      44435F43 
 2293      6F756E74 
 2293      73546F5F 
 2293      566F6C74 
 2294              	.LASF4:
 2295 008d 6C6F6E67 		.ascii	"long int\000"
 2295      20696E74 
 2295      00
 2296              	.LASF9:
 2297 0096 75696E74 		.ascii	"uint8\000"
 2297      3800
 2298              	.LASF16:
 2299 009c 646F7562 		.ascii	"double\000"
 2299      6C6500
 2300              	.LASF58:
 2301 00a3 504D5F41 		.ascii	"PM_ADC_offset\000"
 2301      44435F6F 
 2301      66667365 
 2301      7400
 2302              	.LASF47:
 2303 00b1 504D5F41 		.ascii	"PM_ADC_SetGain\000"
 2303      44435F53 
 2303      65744761 
 2303      696E00
 2304              	.LASF11:
 2305 00c0 75696E74 		.ascii	"uint32\000"
 2305      333200
 2306              	.LASF37:
 2307 00c7 504D5F41 		.ascii	"PM_ADC_SetChanMask\000"
 2307      44435F53 
 2307      65744368 
 2307      616E4D61 
 2307      736B00
 2308              	.LASF49:
 2309 00da 504D5F41 		.ascii	"PM_ADC_CountsTo_mVolts\000"
 2309      44435F43 
 2309      6F756E74 
 2309      73546F5F 
 2309      6D566F6C 
 2310              	.LASF38:
 2311 00f1 6D61736B 		.ascii	"mask\000"
 2311      00
 2312              	.LASF33:
 2313 00f6 7265744D 		.ascii	"retMode\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 58


 2313      6F646500 
 2314              	.LASF8:
 2315 00fe 756E7369 		.ascii	"unsigned int\000"
 2315      676E6564 
 2315      20696E74 
 2315      00
 2316              	.LASF39:
 2317 010b 504D5F41 		.ascii	"PM_ADC_SetLowLimit\000"
 2317      44435F53 
 2317      65744C6F 
 2317      774C696D 
 2317      697400
 2318              	.LASF53:
 2319 011e 75566F6C 		.ascii	"uVolts\000"
 2319      747300
 2320              	.LASF36:
 2321 0125 504D5F41 		.ascii	"PM_ADC_Init\000"
 2321      44435F49 
 2321      6E697400 
 2322              	.LASF5:
 2323 0131 6C6F6E67 		.ascii	"long unsigned int\000"
 2323      20756E73 
 2323      69676E65 
 2323      6420696E 
 2323      7400
 2324              	.LASF55:
 2325 0143 766F6C74 		.ascii	"volts\000"
 2325      7300
 2326              	.LASF23:
 2327 0149 746D7052 		.ascii	"tmpRegVal\000"
 2327      65675661 
 2327      6C00
 2328              	.LASF45:
 2329 0153 504D5F41 		.ascii	"PM_ADC_SetOffset\000"
 2329      44435F53 
 2329      65744F66 
 2329      66736574 
 2329      00
 2330              	.LASF3:
 2331 0164 73686F72 		.ascii	"short unsigned int\000"
 2331      7420756E 
 2331      7369676E 
 2331      65642069 
 2331      6E7400
 2332              	.LASF60:
 2333 0177 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2333      43313120 
 2333      352E342E 
 2333      31203230 
 2333      31363036 
 2334 01aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2334      20726576 
 2334      6973696F 
 2334      6E203233 
 2334      37373135 
 2335 01dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2335      66756E63 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 59


 2335      74696F6E 
 2335      2D736563 
 2335      74696F6E 
 2336              	.LASF51:
 2337 0205 6D566F6C 		.ascii	"mVolts\000"
 2337      747300
 2338              	.LASF19:
 2339 020c 72656733 		.ascii	"reg32\000"
 2339      3200
 2340              	.LASF14:
 2341 0212 666C6F61 		.ascii	"float32\000"
 2341      74333200 
 2342              	.LASF21:
 2343 021a 73697A65 		.ascii	"sizetype\000"
 2343      74797065 
 2343      00
 2344              	.LASF40:
 2345 0223 6C6F774C 		.ascii	"lowLimit\000"
 2345      696D6974 
 2345      00
 2346              	.LASF20:
 2347 022c 6C6F6E67 		.ascii	"long double\000"
 2347      20646F75 
 2347      626C6500 
 2348              	.LASF59:
 2349 0238 504D5F41 		.ascii	"PM_ADC_countsPer10Volt\000"
 2349      44435F63 
 2349      6F756E74 
 2349      73506572 
 2349      3130566F 
 2350              	.LASF61:
 2351 024f 47656E65 		.ascii	"Generated_Source\\PSoC4\\PM_ADC.c\000"
 2351      72617465 
 2351      645F536F 
 2351      75726365 
 2351      5C50536F 
 2352              	.LASF17:
 2353 026f 696E7436 		.ascii	"int64\000"
 2353      3400
 2354              	.LASF15:
 2355 0275 666C6F61 		.ascii	"float\000"
 2355      7400
 2356              	.LASF42:
 2357 027b 68696768 		.ascii	"highLimit\000"
 2357      4C696D69 
 2357      7400
 2358              	.LASF1:
 2359 0285 756E7369 		.ascii	"unsigned char\000"
 2359      676E6564 
 2359      20636861 
 2359      7200
 2360              	.LASF2:
 2361 0293 73686F72 		.ascii	"short int\000"
 2361      7420696E 
 2361      7400
 2362              	.LASF48:
 2363 029d 61646347 		.ascii	"adcGain\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 60


 2363      61696E00 
 2364              	.LASF31:
 2365 02a5 504D5F41 		.ascii	"PM_ADC_IsEndConversion\000"
 2365      44435F49 
 2365      73456E64 
 2365      436F6E76 
 2365      65727369 
 2366              	.LASF22:
 2367 02bc 63684E75 		.ascii	"chNum\000"
 2367      6D00
 2368              	.LASF26:
 2369 02c2 504D5F41 		.ascii	"PM_ADC_Enable\000"
 2369      44435F45 
 2369      6E61626C 
 2369      6500
 2370              	.LASF34:
 2371 02d0 6368616E 		.ascii	"chan\000"
 2371      00
 2372              	.LASF18:
 2373 02d5 63686172 		.ascii	"char\000"
 2373      00
 2374              	.LASF43:
 2375 02da 504D5F41 		.ascii	"PM_ADC_SetLimitMask\000"
 2375      44435F53 
 2375      65744C69 
 2375      6D69744D 
 2375      61736B00 
 2376              	.LASF46:
 2377 02ee 6F666673 		.ascii	"offset\000"
 2377      657400
 2378              	.LASF50:
 2379 02f5 61646343 		.ascii	"adcCounts\000"
 2379      6F756E74 
 2379      7300
 2380              	.LASF52:
 2381 02ff 504D5F41 		.ascii	"PM_ADC_CountsTo_uVolts\000"
 2381      44435F43 
 2381      6F756E74 
 2381      73546F5F 
 2381      75566F6C 
 2382              	.LASF62:
 2383 0316 433A5C55 		.ascii	"C:\\Users\\alexport\\OneDrive - Safeguard Analytics"
 2383      73657273 
 2383      5C616C65 
 2383      78706F72 
 2383      745C4F6E 
 2384 0346 5C53412D 		.ascii	"\\SA-220\\SA-220.cydsn\000"
 2384      3232305C 
 2384      53412D32 
 2384      32302E63 
 2384      7964736E 
 2385              	.LASF30:
 2386 035b 73746174 		.ascii	"status\000"
 2386      757300
 2387              	.LASF28:
 2388 0362 504D5F41 		.ascii	"PM_ADC_StartConvert\000"
 2388      44435F53 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccH3icja.s 			page 61


 2388      74617274 
 2388      436F6E76 
 2388      65727400 
 2389              	.LASF12:
 2390 0376 696E7431 		.ascii	"int16\000"
 2390      3600
 2391              	.LASF56:
 2392 037c 504D5F41 		.ascii	"PM_ADC_channelsConfig\000"
 2392      44435F63 
 2392      68616E6E 
 2392      656C7343 
 2392      6F6E6669 
 2393              	.LASF27:
 2394 0392 504D5F41 		.ascii	"PM_ADC_Stop\000"
 2394      44435F53 
 2394      746F7000 
 2395              	.LASF57:
 2396 039e 504D5F41 		.ascii	"PM_ADC_initVar\000"
 2396      44435F69 
 2396      6E697456 
 2396      617200
 2397              	.LASF32:
 2398 03ad 504D5F41 		.ascii	"PM_ADC_GetResult16\000"
 2398      44435F47 
 2398      65745265 
 2398      73756C74 
 2398      313600
 2399              	.LASF35:
 2400 03c0 72657375 		.ascii	"result\000"
 2400      6C7400
 2401              	.LASF41:
 2402 03c7 504D5F41 		.ascii	"PM_ADC_SetHighLimit\000"
 2402      44435F53 
 2402      65744869 
 2402      67684C69 
 2402      6D697400 
 2403              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
