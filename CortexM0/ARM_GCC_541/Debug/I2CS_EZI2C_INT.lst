ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2CS_EZI2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2CS_EZI2C_STRETCH_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	I2CS_EZI2C_STRETCH_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	I2CS_EZI2C_STRETCH_ISR, %function
  25              	I2CS_EZI2C_STRETCH_ISR:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\I2CS_EZI2C_INT.c"
   1:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * \file I2CS_EZI2C_INT.c
   3:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * \version 4.0
   4:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** #include "I2CS_PVT.h"
  20:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** #include "I2CS_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** #if(I2CS_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     * Function Name: I2CS_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 2


  31:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     CY_ISR_PROTO(I2CS_EZI2C_STRETCH_ISR)
  33:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  34:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #ifdef I2CS_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         I2CS_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #endif /* I2CS_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #if(I2CS_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         static volatile uint8 * I2CS_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         static uint16 I2CS_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         static uint16 I2CS_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         ackResponse = I2CS_EZI2C_ACK_RECEIVED_ADDRESS;
  59:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #endif /* (I2CS_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #if !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         if(NULL != I2CS_customIntrHandler)
  40              		.loc 1 62 0
  41 0006 C74B     		ldr	r3, .L40
  42 0008 1B68     		ldr	r3, [r3]
  43 000a 002B     		cmp	r3, #0
  44 000c 02D0     		beq	.L2
  63:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_customIntrHandler();
  45              		.loc 1 64 0
  46 000e C54B     		ldr	r3, .L40
  47 0010 1B68     		ldr	r3, [r3]
  48 0012 9847     		blx	r3
  49              	.L2:
  65:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         }
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 3


  66:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         CY_I2CS_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER) */
  69:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         locIndex = I2CS_EZI2C_GET_INDEX(activeAddress);
  50              		.loc 1 71 0
  51 0014 C44B     		ldr	r3, .L40+4
  52 0016 1B88     		ldrh	r3, [r3]
  53 0018 FB61     		str	r3, [r7, #28]
  72:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         locIntrSlave = I2CS_GetSlaveInterruptSource();
  54              		.loc 1 74 0
  55 001a C44B     		ldr	r3, .L40+8
  56 001c 1B68     		ldr	r3, [r3]
  57 001e FB60     		str	r3, [r7, #12]
  75:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         locIntrCause = I2CS_GetInterruptCause();
  58              		.loc 1 75 0
  59 0020 C34B     		ldr	r3, .L40+12
  60 0022 1B68     		ldr	r3, [r3]
  61 0024 BB60     		str	r3, [r7, #8]
  76:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         if(0u != (locIntrSlave & (I2CS_INTR_SLAVE_I2C_ARB_LOST |
  62              		.loc 1 81 0
  63 0026 FA68     		ldr	r2, [r7, #12]
  64 0028 0223     		movs	r3, #2
  65 002a FF33     		adds	r3, r3, #255
  66 002c 1340     		ands	r3, r2
  67 002e 49D0     		beq	.L3
  82:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                   I2CS_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_CTRL_REG &= (uint32) ~I2CS_CTRL_ENABLED; /* Disable SCB block */
  68              		.loc 1 84 0
  69 0030 C04B     		ldr	r3, .L40+16
  70 0032 C04A     		ldr	r2, .L40+16
  71 0034 1268     		ldr	r2, [r2]
  72 0036 5200     		lsls	r2, r2, #1
  73 0038 5208     		lsrs	r2, r2, #1
  74 003a 1A60     		str	r2, [r3]
  85:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         #if(I2CS_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             if(0u != ((uint8) I2CS_EZI2C_STATUS_BUSY & I2CS_curStatus))
  88:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         #endif /* (I2CS_CY_SCBIP_V0) */
  89:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 I2CS_curStatus &= (uint8) ~I2CS_EZI2C_STATUS_BUSY;
  75              		.loc 1 90 0
  76 003c BE4B     		ldr	r3, .L40+20
  77 003e 1B78     		ldrb	r3, [r3]
  78 0040 DBB2     		uxtb	r3, r3
  79 0042 2022     		movs	r2, #32
  80 0044 9343     		bics	r3, r2
  81 0046 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 4


  82 0048 BB4B     		ldr	r3, .L40+20
  83 004a 1A70     		strb	r2, [r3]
  91:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 I2CS_curStatus |= (uint8)  I2CS_EZI2C_STATUS_ERR;
  84              		.loc 1 91 0
  85 004c BA4B     		ldr	r3, .L40+20
  86 004e 1B78     		ldrb	r3, [r3]
  87 0050 DBB2     		uxtb	r3, r3
  88 0052 1022     		movs	r2, #16
  89 0054 1343     		orrs	r3, r2
  90 0056 DAB2     		uxtb	r2, r3
  91 0058 B74B     		ldr	r3, .L40+20
  92 005a 1A70     		strb	r2, [r3]
  92:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 if(0u == (I2CS_GetTxInterruptMode() & I2CS_INTR_TX_EMPTY))
  93              		.loc 1 94 0
  94 005c B74B     		ldr	r3, .L40+24
  95 005e 1B68     		ldr	r3, [r3]
  96 0060 1022     		movs	r2, #16
  97 0062 1340     		ands	r3, r2
  98 0064 0FD1     		bne	.L4
  95:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(I2CS_indexBuf1 != I2CS_offsetBuf1)
  99              		.loc 1 97 0
 100 0066 B64B     		ldr	r3, .L40+28
 101 0068 1B78     		ldrb	r3, [r3]
 102 006a 9AB2     		uxth	r2, r3
 103 006c AE4B     		ldr	r3, .L40+4
 104 006e 1B88     		ldrh	r3, [r3]
 105 0070 9A42     		cmp	r2, r3
 106 0072 10D0     		beq	.L6
  98:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_curStatus |= (uint8) I2CS_INTR_SLAVE_I2C_WRITE_STOP;
 107              		.loc 1 99 0
 108 0074 B04B     		ldr	r3, .L40+20
 109 0076 1B78     		ldrb	r3, [r3]
 110 0078 DBB2     		uxtb	r3, r3
 111 007a 0822     		movs	r2, #8
 112 007c 1343     		orrs	r3, r2
 113 007e DAB2     		uxtb	r2, r3
 114 0080 AD4B     		ldr	r3, .L40+20
 115 0082 1A70     		strb	r2, [r3]
 116 0084 07E0     		b	.L6
 117              	.L4:
 100:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 104:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_curStatus |= (uint8) I2CS_INTR_SLAVE_I2C_NACK;
 118              		.loc 1 105 0
 119 0086 AC4B     		ldr	r3, .L40+20
 120 0088 1B78     		ldrb	r3, [r3]
 121 008a DBB2     		uxtb	r3, r3
 122 008c 0222     		movs	r2, #2
 123 008e 1343     		orrs	r3, r2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 5


 124 0090 DAB2     		uxtb	r2, r3
 125 0092 A94B     		ldr	r3, .L40+20
 126 0094 1A70     		strb	r2, [r3]
 127              	.L6:
 106:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_DISABLE_SLAVE_AUTO_DATA;
 128              		.loc 1 109 0
 129 0096 AB4B     		ldr	r3, .L40+32
 130 0098 AA4A     		ldr	r2, .L40+32
 131 009a 1268     		ldr	r2, [r2]
 132 009c AA49     		ldr	r1, .L40+36
 133 009e 0A40     		ands	r2, r1
 134 00a0 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_SetRxInterruptMode(I2CS_NO_INTR_SOURCES);
 135              		.loc 1 112 0
 136 00a2 AA4B     		ldr	r3, .L40+40
 137 00a4 0022     		movs	r2, #0
 138 00a6 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_SetTxInterruptMode(I2CS_NO_INTR_SOURCES);
 139              		.loc 1 113 0
 140 00a8 A44B     		ldr	r3, .L40+24
 141 00aa 0022     		movs	r2, #0
 142 00ac 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         #if(I2CS_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_ClearRxInterruptSource(I2CS_INTR_RX_ALL);
 118:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_ClearSlaveInterruptSource(I2CS_INTR_SLAVE_ALL);
 119:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         #endif /* (I2CS_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_fsmState = I2CS_EZI2C_FSM_IDLE;
 143              		.loc 1 121 0
 144 00ae A84B     		ldr	r3, .L40+44
 145 00b0 0022     		movs	r2, #0
 146 00b2 1A70     		strb	r2, [r3]
 122:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             I2CS_CTRL_REG |= (uint32) I2CS_CTRL_ENABLED;  /* Enable SCB block */
 147              		.loc 1 123 0
 148 00b4 9F4B     		ldr	r3, .L40+16
 149 00b6 9F4A     		ldr	r2, .L40+16
 150 00b8 1268     		ldr	r2, [r2]
 151 00ba 8021     		movs	r1, #128
 152 00bc 0906     		lsls	r1, r1, #24
 153 00be 0A43     		orrs	r2, r1
 154 00c0 1A60     		str	r2, [r3]
 155 00c2 9DE1     		b	.L7
 156              	.L3:
 124:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CS_INTR_CAUSE_I2C_EC))
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 6


 157              		.loc 1 129 0
 158 00c4 BB68     		ldr	r3, [r7, #8]
 159 00c6 1022     		movs	r2, #16
 160 00c8 1340     		ands	r3, r2
 161 00ca 02D0     		beq	.L8
 130:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 I2CS_SetI2CExtClkInterruptMode(I2CS_NO_INTR_SOURCES);
 162              		.loc 1 132 0
 163 00cc A14B     		ldr	r3, .L40+48
 164 00ce 0022     		movs	r2, #0
 165 00d0 1A60     		str	r2, [r3]
 166              	.L8:
 133:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             if(0u != (locIntrCause & (I2CS_INTR_CAUSE_RX | I2CS_INTR_CAUSE_SLAVE)))
 167              		.loc 1 135 0
 168 00d2 BB68     		ldr	r3, [r7, #8]
 169 00d4 0A22     		movs	r2, #10
 170 00d6 1340     		ands	r3, r2
 171 00d8 00D1     		bne	.LCB133
 172 00da C5E0     		b	.L9	@long jump
 173              	.LCB133:
 136:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 if (0u != (I2CS_GetRxInterruptSourceMasked() & I2CS_INTR_RX_NOT_EMPTY))
 174              		.loc 1 139 0
 175 00dc 9E4B     		ldr	r3, .L40+52
 176 00de 1B68     		ldr	r3, [r3]
 177 00e0 0422     		movs	r2, #4
 178 00e2 1340     		ands	r3, r2
 179 00e4 00D1     		bne	.LCB139
 180 00e6 71E0     		b	.L10	@long jump
 181              	.LCB139:
 140:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 #if(I2CS_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     */
 146:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if (0u == (locIntrCause & I2CS_INTR_CAUSE_SLAVE))
 147:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 #endif /* (I2CS_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locByte = I2CS_RX_FIFO_RD_REG;
 182              		.loc 1 149 0
 183 00e8 9C4B     		ldr	r3, .L40+56
 184 00ea 1B68     		ldr	r3, [r3]
 185 00ec 7B60     		str	r3, [r7, #4]
 150:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         switch(I2CS_fsmState)
 186              		.loc 1 151 0
 187 00ee 984B     		ldr	r3, .L40+44
 188 00f0 1B78     		ldrb	r3, [r3]
 189 00f2 002B     		cmp	r3, #0
 190 00f4 1DD0     		beq	.L12
 191 00f6 012B     		cmp	r3, #1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 7


 192 00f8 60D1     		bne	.L39
 152:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         case I2CS_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             if(0u != locBufSize)
 193              		.loc 1 154 0
 194 00fa 994B     		ldr	r3, .L40+60
 195 00fc 1B88     		ldrh	r3, [r3]
 196 00fe 002B     		cmp	r3, #0
 197 0100 13D0     		beq	.L14
 155:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_I2C_SLAVE_GENERATE_ACK;
 198              		.loc 1 157 0
 199 0102 984B     		ldr	r3, .L40+64
 200 0104 0122     		movs	r2, #1
 201 0106 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_dataBuffer1[locIndex] = (uint8) locByte;
 202              		.loc 1 159 0
 203 0108 974B     		ldr	r3, .L40+68
 204 010a 1A68     		ldr	r2, [r3]
 205 010c FB69     		ldr	r3, [r7, #28]
 206 010e D318     		adds	r3, r2, r3
 207 0110 7A68     		ldr	r2, [r7, #4]
 208 0112 D2B2     		uxtb	r2, r2
 209 0114 1A70     		strb	r2, [r3]
 160:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 locIndex++;
 210              		.loc 1 160 0
 211 0116 FB69     		ldr	r3, [r7, #28]
 212 0118 0133     		adds	r3, r3, #1
 213 011a FB61     		str	r3, [r7, #28]
 161:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 locBufSize--;
 214              		.loc 1 161 0
 215 011c 904B     		ldr	r3, .L40+60
 216 011e 1B88     		ldrh	r3, [r3]
 217 0120 013B     		subs	r3, r3, #1
 218 0122 9AB2     		uxth	r2, r3
 219 0124 8E4B     		ldr	r3, .L40+60
 220 0126 1A80     		strh	r2, [r3]
 162:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_I2C_SLAVE_GENERATE_NACK;
 167:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             break;
 221              		.loc 1 168 0
 222 0128 4CE0     		b	.L16
 223              	.L14:
 166:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 224              		.loc 1 166 0
 225 012a 8E4B     		ldr	r3, .L40+64
 226 012c 0222     		movs	r2, #2
 227 012e 1A60     		str	r2, [r3]
 228              		.loc 1 168 0
 229 0130 48E0     		b	.L16
 230              	.L12:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 8


 169:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if(I2CS_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         case I2CS_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_I2C_SLAVE_GENERATE_ACK;
 174:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 177:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_fsmState = I2CS_EZI2C_FSM_OFFSET_LO8;
 179:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             break;
 181:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif /* (I2CS_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         case I2CS_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 185:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             #if (I2CS_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 189:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             if(locByte < (uint32) I2CS_bufSizeBuf1)
 231              		.loc 1 193 0
 232 0132 8E4B     		ldr	r3, .L40+72
 233 0134 1B88     		ldrh	r3, [r3]
 234 0136 1A00     		movs	r2, r3
 235 0138 7B68     		ldr	r3, [r7, #4]
 236 013a 9A42     		cmp	r2, r3
 237 013c 3AD9     		bls	.L17
 194:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_I2C_SLAVE_GENERATE_ACK;
 238              		.loc 1 195 0
 239 013e 894B     		ldr	r3, .L40+64
 240 0140 0122     		movs	r2, #1
 241 0142 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 locIndex = locByte;
 242              		.loc 1 198 0
 243 0144 7B68     		ldr	r3, [r7, #4]
 244 0146 FB61     		str	r3, [r7, #28]
 199:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < I2CS_protectBuf1) ?
 245              		.loc 1 201 0
 246 0148 894B     		ldr	r3, .L40+76
 247 014a 1B88     		ldrh	r3, [r3]
 248 014c 1A00     		movs	r2, r3
 249 014e 7B68     		ldr	r3, [r7, #4]
 250 0150 9A42     		cmp	r2, r3
 251 0152 06D9     		bls	.L18
 252              		.loc 1 201 0 is_stmt 0 discriminator 1
 253 0154 864B     		ldr	r3, .L40+76
 254 0156 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 9


 255 0158 7B68     		ldr	r3, [r7, #4]
 256 015a 9BB2     		uxth	r3, r3
 257 015c D31A     		subs	r3, r2, r3
 258 015e 9AB2     		uxth	r2, r3
 259 0160 00E0     		b	.L19
 260              	.L18:
 261              		.loc 1 201 0 discriminator 2
 262 0162 0022     		movs	r2, #0
 263              	.L19:
 264              		.loc 1 201 0 discriminator 4
 265 0164 7E4B     		ldr	r3, .L40+60
 266 0166 1A80     		strh	r2, [r3]
 202:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                                        (I2CS_protectBuf1 - locByte) : (0u));
 203:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             #if(I2CS_CY_SCBIP_V0)
 205:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 if(locBufSize < I2CS_EZI2C_FIFO_SIZE)
 207:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_fsmState = I2CS_EZI2C_FSM_BYTE_WRITE;
 210:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 }
 211:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 else if(locBufSize == I2CS_EZI2C_FIFO_SIZE)
 213:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 215:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_SetRxInterruptMode(I2CS_NO_INTR_SOURCES);
 216:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is ful
 220:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_SetRxInterruptMode(I2CS_INTR_RX_FULL);
 221:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 #if(I2CS_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 {
 227:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     I2CS_fsmState = I2CS_EZI2C_FSM_BYTE_WRITE;
 231:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     if (locBufSize < I2CS_EZI2C_FIFO_SIZE)
 267              		.loc 1 234 0 is_stmt 1 discriminator 4
 268 0168 7D4B     		ldr	r3, .L40+60
 269 016a 1B88     		ldrh	r3, [r3]
 270 016c 072B     		cmp	r3, #7
 271 016e 03D8     		bhi	.L20
 235:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         I2CS_fsmState = I2CS_EZI2C_FSM_BYTE_WRITE;
 272              		.loc 1 237 0
 273 0170 774B     		ldr	r3, .L40+44
 274 0172 0122     		movs	r2, #1
 275 0174 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 10


 276 0176 18E0     		b	.L21
 277              	.L20:
 238:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 240:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     else if (locBufSize == I2CS_EZI2C_FIFO_SIZE)
 278              		.loc 1 240 0
 279 0178 794B     		ldr	r3, .L40+60
 280 017a 1B88     		ldrh	r3, [r3]
 281 017c 082B     		cmp	r3, #8
 282 017e 0AD1     		bne	.L22
 241:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         I2CS_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full *
 283              		.loc 1 242 0
 284 0180 704B     		ldr	r3, .L40+32
 285 0182 704A     		ldr	r2, .L40+32
 286 0184 1268     		ldr	r2, [r2]
 287 0186 A021     		movs	r1, #160
 288 0188 0902     		lsls	r1, r1, #8
 289 018a 0A43     		orrs	r2, r1
 290 018c 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         I2CS_SetRxInterruptMode(I2CS_NO_INTR_SOURCES);
 291              		.loc 1 243 0
 292 018e 6F4B     		ldr	r3, .L40+40
 293 0190 0022     		movs	r2, #0
 294 0192 1A60     		str	r2, [r3]
 295 0194 09E0     		b	.L21
 296              	.L22:
 244:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     {
 247:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         I2CS_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is
 297              		.loc 1 247 0
 298 0196 6B4B     		ldr	r3, .L40+32
 299 0198 6A4A     		ldr	r2, .L40+32
 300 019a 1268     		ldr	r2, [r2]
 301 019c 8021     		movs	r1, #128
 302 019e 8901     		lsls	r1, r1, #6
 303 01a0 0A43     		orrs	r2, r1
 304 01a2 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                         I2CS_SetRxInterruptMode(I2CS_INTR_RX_FULL);
 305              		.loc 1 248 0
 306 01a4 694B     		ldr	r3, .L40+40
 307 01a6 0822     		movs	r2, #8
 308 01a8 1A60     		str	r2, [r3]
 309              	.L21:
 249:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             #endif /* (I2CS_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_EZI2C_SET_OFFSET(activeAddress, locIndex);
 310              		.loc 1 256 0
 311 01aa FB69     		ldr	r3, [r7, #28]
 312 01ac DAB2     		uxtb	r2, r3
 313 01ae 644B     		ldr	r3, .L40+28
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 11


 314 01b0 1A70     		strb	r2, [r3]
 257:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 I2CS_I2C_SLAVE_GENERATE_NACK;
 262:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             break;
 315              		.loc 1 263 0
 316 01b2 07E0     		b	.L16
 317              	.L17:
 261:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 318              		.loc 1 261 0
 319 01b4 6B4B     		ldr	r3, .L40+64
 320 01b6 0222     		movs	r2, #2
 321 01b8 1A60     		str	r2, [r3]
 322              		.loc 1 263 0
 323 01ba 03E0     		b	.L16
 324              	.L39:
 264:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 325              		.loc 1 266 0
 326 01bc 0020     		movs	r0, #0
 327 01be FFF7FEFF 		bl	CyHalt
 267:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             break;
 328              		.loc 1 267 0
 329 01c2 C046     		nop
 330              	.L16:
 268:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearRxInterruptSource(I2CS_INTR_RX_NOT_EMPTY);
 331              		.loc 1 270 0
 332 01c4 6B4B     		ldr	r3, .L40+80
 333 01c6 0422     		movs	r2, #4
 334 01c8 1A60     		str	r2, [r3]
 335 01ca 4DE0     		b	.L9
 336              	.L10:
 271:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 else if (0u != (I2CS_I2C_CTRL_REG & I2CS_I2C_CTRL_S_READY_DATA_ACK))
 337              		.loc 1 275 0
 338 01cc 5D4B     		ldr	r3, .L40+32
 339 01ce 1A68     		ldr	r2, [r3]
 340 01d0 8023     		movs	r3, #128
 341 01d2 9B01     		lsls	r3, r3, #6
 342 01d4 1340     		ands	r3, r2
 343 01d6 47D0     		beq	.L9
 276:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(0u != (locIntrCause & I2CS_INTR_CAUSE_SLAVE))
 344              		.loc 1 281 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 12


 345 01d8 BB68     		ldr	r3, [r7, #8]
 346 01da 0222     		movs	r2, #2
 347 01dc 1340     		ands	r3, r2
 348 01de 0DD0     		beq	.L24
 282:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 283:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         fifoIndex = I2CS_GET_RX_FIFO_ENTRIES;
 349              		.loc 1 284 0
 350 01e0 654B     		ldr	r3, .L40+84
 351 01e2 1B68     		ldr	r3, [r3]
 352 01e4 1F22     		movs	r2, #31
 353 01e6 1340     		ands	r3, r2
 354 01e8 3B61     		str	r3, [r7, #16]
 285:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         #if(I2CS_SECONDARY_ADDRESS_ENABLE)
 287:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             if(I2CS_CHECK_INTR_SLAVE_MASKED(I2CS_INTR_SLAVE_I2C_ADDR_MATCH))
 290:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 fifoIndex = I2CS_GET_RX_FIFO_ENTRIES;
 293:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                 fifoIndex -= ((0u != I2CS_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 299:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         #endif
 302:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_DISABLE_SLAVE_AUTO_DATA;
 355              		.loc 1 303 0
 356 01ea 564B     		ldr	r3, .L40+32
 357 01ec 554A     		ldr	r2, .L40+32
 358 01ee 1268     		ldr	r2, [r2]
 359 01f0 5549     		ldr	r1, .L40+36
 360 01f2 0A40     		ands	r2, r1
 361 01f4 1A60     		str	r2, [r3]
 304:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         endTransfer = I2CS_EZI2C_CONTINUE_TRANSFER;
 362              		.loc 1 304 0
 363 01f6 0123     		movs	r3, #1
 364 01f8 7B61     		str	r3, [r7, #20]
 365 01fa 22E0     		b	.L27
 366              	.L24:
 305:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 309:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locBufSize -= (uint16) I2CS_EZI2C_FIFO_SIZE;
 367              		.loc 1 311 0
 368 01fc 584B     		ldr	r3, .L40+60
 369 01fe 1B88     		ldrh	r3, [r3]
 370 0200 083B     		subs	r3, r3, #8
 371 0202 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 13


 372 0204 564B     		ldr	r3, .L40+60
 373 0206 1A80     		strh	r2, [r3]
 312:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         if(locBufSize <= I2CS_EZI2C_FIFO_SIZE)
 374              		.loc 1 313 0
 375 0208 554B     		ldr	r3, .L40+60
 376 020a 1B88     		ldrh	r3, [r3]
 377 020c 082B     		cmp	r3, #8
 378 020e 05D8     		bhi	.L26
 314:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 379              		.loc 1 316 0
 380 0210 534B     		ldr	r3, .L40+60
 381 0212 1B88     		ldrh	r3, [r3]
 382 0214 3B61     		str	r3, [r7, #16]
 317:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             endTransfer = I2CS_EZI2C_COMPLETE_TRANSFER;
 383              		.loc 1 317 0
 384 0216 0023     		movs	r3, #0
 385 0218 7B61     		str	r3, [r7, #20]
 386 021a 12E0     		b	.L27
 387              	.L26:
 318:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             fifoIndex   = I2CS_EZI2C_FIFO_SIZE;
 388              		.loc 1 322 0
 389 021c 0823     		movs	r3, #8
 390 021e 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             endTransfer = I2CS_EZI2C_CONTINUE_TRANSFER;
 391              		.loc 1 323 0
 392 0220 0123     		movs	r3, #1
 393 0222 7B61     		str	r3, [r7, #20]
 324:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 326:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 394              		.loc 1 327 0
 395 0224 0DE0     		b	.L27
 396              	.L28:
 328:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_dataBuffer1[locIndex] = (uint8) I2CS_RX_FIFO_RD_REG;
 397              		.loc 1 330 0 discriminator 2
 398 0226 504B     		ldr	r3, .L40+68
 399 0228 1A68     		ldr	r2, [r3]
 400 022a FB69     		ldr	r3, [r7, #28]
 401 022c D218     		adds	r2, r2, r3
 402 022e 4B4B     		ldr	r3, .L40+56
 403 0230 1B68     		ldr	r3, [r3]
 404 0232 DBB2     		uxtb	r3, r3
 405 0234 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locIndex++;
 406              		.loc 1 331 0 discriminator 2
 407 0236 FB69     		ldr	r3, [r7, #28]
 408 0238 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 14


 409 023a FB61     		str	r3, [r7, #28]
 327:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 410              		.loc 1 327 0 discriminator 2
 411 023c 3B69     		ldr	r3, [r7, #16]
 412 023e 013B     		subs	r3, r3, #1
 413 0240 3B61     		str	r3, [r7, #16]
 414              	.L27:
 327:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 415              		.loc 1 327 0 is_stmt 0 discriminator 1
 416 0242 3B69     		ldr	r3, [r7, #16]
 417 0244 002B     		cmp	r3, #0
 418 0246 EED1     		bne	.L28
 332:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(I2CS_EZI2C_COMPLETE_TRANSFER == endTransfer)
 419              		.loc 1 335 0 is_stmt 1
 420 0248 7B69     		ldr	r3, [r7, #20]
 421 024a 002B     		cmp	r3, #0
 422 024c 09D1     		bne	.L29
 336:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ENABLE_SLAVE_AUTO_DATA_NACK;
 423              		.loc 1 337 0
 424 024e 3D4B     		ldr	r3, .L40+32
 425 0250 3C4A     		ldr	r2, .L40+32
 426 0252 1268     		ldr	r2, [r2]
 427 0254 8021     		movs	r1, #128
 428 0256 0902     		lsls	r1, r1, #8
 429 0258 0A43     		orrs	r2, r1
 430 025a 1A60     		str	r2, [r3]
 338:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_SetRxInterruptMode(I2CS_NO_INTR_SOURCES);
 431              		.loc 1 340 0
 432 025c 3B4B     		ldr	r3, .L40+40
 433 025e 0022     		movs	r2, #0
 434 0260 1A60     		str	r2, [r3]
 435              	.L29:
 341:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_ClearRxInterruptSource(I2CS_INTR_RX_FULL |
 436              		.loc 1 343 0
 437 0262 444B     		ldr	r3, .L40+80
 438 0264 0C22     		movs	r2, #12
 439 0266 1A60     		str	r2, [r3]
 440              	.L9:
 344:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                                                             I2CS_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 350:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             if(0u != (locIntrCause & I2CS_INTR_CAUSE_SLAVE))
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 15


 441              		.loc 1 354 0
 442 0268 BB68     		ldr	r3, [r7, #8]
 443 026a 0222     		movs	r2, #2
 444 026c 1340     		ands	r3, r2
 445 026e 00D1     		bne	.LCB382
 446 0270 9FE0     		b	.L30	@long jump
 447              	.LCB382:
 355:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             #if(!I2CS_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2CS_INTR_SLAVE_I2C_STOP))
 448              		.loc 1 359 0
 449 0272 FB68     		ldr	r3, [r7, #12]
 450 0274 1022     		movs	r2, #16
 451 0276 1340     		ands	r3, r2
 452 0278 27D0     		beq	.L31
 360:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 if((0u != (locIntrSlave & I2CS_INTR_SLAVE_I2C_STOP)) &&
 363:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                    (0u != ((uint8) I2CS_EZI2C_STATUS_BUSY & I2CS_curStatus)))
 364:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_SetRxInterruptMode(I2CS_NO_INTR_SOURCES);
 453              		.loc 1 367 0
 454 027a 344B     		ldr	r3, .L40+40
 455 027c 0022     		movs	r2, #0
 456 027e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_SetTxInterruptMode(I2CS_NO_INTR_SOURCES);
 457              		.loc 1 368 0
 458 0280 2E4B     		ldr	r3, .L40+24
 459 0282 0022     		movs	r2, #0
 460 0284 1A60     		str	r2, [r3]
 369:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     locStatus = I2CS_INTR_SLAVE_I2C_NACK;
 461              		.loc 1 371 0
 462 0286 0223     		movs	r3, #2
 463 0288 BB61     		str	r3, [r7, #24]
 372:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(locIndex != I2CS_EZI2C_GET_OFFSET(activeAddress))
 464              		.loc 1 374 0
 465 028a 2D4B     		ldr	r3, .L40+28
 466 028c 1B78     		ldrb	r3, [r3]
 467 028e 1A00     		movs	r2, r3
 468 0290 FB69     		ldr	r3, [r7, #28]
 469 0292 9A42     		cmp	r2, r3
 470 0294 03D0     		beq	.L32
 375:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locStatus |= I2CS_INTR_SLAVE_I2C_WRITE_STOP;
 471              		.loc 1 376 0
 472 0296 BB69     		ldr	r3, [r7, #24]
 473 0298 0822     		movs	r2, #8
 474 029a 1343     		orrs	r3, r2
 475 029c BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 16


 476              	.L32:
 377:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 379:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 477              		.loc 1 380 0
 478 029e BB69     		ldr	r3, [r7, #24]
 479 02a0 FA68     		ldr	r2, [r7, #12]
 480 02a2 1340     		ands	r3, r2
 481 02a4 BB61     		str	r3, [r7, #24]
 381:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 382:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     locStatus |= (uint32)  I2CS_curStatus;
 482              		.loc 1 382 0
 483 02a6 244B     		ldr	r3, .L40+20
 484 02a8 1B78     		ldrb	r3, [r3]
 485 02aa DBB2     		uxtb	r3, r3
 486 02ac 1A00     		movs	r2, r3
 487 02ae BB69     		ldr	r3, [r7, #24]
 488 02b0 1343     		orrs	r3, r2
 489 02b2 BB61     		str	r3, [r7, #24]
 383:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     locStatus &= (uint32) ~I2CS_EZI2C_STATUS_BUSY;
 490              		.loc 1 383 0
 491 02b4 BB69     		ldr	r3, [r7, #24]
 492 02b6 2022     		movs	r2, #32
 493 02b8 9343     		bics	r3, r2
 494 02ba BB61     		str	r3, [r7, #24]
 384:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_curStatus = (uint8) locStatus;
 495              		.loc 1 384 0
 496 02bc BB69     		ldr	r3, [r7, #24]
 497 02be DAB2     		uxtb	r2, r3
 498 02c0 1D4B     		ldr	r3, .L40+20
 499 02c2 1A70     		strb	r2, [r3]
 385:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     I2CS_fsmState = I2CS_EZI2C_FSM_IDLE;
 500              		.loc 1 386 0
 501 02c4 224B     		ldr	r3, .L40+44
 502 02c6 0022     		movs	r2, #0
 503 02c8 1A70     		strb	r2, [r3]
 504              	.L31:
 387:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if(I2CS_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_EZI2C_SET_INDEX(activeAddress, locIndex);
 392:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 395:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2CS_INTR_SLAVE_I2C_ADDR_MATCH))
 505              		.loc 1 401 0
 506 02ca FB68     		ldr	r3, [r7, #12]
 507 02cc 4022     		movs	r2, #64
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 17


 508 02ce 1340     		ands	r3, r2
 509 02d0 6CD0     		beq	.L33
 402:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 403:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if(I2CS_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locByte = I2CS_GET_I2C_7BIT_ADDRESS(I2CS_RX_FIFO_RD_REG);
 407:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearRxInterruptSource(I2CS_INTR_RX_NOT_EMPTY);
 409:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         if(I2CS_addrBuf1 == locByte)
 412:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_dataBuffer = I2CS_dataBuffer1;
 415:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_bufSizeBuf = I2CS_bufSizeBuf1;
 416:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_protectBuf = I2CS_protectBuf1;
 417:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             activeAddress = I2CS_EZI2C_ACTIVE_ADDRESS1;
 419:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         else if(I2CS_addrBuf2 == locByte)
 421:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 422:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 423:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_dataBuffer = I2CS_dataBuffer2;
 424:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_bufSizeBuf = I2CS_bufSizeBuf2;
 425:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_protectBuf = I2CS_protectBuf2;
 426:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             activeAddress = I2CS_EZI2C_ACTIVE_ADDRESS2;
 428:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             ackResponse = I2CS_EZI2C_NACK_RECEIVED_ADDRESS;
 433:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 #if(I2CS_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(I2CS_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 439:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearI2CExtClkInterruptSource(I2CS_INTR_I2C_EC_WAKE_UP);
 442:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearSlaveInterruptSource(I2CS_INTR_SLAVE_ALL);
 443:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if(!I2CS_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_DISABLE_INTR_SLAVE(I2CS_INTR_SLAVE_I2C_STOP);
 447:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif /* (!I2CS_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_I2C_SLAVE_GENERATE_NACK;
 451:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 #endif /* (I2CS_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if(I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 18


 457:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         if(!I2CS_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 460:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_dataBuffer = I2CS_dataBuffer1;
 461:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_bufSizeBuf = I2CS_bufSizeBuf1;
 462:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_protectBuf = I2CS_protectBuf1;
 463:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             activeAddress = I2CS_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_curStatus |= (uint8) I2CS_EZI2C_STATUS_BUSY;
 510              		.loc 1 469 0
 511 02d2 194B     		ldr	r3, .L40+20
 512 02d4 1B78     		ldrb	r3, [r3]
 513 02d6 DBB2     		uxtb	r3, r3
 514 02d8 2022     		movs	r2, #32
 515 02da 1343     		orrs	r3, r2
 516 02dc DAB2     		uxtb	r2, r3
 517 02de 164B     		ldr	r3, .L40+20
 518 02e0 1A70     		strb	r2, [r3]
 470:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locIndex = I2CS_EZI2C_GET_OFFSET(activeAddress);
 519              		.loc 1 472 0
 520 02e2 174B     		ldr	r3, .L40+28
 521 02e4 1B78     		ldrb	r3, [r3]
 522 02e6 FB61     		str	r3, [r7, #28]
 473:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         if(I2CS_CHECK_I2C_STATUS(I2CS_I2C_STATUS_S_READ))
 523              		.loc 1 475 0
 524 02e8 244B     		ldr	r3, .L40+88
 525 02ea 1B68     		ldr	r3, [r3]
 526 02ec 1022     		movs	r2, #16
 527 02ee 1340     		ands	r3, r2
 528 02f0 4AD0     		beq	.L34
 476:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             locBufSize = I2CS_bufSizeBuf1 - (uint16) locIndex;
 529              		.loc 1 478 0
 530 02f2 1E4B     		ldr	r3, .L40+72
 531 02f4 1A88     		ldrh	r2, [r3]
 532 02f6 FB69     		ldr	r3, [r7, #28]
 533 02f8 9BB2     		uxth	r3, r3
 534 02fa D31A     		subs	r3, r2, r3
 535 02fc 9AB2     		uxth	r2, r3
 536 02fe 184B     		ldr	r3, .L40+60
 537 0300 1A80     		strh	r2, [r3]
 479:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_CLEAR_TX_FIFO;
 538              		.loc 1 481 0
 539 0302 1F4B     		ldr	r3, .L40+92
 540 0304 1E4A     		ldr	r2, .L40+92
 541 0306 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 19


 542 0308 8021     		movs	r1, #128
 543 030a 4902     		lsls	r1, r1, #9
 544 030c 0A43     		orrs	r2, r1
 545 030e 1A60     		str	r2, [r3]
 546 0310 1B4B     		ldr	r3, .L40+92
 547 0312 1B4A     		ldr	r2, .L40+92
 548 0314 1268     		ldr	r2, [r2]
 549 0316 1B49     		ldr	r1, .L40+96
 550 0318 0A40     		ands	r2, r1
 551 031a 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_SetTxInterruptMode(I2CS_INTR_TX_EMPTY);
 552              		.loc 1 482 0
 553 031c 074B     		ldr	r3, .L40+24
 554 031e 1022     		movs	r2, #16
 555 0320 1A60     		str	r2, [r3]
 556 0322 34E0     		b	.L35
 557              	.L41:
 558              		.align	2
 559              	.L40:
 560 0324 00000000 		.word	I2CS_customIntrHandler
 561 0328 00000000 		.word	I2CS_indexBuf1
 562 032c 400F2540 		.word	1076170560
 563 0330 000E2540 		.word	1076170240
 564 0334 00002540 		.word	1076166656
 565 0338 00000000 		.word	I2CS_curStatus
 566 033c 880F2540 		.word	1076170632
 567 0340 00000000 		.word	I2CS_offsetBuf1
 568 0344 60002540 		.word	1076166752
 569 0348 FF5FFFFF 		.word	-40961
 570 034c C80F2540 		.word	1076170696
 571 0350 00000000 		.word	I2CS_fsmState
 572 0354 880E2540 		.word	1076170376
 573 0358 CC0F2540 		.word	1076170700
 574 035c 40032540 		.word	1076167488
 575 0360 00000000 		.word	locBufSize.4971
 576 0364 6C002540 		.word	1076166764
 577 0368 00000000 		.word	I2CS_dataBuffer1
 578 036c 00000000 		.word	I2CS_bufSizeBuf1
 579 0370 00000000 		.word	I2CS_protectBuf1
 580 0374 C00F2540 		.word	1076170688
 581 0378 08032540 		.word	1076167432
 582 037c 64002540 		.word	1076166756
 583 0380 04022540 		.word	1076167172
 584 0384 FFFFFEFF 		.word	-65537
 585              	.L34:
 483:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 484:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 487:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                             I2CS_SetRxInterruptMode(I2CS_INTR_RX_NOT_EMPTY);
 586              		.loc 1 487 0
 587 0388 214B     		ldr	r3, .L42
 588 038a 0422     		movs	r2, #4
 589 038c 1A60     		str	r2, [r3]
 590              	.L35:
 488:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         }
 489:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 20


 490:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearI2CExtClkInterruptSource(I2CS_INTR_I2C_EC_WAKE_UP);
 591              		.loc 1 491 0
 592 038e 214B     		ldr	r3, .L42+4
 593 0390 0122     		movs	r2, #1
 594 0392 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ClearSlaveInterruptSource(I2CS_INTR_SLAVE_ALL);
 595              		.loc 1 492 0
 596 0394 204B     		ldr	r3, .L42+8
 597 0396 214A     		ldr	r2, .L42+12
 598 0398 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #if (!I2CS_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_ENABLE_INTR_SLAVE(I2CS_INTR_SLAVE_I2C_STOP);
 599              		.loc 1 496 0
 600 039a 214B     		ldr	r3, .L42+16
 601 039c 204A     		ldr	r2, .L42+16
 602 039e 1268     		ldr	r2, [r2]
 603 03a0 1021     		movs	r1, #16
 604 03a2 0A43     		orrs	r2, r1
 605 03a4 1A60     		str	r2, [r3]
 497:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     #endif /* (!I2CS_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         /* ACK the address byte */
 500:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_I2C_SLAVE_GENERATE_ACK;
 606              		.loc 1 500 0
 607 03a6 1F4B     		ldr	r3, .L42+20
 608 03a8 0122     		movs	r2, #1
 609 03aa 1A60     		str	r2, [r3]
 610              	.L33:
 501:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 I2CS_ClearSlaveInterruptSource(locIntrSlave);
 611              		.loc 1 505 0
 612 03ac 1A4B     		ldr	r3, .L42+8
 613 03ae FA68     		ldr	r2, [r7, #12]
 614 03b0 1A60     		str	r2, [r3]
 615              	.L30:
 506:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 511:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             if(0u != (I2CS_GetInterruptCause() & I2CS_INTR_CAUSE_TX))
 616              		.loc 1 512 0
 617 03b2 1D4B     		ldr	r3, .L42+24
 618 03b4 1B68     		ldr	r3, [r3]
 619 03b6 0422     		movs	r2, #4
 620 03b8 1340     		ands	r3, r2
 621 03ba 21D0     		beq	.L7
 622              	.L38:
 513:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 21


 515:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 do
 516:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     if(0u != locBufSize)
 623              		.loc 1 518 0
 624 03bc 1B4B     		ldr	r3, .L42+28
 625 03be 1B88     		ldrh	r3, [r3]
 626 03c0 002B     		cmp	r3, #0
 627 03c2 11D0     		beq	.L36
 519:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_TX_FIFO_WR_REG = (uint32) I2CS_dataBuffer1[locIndex];
 628              		.loc 1 520 0
 629 03c4 1A4A     		ldr	r2, .L42+32
 630 03c6 1B4B     		ldr	r3, .L42+36
 631 03c8 1968     		ldr	r1, [r3]
 632 03ca FB69     		ldr	r3, [r7, #28]
 633 03cc CB18     		adds	r3, r1, r3
 634 03ce 1B78     		ldrb	r3, [r3]
 635 03d0 DBB2     		uxtb	r3, r3
 636 03d2 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locIndex++;
 637              		.loc 1 521 0
 638 03d4 FB69     		ldr	r3, [r7, #28]
 639 03d6 0133     		adds	r3, r3, #1
 640 03d8 FB61     		str	r3, [r7, #28]
 522:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         locBufSize--;
 641              		.loc 1 522 0
 642 03da 144B     		ldr	r3, .L42+28
 643 03dc 1B88     		ldrh	r3, [r3]
 644 03de 013B     		subs	r3, r3, #1
 645 03e0 9AB2     		uxth	r2, r3
 646 03e2 124B     		ldr	r3, .L42+28
 647 03e4 1A80     		strh	r2, [r3]
 648 03e6 02E0     		b	.L37
 649              	.L36:
 523:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                         I2CS_TX_FIFO_WR_REG = I2CS_EZI2C_OVFL_RETURN;
 650              		.loc 1 526 0
 651 03e8 114B     		ldr	r3, .L42+32
 652 03ea FF22     		movs	r2, #255
 653 03ec 1A60     		str	r2, [r3]
 654              	.L37:
 527:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                     }
 528:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 }
 529:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 while(I2CS_EZI2C_FIFO_SIZE != I2CS_GET_TX_FIFO_ENTRIES);
 655              		.loc 1 529 0
 656 03ee 124B     		ldr	r3, .L42+40
 657 03f0 1B68     		ldr	r3, [r3]
 658 03f2 1F22     		movs	r2, #31
 659 03f4 1340     		ands	r3, r2
 660 03f6 082B     		cmp	r3, #8
 661 03f8 E0D1     		bne	.L38
 530:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****                 I2CS_ClearTxInterruptSource(I2CS_INTR_TX_EMPTY);
 662              		.loc 1 531 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 22


 663 03fa 104B     		ldr	r3, .L42+44
 664 03fc 1022     		movs	r2, #16
 665 03fe 1A60     		str	r2, [r3]
 666              	.L7:
 532:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****             }
 533:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         I2CS_EZI2C_SET_INDEX(activeAddress, locIndex);
 667              		.loc 1 536 0
 668 0400 FB69     		ldr	r3, [r7, #28]
 669 0402 9AB2     		uxth	r2, r3
 670 0404 0E4B     		ldr	r3, .L42+48
 671 0406 1A80     		strh	r2, [r3]
 537:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 538:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #ifdef I2CS_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****         I2CS_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     #endif /* I2CS_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/I2CS_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/I2CS_EZI2C_INT.c ****     }
 672              		.loc 1 542 0
 673 0408 C046     		nop
 674 040a BD46     		mov	sp, r7
 675 040c 08B0     		add	sp, sp, #32
 676              		@ sp needed
 677 040e 80BD     		pop	{r7, pc}
 678              	.L43:
 679              		.align	2
 680              	.L42:
 681 0410 C80F2540 		.word	1076170696
 682 0414 800E2540 		.word	1076170368
 683 0418 400F2540 		.word	1076170560
 684 041c FF0F0000 		.word	4095
 685 0420 480F2540 		.word	1076170568
 686 0424 6C002540 		.word	1076166764
 687 0428 000E2540 		.word	1076170240
 688 042c 00000000 		.word	locBufSize.4971
 689 0430 40022540 		.word	1076167232
 690 0434 00000000 		.word	I2CS_dataBuffer1
 691 0438 08022540 		.word	1076167176
 692 043c 800F2540 		.word	1076170624
 693 0440 00000000 		.word	I2CS_indexBuf1
 694              		.cfi_endproc
 695              	.LFE2:
 696              		.size	I2CS_EZI2C_STRETCH_ISR, .-I2CS_EZI2C_STRETCH_ISR
 697              		.bss
 698              		.align	1
 699              	locBufSize.4971:
 700 0000 0000     		.space	2
 701              		.text
 702              	.Letext0:
 703              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 704              		.file 3 "Generated_Source\\PSoC4\\I2CS_PVT.h"
 705              		.file 4 "Generated_Source\\PSoC4\\I2CS_EZI2C_PVT.h"
 706              		.section	.debug_info,"",%progbits
 707              	.Ldebug_info0:
 708 0000 BF010000 		.4byte	0x1bf
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 23


 709 0004 0400     		.2byte	0x4
 710 0006 00000000 		.4byte	.Ldebug_abbrev0
 711 000a 04       		.byte	0x4
 712 000b 01       		.uleb128 0x1
 713 000c 25010000 		.4byte	.LASF35
 714 0010 0C       		.byte	0xc
 715 0011 B4000000 		.4byte	.LASF36
 716 0015 06000000 		.4byte	.LASF37
 717 0019 00000000 		.4byte	.Ldebug_ranges0+0
 718 001d 00000000 		.4byte	0
 719 0021 00000000 		.4byte	.Ldebug_line0
 720 0025 02       		.uleb128 0x2
 721 0026 01       		.byte	0x1
 722 0027 06       		.byte	0x6
 723 0028 AC020000 		.4byte	.LASF0
 724 002c 02       		.uleb128 0x2
 725 002d 01       		.byte	0x1
 726 002e 08       		.byte	0x8
 727 002f A6000000 		.4byte	.LASF1
 728 0033 02       		.uleb128 0x2
 729 0034 02       		.byte	0x2
 730 0035 05       		.byte	0x5
 731 0036 65020000 		.4byte	.LASF2
 732 003a 02       		.uleb128 0x2
 733 003b 02       		.byte	0x2
 734 003c 07       		.byte	0x7
 735 003d 5A000000 		.4byte	.LASF3
 736 0041 02       		.uleb128 0x2
 737 0042 04       		.byte	0x4
 738 0043 05       		.byte	0x5
 739 0044 86020000 		.4byte	.LASF4
 740 0048 02       		.uleb128 0x2
 741 0049 04       		.byte	0x4
 742 004a 07       		.byte	0x7
 743 004b FD000000 		.4byte	.LASF5
 744 004f 02       		.uleb128 0x2
 745 0050 08       		.byte	0x8
 746 0051 05       		.byte	0x5
 747 0052 45020000 		.4byte	.LASF6
 748 0056 02       		.uleb128 0x2
 749 0057 08       		.byte	0x8
 750 0058 07       		.byte	0x7
 751 0059 18020000 		.4byte	.LASF7
 752 005d 03       		.uleb128 0x3
 753 005e 04       		.byte	0x4
 754 005f 05       		.byte	0x5
 755 0060 696E7400 		.ascii	"int\000"
 756 0064 02       		.uleb128 0x2
 757 0065 04       		.byte	0x4
 758 0066 07       		.byte	0x7
 759 0067 F6010000 		.4byte	.LASF8
 760 006b 04       		.uleb128 0x4
 761 006c 0F010000 		.4byte	.LASF9
 762 0070 02       		.byte	0x2
 763 0071 FC01     		.2byte	0x1fc
 764 0073 2C000000 		.4byte	0x2c
 765 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 24


 766 0078 C9010000 		.4byte	.LASF10
 767 007c 02       		.byte	0x2
 768 007d FD01     		.2byte	0x1fd
 769 007f 3A000000 		.4byte	0x3a
 770 0083 04       		.uleb128 0x4
 771 0084 D0010000 		.4byte	.LASF11
 772 0088 02       		.byte	0x2
 773 0089 FE01     		.2byte	0x1fe
 774 008b 48000000 		.4byte	0x48
 775 008f 02       		.uleb128 0x2
 776 0090 04       		.byte	0x4
 777 0091 04       		.byte	0x4
 778 0092 97000000 		.4byte	.LASF12
 779 0096 02       		.uleb128 0x2
 780 0097 08       		.byte	0x8
 781 0098 04       		.byte	0x4
 782 0099 C2010000 		.4byte	.LASF13
 783 009d 02       		.uleb128 0x2
 784 009e 01       		.byte	0x1
 785 009f 08       		.byte	0x8
 786 00a0 53020000 		.4byte	.LASF14
 787 00a4 05       		.uleb128 0x5
 788 00a5 6B000000 		.4byte	0x6b
 789 00a9 04       		.uleb128 0x4
 790 00aa 00000000 		.4byte	.LASF15
 791 00ae 02       		.byte	0x2
 792 00af A802     		.2byte	0x2a8
 793 00b1 B5000000 		.4byte	0xb5
 794 00b5 05       		.uleb128 0x5
 795 00b6 83000000 		.4byte	0x83
 796 00ba 04       		.uleb128 0x4
 797 00bb 2F020000 		.4byte	.LASF16
 798 00bf 02       		.byte	0x2
 799 00c0 B802     		.2byte	0x2b8
 800 00c2 C6000000 		.4byte	0xc6
 801 00c6 06       		.uleb128 0x6
 802 00c7 04       		.byte	0x4
 803 00c8 CC000000 		.4byte	0xcc
 804 00cc 07       		.uleb128 0x7
 805 00cd 02       		.uleb128 0x2
 806 00ce 08       		.byte	0x8
 807 00cf 04       		.byte	0x4
 808 00d0 A0020000 		.4byte	.LASF17
 809 00d4 02       		.uleb128 0x2
 810 00d5 04       		.byte	0x4
 811 00d6 07       		.byte	0x7
 812 00d7 3C020000 		.4byte	.LASF18
 813 00db 08       		.uleb128 0x8
 814 00dc DC000000 		.4byte	.LASF38
 815 00e0 01       		.byte	0x1
 816 00e1 20       		.byte	0x20
 817 00e2 00000000 		.4byte	.LFB2
 818 00e6 44040000 		.4byte	.LFE2-.LFB2
 819 00ea 01       		.uleb128 0x1
 820 00eb 9C       		.byte	0x9c
 821 00ec 64010000 		.4byte	0x164
 822 00f0 09       		.uleb128 0x9
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 25


 823 00f1 03020000 		.4byte	.LASF19
 824 00f5 01       		.byte	0x1
 825 00f6 22       		.byte	0x22
 826 00f7 77000000 		.4byte	0x77
 827 00fb 05       		.uleb128 0x5
 828 00fc 03       		.byte	0x3
 829 00fd 00000000 		.4byte	locBufSize.4971
 830 0101 09       		.uleb128 0x9
 831 0102 9D000000 		.4byte	.LASF20
 832 0106 01       		.byte	0x1
 833 0107 23       		.byte	0x23
 834 0108 83000000 		.4byte	0x83
 835 010c 02       		.uleb128 0x2
 836 010d 91       		.byte	0x91
 837 010e 74       		.sleb128 -12
 838 010f 09       		.uleb128 0x9
 839 0110 F3000000 		.4byte	.LASF21
 840 0114 01       		.byte	0x1
 841 0115 24       		.byte	0x24
 842 0116 83000000 		.4byte	0x83
 843 011a 02       		.uleb128 0x2
 844 011b 91       		.byte	0x91
 845 011c 70       		.sleb128 -16
 846 011d 09       		.uleb128 0x9
 847 011e 6D000000 		.4byte	.LASF22
 848 0122 01       		.byte	0x1
 849 0123 26       		.byte	0x26
 850 0124 83000000 		.4byte	0x83
 851 0128 02       		.uleb128 0x2
 852 0129 91       		.byte	0x91
 853 012a 6C       		.sleb128 -20
 854 012b 09       		.uleb128 0x9
 855 012c 0E020000 		.4byte	.LASF23
 856 0130 01       		.byte	0x1
 857 0131 27       		.byte	0x27
 858 0132 83000000 		.4byte	0x83
 859 0136 02       		.uleb128 0x2
 860 0137 91       		.byte	0x91
 861 0138 68       		.sleb128 -24
 862 0139 09       		.uleb128 0x9
 863 013a B8020000 		.4byte	.LASF24
 864 013e 01       		.byte	0x1
 865 013f 28       		.byte	0x28
 866 0140 83000000 		.4byte	0x83
 867 0144 02       		.uleb128 0x2
 868 0145 91       		.byte	0x91
 869 0146 5C       		.sleb128 -36
 870 0147 09       		.uleb128 0x9
 871 0148 8A000000 		.4byte	.LASF25
 872 014c 01       		.byte	0x1
 873 014d 2A       		.byte	0x2a
 874 014e 83000000 		.4byte	0x83
 875 0152 02       		.uleb128 0x2
 876 0153 91       		.byte	0x91
 877 0154 60       		.sleb128 -32
 878 0155 09       		.uleb128 0x9
 879 0156 58020000 		.4byte	.LASF26
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 26


 880 015a 01       		.byte	0x1
 881 015b 2B       		.byte	0x2b
 882 015c 83000000 		.4byte	0x83
 883 0160 02       		.uleb128 0x2
 884 0161 91       		.byte	0x91
 885 0162 64       		.sleb128 -28
 886 0163 00       		.byte	0
 887 0164 0A       		.uleb128 0xa
 888 0165 6F020000 		.4byte	.LASF27
 889 0169 03       		.byte	0x3
 890 016a 3B       		.byte	0x3b
 891 016b BA000000 		.4byte	0xba
 892 016f 0A       		.uleb128 0xa
 893 0170 4B000000 		.4byte	.LASF28
 894 0174 04       		.byte	0x4
 895 0175 1E       		.byte	0x1e
 896 0176 A4000000 		.4byte	0xa4
 897 017a 0A       		.uleb128 0xa
 898 017b D7010000 		.4byte	.LASF29
 899 017f 04       		.byte	0x4
 900 0180 1F       		.byte	0x1f
 901 0181 6B000000 		.4byte	0x6b
 902 0185 0A       		.uleb128 0xa
 903 0186 8F020000 		.4byte	.LASF30
 904 018a 04       		.byte	0x4
 905 018b 22       		.byte	0x22
 906 018c 90010000 		.4byte	0x190
 907 0190 06       		.uleb128 0x6
 908 0191 04       		.byte	0x4
 909 0192 A4000000 		.4byte	0xa4
 910 0196 0A       		.uleb128 0xa
 911 0197 79000000 		.4byte	.LASF31
 912 019b 04       		.byte	0x4
 913 019c 23       		.byte	0x23
 914 019d 77000000 		.4byte	0x77
 915 01a1 0A       		.uleb128 0xa
 916 01a2 E5010000 		.4byte	.LASF32
 917 01a6 04       		.byte	0x4
 918 01a7 24       		.byte	0x24
 919 01a8 77000000 		.4byte	0x77
 920 01ac 0A       		.uleb128 0xa
 921 01ad 15010000 		.4byte	.LASF33
 922 01b1 04       		.byte	0x4
 923 01b2 25       		.byte	0x25
 924 01b3 6B000000 		.4byte	0x6b
 925 01b7 0A       		.uleb128 0xa
 926 01b8 B3010000 		.4byte	.LASF34
 927 01bc 04       		.byte	0x4
 928 01bd 26       		.byte	0x26
 929 01be 77000000 		.4byte	0x77
 930 01c2 00       		.byte	0
 931              		.section	.debug_abbrev,"",%progbits
 932              	.Ldebug_abbrev0:
 933 0000 01       		.uleb128 0x1
 934 0001 11       		.uleb128 0x11
 935 0002 01       		.byte	0x1
 936 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 27


 937 0004 0E       		.uleb128 0xe
 938 0005 13       		.uleb128 0x13
 939 0006 0B       		.uleb128 0xb
 940 0007 03       		.uleb128 0x3
 941 0008 0E       		.uleb128 0xe
 942 0009 1B       		.uleb128 0x1b
 943 000a 0E       		.uleb128 0xe
 944 000b 55       		.uleb128 0x55
 945 000c 17       		.uleb128 0x17
 946 000d 11       		.uleb128 0x11
 947 000e 01       		.uleb128 0x1
 948 000f 10       		.uleb128 0x10
 949 0010 17       		.uleb128 0x17
 950 0011 00       		.byte	0
 951 0012 00       		.byte	0
 952 0013 02       		.uleb128 0x2
 953 0014 24       		.uleb128 0x24
 954 0015 00       		.byte	0
 955 0016 0B       		.uleb128 0xb
 956 0017 0B       		.uleb128 0xb
 957 0018 3E       		.uleb128 0x3e
 958 0019 0B       		.uleb128 0xb
 959 001a 03       		.uleb128 0x3
 960 001b 0E       		.uleb128 0xe
 961 001c 00       		.byte	0
 962 001d 00       		.byte	0
 963 001e 03       		.uleb128 0x3
 964 001f 24       		.uleb128 0x24
 965 0020 00       		.byte	0
 966 0021 0B       		.uleb128 0xb
 967 0022 0B       		.uleb128 0xb
 968 0023 3E       		.uleb128 0x3e
 969 0024 0B       		.uleb128 0xb
 970 0025 03       		.uleb128 0x3
 971 0026 08       		.uleb128 0x8
 972 0027 00       		.byte	0
 973 0028 00       		.byte	0
 974 0029 04       		.uleb128 0x4
 975 002a 16       		.uleb128 0x16
 976 002b 00       		.byte	0
 977 002c 03       		.uleb128 0x3
 978 002d 0E       		.uleb128 0xe
 979 002e 3A       		.uleb128 0x3a
 980 002f 0B       		.uleb128 0xb
 981 0030 3B       		.uleb128 0x3b
 982 0031 05       		.uleb128 0x5
 983 0032 49       		.uleb128 0x49
 984 0033 13       		.uleb128 0x13
 985 0034 00       		.byte	0
 986 0035 00       		.byte	0
 987 0036 05       		.uleb128 0x5
 988 0037 35       		.uleb128 0x35
 989 0038 00       		.byte	0
 990 0039 49       		.uleb128 0x49
 991 003a 13       		.uleb128 0x13
 992 003b 00       		.byte	0
 993 003c 00       		.byte	0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 28


 994 003d 06       		.uleb128 0x6
 995 003e 0F       		.uleb128 0xf
 996 003f 00       		.byte	0
 997 0040 0B       		.uleb128 0xb
 998 0041 0B       		.uleb128 0xb
 999 0042 49       		.uleb128 0x49
 1000 0043 13       		.uleb128 0x13
 1001 0044 00       		.byte	0
 1002 0045 00       		.byte	0
 1003 0046 07       		.uleb128 0x7
 1004 0047 15       		.uleb128 0x15
 1005 0048 00       		.byte	0
 1006 0049 27       		.uleb128 0x27
 1007 004a 19       		.uleb128 0x19
 1008 004b 00       		.byte	0
 1009 004c 00       		.byte	0
 1010 004d 08       		.uleb128 0x8
 1011 004e 2E       		.uleb128 0x2e
 1012 004f 01       		.byte	0x1
 1013 0050 3F       		.uleb128 0x3f
 1014 0051 19       		.uleb128 0x19
 1015 0052 03       		.uleb128 0x3
 1016 0053 0E       		.uleb128 0xe
 1017 0054 3A       		.uleb128 0x3a
 1018 0055 0B       		.uleb128 0xb
 1019 0056 3B       		.uleb128 0x3b
 1020 0057 0B       		.uleb128 0xb
 1021 0058 27       		.uleb128 0x27
 1022 0059 19       		.uleb128 0x19
 1023 005a 11       		.uleb128 0x11
 1024 005b 01       		.uleb128 0x1
 1025 005c 12       		.uleb128 0x12
 1026 005d 06       		.uleb128 0x6
 1027 005e 40       		.uleb128 0x40
 1028 005f 18       		.uleb128 0x18
 1029 0060 9642     		.uleb128 0x2116
 1030 0062 19       		.uleb128 0x19
 1031 0063 01       		.uleb128 0x1
 1032 0064 13       		.uleb128 0x13
 1033 0065 00       		.byte	0
 1034 0066 00       		.byte	0
 1035 0067 09       		.uleb128 0x9
 1036 0068 34       		.uleb128 0x34
 1037 0069 00       		.byte	0
 1038 006a 03       		.uleb128 0x3
 1039 006b 0E       		.uleb128 0xe
 1040 006c 3A       		.uleb128 0x3a
 1041 006d 0B       		.uleb128 0xb
 1042 006e 3B       		.uleb128 0x3b
 1043 006f 0B       		.uleb128 0xb
 1044 0070 49       		.uleb128 0x49
 1045 0071 13       		.uleb128 0x13
 1046 0072 02       		.uleb128 0x2
 1047 0073 18       		.uleb128 0x18
 1048 0074 00       		.byte	0
 1049 0075 00       		.byte	0
 1050 0076 0A       		.uleb128 0xa
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 29


 1051 0077 34       		.uleb128 0x34
 1052 0078 00       		.byte	0
 1053 0079 03       		.uleb128 0x3
 1054 007a 0E       		.uleb128 0xe
 1055 007b 3A       		.uleb128 0x3a
 1056 007c 0B       		.uleb128 0xb
 1057 007d 3B       		.uleb128 0x3b
 1058 007e 0B       		.uleb128 0xb
 1059 007f 49       		.uleb128 0x49
 1060 0080 13       		.uleb128 0x13
 1061 0081 3F       		.uleb128 0x3f
 1062 0082 19       		.uleb128 0x19
 1063 0083 3C       		.uleb128 0x3c
 1064 0084 19       		.uleb128 0x19
 1065 0085 00       		.byte	0
 1066 0086 00       		.byte	0
 1067 0087 00       		.byte	0
 1068              		.section	.debug_aranges,"",%progbits
 1069 0000 1C000000 		.4byte	0x1c
 1070 0004 0200     		.2byte	0x2
 1071 0006 00000000 		.4byte	.Ldebug_info0
 1072 000a 04       		.byte	0x4
 1073 000b 00       		.byte	0
 1074 000c 0000     		.2byte	0
 1075 000e 0000     		.2byte	0
 1076 0010 00000000 		.4byte	.LFB2
 1077 0014 44040000 		.4byte	.LFE2-.LFB2
 1078 0018 00000000 		.4byte	0
 1079 001c 00000000 		.4byte	0
 1080              		.section	.debug_ranges,"",%progbits
 1081              	.Ldebug_ranges0:
 1082 0000 00000000 		.4byte	.LFB2
 1083 0004 44040000 		.4byte	.LFE2
 1084 0008 00000000 		.4byte	0
 1085 000c 00000000 		.4byte	0
 1086              		.section	.debug_line,"",%progbits
 1087              	.Ldebug_line0:
 1088 0000 25010000 		.section	.debug_str,"MS",%progbits,1
 1088      02006D00 
 1088      00000201 
 1088      FB0E0D00 
 1088      01010101 
 1089              	.LASF15:
 1090 0000 72656733 		.ascii	"reg32\000"
 1090      3200
 1091              	.LASF37:
 1092 0006 433A5C55 		.ascii	"C:\\Users\\alexport\\OneDrive - Safeguard Analytics"
 1092      73657273 
 1092      5C616C65 
 1092      78706F72 
 1092      745C4F6E 
 1093 0036 5C53412D 		.ascii	"\\SA-1AQ\\SA-1AQ.cydsn\000"
 1093      3141515C 
 1093      53412D31 
 1093      41512E63 
 1093      7964736E 
 1094              	.LASF28:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 30


 1095 004b 49324353 		.ascii	"I2CS_curStatus\000"
 1095      5F637572 
 1095      53746174 
 1095      757300
 1096              	.LASF3:
 1097 005a 73686F72 		.ascii	"short unsigned int\000"
 1097      7420756E 
 1097      7369676E 
 1097      65642069 
 1097      6E7400
 1098              	.LASF22:
 1099 006d 656E6454 		.ascii	"endTransfer\000"
 1099      72616E73 
 1099      66657200 
 1100              	.LASF31:
 1101 0079 49324353 		.ascii	"I2CS_bufSizeBuf1\000"
 1101      5F627566 
 1101      53697A65 
 1101      42756631 
 1101      00
 1102              	.LASF25:
 1103 008a 6C6F6349 		.ascii	"locIntrCause\000"
 1103      6E747243 
 1103      61757365 
 1103      00
 1104              	.LASF12:
 1105 0097 666C6F61 		.ascii	"float\000"
 1105      7400
 1106              	.LASF20:
 1107 009d 6C6F6349 		.ascii	"locIndex\000"
 1107      6E646578 
 1107      00
 1108              	.LASF1:
 1109 00a6 756E7369 		.ascii	"unsigned char\000"
 1109      676E6564 
 1109      20636861 
 1109      7200
 1110              	.LASF36:
 1111 00b4 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2CS_EZI2C_INT.c\000"
 1111      72617465 
 1111      645F536F 
 1111      75726365 
 1111      5C50536F 
 1112              	.LASF38:
 1113 00dc 49324353 		.ascii	"I2CS_EZI2C_STRETCH_ISR\000"
 1113      5F455A49 
 1113      32435F53 
 1113      54524554 
 1113      43485F49 
 1114              	.LASF21:
 1115 00f3 6C6F6353 		.ascii	"locStatus\000"
 1115      74617475 
 1115      7300
 1116              	.LASF5:
 1117 00fd 6C6F6E67 		.ascii	"long unsigned int\000"
 1117      20756E73 
 1117      69676E65 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 31


 1117      6420696E 
 1117      7400
 1118              	.LASF9:
 1119 010f 75696E74 		.ascii	"uint8\000"
 1119      3800
 1120              	.LASF33:
 1121 0115 49324353 		.ascii	"I2CS_offsetBuf1\000"
 1121      5F6F6666 
 1121      73657442 
 1121      75663100 
 1122              	.LASF35:
 1123 0125 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1123      43313120 
 1123      352E342E 
 1123      31203230 
 1123      31363036 
 1124 0158 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1124      20726576 
 1124      6973696F 
 1124      6E203233 
 1124      37373135 
 1125 018b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1125      66756E63 
 1125      74696F6E 
 1125      2D736563 
 1125      74696F6E 
 1126              	.LASF34:
 1127 01b3 49324353 		.ascii	"I2CS_indexBuf1\000"
 1127      5F696E64 
 1127      65784275 
 1127      663100
 1128              	.LASF13:
 1129 01c2 646F7562 		.ascii	"double\000"
 1129      6C6500
 1130              	.LASF10:
 1131 01c9 75696E74 		.ascii	"uint16\000"
 1131      313600
 1132              	.LASF11:
 1133 01d0 75696E74 		.ascii	"uint32\000"
 1133      333200
 1134              	.LASF29:
 1135 01d7 49324353 		.ascii	"I2CS_fsmState\000"
 1135      5F66736D 
 1135      53746174 
 1135      6500
 1136              	.LASF32:
 1137 01e5 49324353 		.ascii	"I2CS_protectBuf1\000"
 1137      5F70726F 
 1137      74656374 
 1137      42756631 
 1137      00
 1138              	.LASF8:
 1139 01f6 756E7369 		.ascii	"unsigned int\000"
 1139      676E6564 
 1139      20696E74 
 1139      00
 1140              	.LASF19:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 32


 1141 0203 6C6F6342 		.ascii	"locBufSize\000"
 1141      75665369 
 1141      7A6500
 1142              	.LASF23:
 1143 020e 6669666F 		.ascii	"fifoIndex\000"
 1143      496E6465 
 1143      7800
 1144              	.LASF7:
 1145 0218 6C6F6E67 		.ascii	"long long unsigned int\000"
 1145      206C6F6E 
 1145      6720756E 
 1145      7369676E 
 1145      65642069 
 1146              	.LASF16:
 1147 022f 63796973 		.ascii	"cyisraddress\000"
 1147      72616464 
 1147      72657373 
 1147      00
 1148              	.LASF18:
 1149 023c 73697A65 		.ascii	"sizetype\000"
 1149      74797065 
 1149      00
 1150              	.LASF6:
 1151 0245 6C6F6E67 		.ascii	"long long int\000"
 1151      206C6F6E 
 1151      6720696E 
 1151      7400
 1152              	.LASF14:
 1153 0253 63686172 		.ascii	"char\000"
 1153      00
 1154              	.LASF26:
 1155 0258 6C6F6349 		.ascii	"locIntrSlave\000"
 1155      6E747253 
 1155      6C617665 
 1155      00
 1156              	.LASF2:
 1157 0265 73686F72 		.ascii	"short int\000"
 1157      7420696E 
 1157      7400
 1158              	.LASF27:
 1159 026f 49324353 		.ascii	"I2CS_customIntrHandler\000"
 1159      5F637573 
 1159      746F6D49 
 1159      6E747248 
 1159      616E646C 
 1160              	.LASF4:
 1161 0286 6C6F6E67 		.ascii	"long int\000"
 1161      20696E74 
 1161      00
 1162              	.LASF30:
 1163 028f 49324353 		.ascii	"I2CS_dataBuffer1\000"
 1163      5F646174 
 1163      61427566 
 1163      66657231 
 1163      00
 1164              	.LASF17:
 1165 02a0 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccqWCGXp.s 			page 33


 1165      20646F75 
 1165      626C6500 
 1166              	.LASF0:
 1167 02ac 7369676E 		.ascii	"signed char\000"
 1167      65642063 
 1167      68617200 
 1168              	.LASF24:
 1169 02b8 6C6F6342 		.ascii	"locByte\000"
 1169      79746500 
 1170              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
