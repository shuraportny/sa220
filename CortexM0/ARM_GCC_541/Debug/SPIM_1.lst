ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPIM_1_initVar
  20              		.bss
  21              		.type	SPIM_1_initVar, %object
  22              		.size	SPIM_1_initVar, 1
  23              	SPIM_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPIM_1_swStatusTx,1,1
  26              		.comm	SPIM_1_swStatusRx,1,1
  27              		.section	.text.SPIM_1_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPIM_1_Init
  30              		.code	16
  31              		.thumb_func
  32              		.type	SPIM_1_Init, %function
  33              	SPIM_1_Init:
  34              	.LFB2:
  35              		.file 1 "Generated_Source\\PSoC4\\SPIM_1.c"
   1:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM_1.c **** * File Name: SPIM_1.c
   3:Generated_Source\PSoC4/SPIM_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM_1.c **** *
   5:Generated_Source\PSoC4/SPIM_1.c **** * Description:
   6:Generated_Source\PSoC4/SPIM_1.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM_1.c **** *
   8:Generated_Source\PSoC4/SPIM_1.c **** * Note:
   9:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  10:Generated_Source\PSoC4/SPIM_1.c **** *
  11:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM_1.c **** 
  18:Generated_Source\PSoC4/SPIM_1.c **** #include "SPIM_1_PVT.h"
  19:Generated_Source\PSoC4/SPIM_1.c **** 
  20:Generated_Source\PSoC4/SPIM_1.c **** #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferFull;
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 2


  23:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferRead;
  24:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferWrite;
  25:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM_1.c **** 
  27:Generated_Source\PSoC4/SPIM_1.c **** #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferRead;
  31:Generated_Source\PSoC4/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM_1.c **** 
  34:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM_1.c **** 
  36:Generated_Source\PSoC4/SPIM_1.c **** volatile uint8 SPIM_1_swStatusTx;
  37:Generated_Source\PSoC4/SPIM_1.c **** volatile uint8 SPIM_1_swStatusRx;
  38:Generated_Source\PSoC4/SPIM_1.c **** 
  39:Generated_Source\PSoC4/SPIM_1.c **** 
  40:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Init
  42:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM_1.c **** *
  44:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM_1.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM_1.c **** *
  47:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  49:Generated_Source\PSoC4/SPIM_1.c **** *
  50:Generated_Source\PSoC4/SPIM_1.c **** * Return:
  51:Generated_Source\PSoC4/SPIM_1.c **** *  None.
  52:Generated_Source\PSoC4/SPIM_1.c **** *
  53:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM_1.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM_1.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM_1.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM_1.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM_1.c **** *
  59:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM_1.c **** *  No.
  61:Generated_Source\PSoC4/SPIM_1.c **** *
  62:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Init(void) 
  64:Generated_Source\PSoC4/SPIM_1.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/SPIM_1.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_COUNTER_PERIOD_REG = SPIM_1_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC4/SPIM_1.c **** 
  68:Generated_Source\PSoC4/SPIM_1.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable         (SPIM_1_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_TX_ISR_NUMBER,  SPIM_1_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_TX_ISR_NUMBER, &SPIM_1_TX_ISR);
  73:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM_1.c **** 
  75:Generated_Source\PSoC4/SPIM_1.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable         (SPIM_1_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_RX_ISR_NUMBER,  SPIM_1_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_RX_ISR_NUMBER, &SPIM_1_RX_ISR);
  80:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM_1.c **** 
  82:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPIM_1_ClearFIFO
  84:Generated_Source\PSoC4/SPIM_1.c **** 
  85:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
  88:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM_1.c **** 
  91:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM_1.c **** 
  97:Generated_Source\PSoC4/SPIM_1.c ****     (void) SPIM_1_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  98:Generated_Source\PSoC4/SPIM_1.c ****     (void) SPIM_1_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPIM_1_ReadRxStatus
  99:Generated_Source\PSoC4/SPIM_1.c **** 
 100:Generated_Source\PSoC4/SPIM_1.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = SPIM_1_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0022     		movs	r2, #0
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG = SPIM_1_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 0022     		movs	r2, #0
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC4/SPIM_1.c **** }
  64              		.loc 1 103 0
  65 0022 C046     		nop
  66 0024 BD46     		mov	sp, r7
  67              		@ sp needed
  68 0026 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 4


  69              	.L3:
  70              		.align	2
  71              	.L2:
  72 0028 81000F40 		.word	1074724993
  73 002c 82000F40 		.word	1074724994
  74 0030 83000F40 		.word	1074724995
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	SPIM_1_Init, .-SPIM_1_Init
  78              		.section	.text.SPIM_1_Enable,"ax",%progbits
  79              		.align	2
  80              		.global	SPIM_1_Enable
  81              		.code	16
  82              		.thumb_func
  83              		.type	SPIM_1_Enable, %function
  84              	SPIM_1_Enable:
  85              	.LFB3:
 104:Generated_Source\PSoC4/SPIM_1.c **** 
 105:Generated_Source\PSoC4/SPIM_1.c **** 
 106:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Enable
 108:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM_1.c **** *
 110:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM_1.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM_1.c **** *
 113:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 115:Generated_Source\PSoC4/SPIM_1.c **** *
 116:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 117:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 118:Generated_Source\PSoC4/SPIM_1.c **** *
 119:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Enable(void) 
 121:Generated_Source\PSoC4/SPIM_1.c **** {
  86              		.loc 1 121 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 90B5     		push	{r4, r7, lr}
  91              		.cfi_def_cfa_offset 12
  92              		.cfi_offset 4, -12
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM_1.c **** 
 124:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  99              		.loc 1 124 0
 100 0006 FC1D     		adds	r4, r7, #7
 101 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 102 000c 0300     		movs	r3, r0
 103 000e 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_COUNTER_CONTROL_REG |= SPIM_1_CNTR_ENABLE;
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 5


 104              		.loc 1 125 0
 105 0010 124A     		ldr	r2, .L5
 106 0012 124B     		ldr	r3, .L5
 107 0014 1B78     		ldrb	r3, [r3]
 108 0016 DBB2     		uxtb	r3, r3
 109 0018 2021     		movs	r1, #32
 110 001a 0B43     		orrs	r3, r1
 111 001c DBB2     		uxtb	r3, r3
 112 001e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 113              		.loc 1 126 0
 114 0020 0F4A     		ldr	r2, .L5+4
 115 0022 0F4B     		ldr	r3, .L5+4
 116 0024 1B78     		ldrb	r3, [r3]
 117 0026 DBB2     		uxtb	r3, r3
 118 0028 1021     		movs	r1, #16
 119 002a 0B43     		orrs	r3, r1
 120 002c DBB2     		uxtb	r3, r3
 121 002e 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 122              		.loc 1 127 0
 123 0030 0C4A     		ldr	r2, .L5+8
 124 0032 0C4B     		ldr	r3, .L5+8
 125 0034 1B78     		ldrb	r3, [r3]
 126 0036 DBB2     		uxtb	r3, r3
 127 0038 1021     		movs	r1, #16
 128 003a 0B43     		orrs	r3, r1
 129 003c DBB2     		uxtb	r3, r3
 130 003e 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 131              		.loc 1 128 0
 132 0040 FB1D     		adds	r3, r7, #7
 133 0042 1B78     		ldrb	r3, [r3]
 134 0044 1800     		movs	r0, r3
 135 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/SPIM_1.c **** 
 130:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_IntClock_Enable();
 132:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM_1.c **** 
 134:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableTxInt();
 136              		.loc 1 134 0
 137 004a FFF7FEFF 		bl	SPIM_1_EnableTxInt
 135:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableRxInt();
 138              		.loc 1 135 0
 139 004e FFF7FEFF 		bl	SPIM_1_EnableRxInt
 136:Generated_Source\PSoC4/SPIM_1.c **** }
 140              		.loc 1 136 0
 141 0052 C046     		nop
 142 0054 BD46     		mov	sp, r7
 143 0056 03B0     		add	sp, sp, #12
 144              		@ sp needed
 145 0058 90BD     		pop	{r4, r7, pc}
 146              	.L6:
 147 005a C046     		.align	2
 148              	.L5:
 149 005c 91000F40 		.word	1074725009
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 6


 150 0060 92000F40 		.word	1074725010
 151 0064 93000F40 		.word	1074725011
 152              		.cfi_endproc
 153              	.LFE3:
 154              		.size	SPIM_1_Enable, .-SPIM_1_Enable
 155              		.section	.text.SPIM_1_Start,"ax",%progbits
 156              		.align	2
 157              		.global	SPIM_1_Start
 158              		.code	16
 159              		.thumb_func
 160              		.type	SPIM_1_Start, %function
 161              	SPIM_1_Start:
 162              	.LFB4:
 137:Generated_Source\PSoC4/SPIM_1.c **** 
 138:Generated_Source\PSoC4/SPIM_1.c **** 
 139:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Start
 141:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM_1.c **** *
 143:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM_1.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/SPIM_1.c **** *
 146:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 148:Generated_Source\PSoC4/SPIM_1.c **** *
 149:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 150:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 151:Generated_Source\PSoC4/SPIM_1.c **** *
 152:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM_1.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM_1.c **** *
 156:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM_1.c **** *
 159:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 161:Generated_Source\PSoC4/SPIM_1.c **** *
 162:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Start(void) 
 164:Generated_Source\PSoC4/SPIM_1.c **** {
 163              		.loc 1 164 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC4/SPIM_1.c ****     if(0u == SPIM_1_initVar)
 173              		.loc 1 165 0
 174 0004 064B     		ldr	r3, .L9
 175 0006 1B78     		ldrb	r3, [r3]
 176 0008 002B     		cmp	r3, #0
 177 000a 04D1     		bne	.L8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 7


 166:Generated_Source\PSoC4/SPIM_1.c ****     {
 167:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_Init();
 178              		.loc 1 167 0
 179 000c FFF7FEFF 		bl	SPIM_1_Init
 168:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_initVar = 1u;
 180              		.loc 1 168 0
 181 0010 034B     		ldr	r3, .L9
 182 0012 0122     		movs	r2, #1
 183 0014 1A70     		strb	r2, [r3]
 184              	.L8:
 169:Generated_Source\PSoC4/SPIM_1.c ****     }
 170:Generated_Source\PSoC4/SPIM_1.c **** 
 171:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_Enable();
 185              		.loc 1 171 0
 186 0016 FFF7FEFF 		bl	SPIM_1_Enable
 172:Generated_Source\PSoC4/SPIM_1.c **** }
 187              		.loc 1 172 0
 188 001a C046     		nop
 189 001c BD46     		mov	sp, r7
 190              		@ sp needed
 191 001e 80BD     		pop	{r7, pc}
 192              	.L10:
 193              		.align	2
 194              	.L9:
 195 0020 00000000 		.word	SPIM_1_initVar
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	SPIM_1_Start, .-SPIM_1_Start
 199              		.section	.text.SPIM_1_Stop,"ax",%progbits
 200              		.align	2
 201              		.global	SPIM_1_Stop
 202              		.code	16
 203              		.thumb_func
 204              		.type	SPIM_1_Stop, %function
 205              	SPIM_1_Stop:
 206              	.LFB5:
 173:Generated_Source\PSoC4/SPIM_1.c **** 
 174:Generated_Source\PSoC4/SPIM_1.c **** 
 175:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_Stop
 177:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM_1.c **** *
 179:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM_1.c **** *
 182:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 184:Generated_Source\PSoC4/SPIM_1.c **** *
 185:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 186:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 187:Generated_Source\PSoC4/SPIM_1.c **** *
 188:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM_1.c **** *
 191:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_Stop(void) 
 193:Generated_Source\PSoC4/SPIM_1.c **** {
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 8


 207              		.loc 1 193 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 90B5     		push	{r4, r7, lr}
 212              		.cfi_def_cfa_offset 12
 213              		.cfi_offset 4, -12
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 83B0     		sub	sp, sp, #12
 217              		.cfi_def_cfa_offset 24
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM_1.c **** 
 196:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 220              		.loc 1 196 0
 221 0006 FC1D     		adds	r4, r7, #7
 222 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 223 000c 0300     		movs	r3, r0
 224 000e 2370     		strb	r3, [r4]
 197:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 225              		.loc 1 197 0
 226 0010 0E4A     		ldr	r2, .L12
 227 0012 0E4B     		ldr	r3, .L12
 228 0014 1B78     		ldrb	r3, [r3]
 229 0016 DBB2     		uxtb	r3, r3
 230 0018 1021     		movs	r1, #16
 231 001a 8B43     		bics	r3, r1
 232 001c DBB2     		uxtb	r3, r3
 233 001e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 234              		.loc 1 198 0
 235 0020 0B4A     		ldr	r2, .L12+4
 236 0022 0B4B     		ldr	r3, .L12+4
 237 0024 1B78     		ldrb	r3, [r3]
 238 0026 DBB2     		uxtb	r3, r3
 239 0028 1021     		movs	r1, #16
 240 002a 8B43     		bics	r3, r1
 241 002c DBB2     		uxtb	r3, r3
 242 002e 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 243              		.loc 1 199 0
 244 0030 FB1D     		adds	r3, r7, #7
 245 0032 1B78     		ldrb	r3, [r3]
 246 0034 1800     		movs	r0, r3
 247 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC4/SPIM_1.c **** 
 201:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_IntClock_Disable();
 203:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM_1.c **** 
 205:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableTxInt();
 248              		.loc 1 205 0
 249 003a FFF7FEFF 		bl	SPIM_1_DisableTxInt
 206:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableRxInt();
 250              		.loc 1 206 0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 9


 251 003e FFF7FEFF 		bl	SPIM_1_DisableRxInt
 207:Generated_Source\PSoC4/SPIM_1.c **** }
 252              		.loc 1 207 0
 253 0042 C046     		nop
 254 0044 BD46     		mov	sp, r7
 255 0046 03B0     		add	sp, sp, #12
 256              		@ sp needed
 257 0048 90BD     		pop	{r4, r7, pc}
 258              	.L13:
 259 004a C046     		.align	2
 260              	.L12:
 261 004c 92000F40 		.word	1074725010
 262 0050 93000F40 		.word	1074725011
 263              		.cfi_endproc
 264              	.LFE5:
 265              		.size	SPIM_1_Stop, .-SPIM_1_Stop
 266              		.section	.text.SPIM_1_EnableTxInt,"ax",%progbits
 267              		.align	2
 268              		.global	SPIM_1_EnableTxInt
 269              		.code	16
 270              		.thumb_func
 271              		.type	SPIM_1_EnableTxInt, %function
 272              	SPIM_1_EnableTxInt:
 273              	.LFB6:
 208:Generated_Source\PSoC4/SPIM_1.c **** 
 209:Generated_Source\PSoC4/SPIM_1.c **** 
 210:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableTxInt
 212:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM_1.c **** *
 214:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM_1.c **** *
 217:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 219:Generated_Source\PSoC4/SPIM_1.c **** *
 220:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 221:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 222:Generated_Source\PSoC4/SPIM_1.c **** *
 223:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM_1.c **** *
 226:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM_1.c **** {
 274              		.loc 1 228 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM_1.c ****         CyIntEnable(SPIM_1_TX_ISR_NUMBER);
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 10


 231:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM_1.c **** }
 284              		.loc 1 232 0
 285 0004 C046     		nop
 286 0006 BD46     		mov	sp, r7
 287              		@ sp needed
 288 0008 80BD     		pop	{r7, pc}
 289              		.cfi_endproc
 290              	.LFE6:
 291              		.size	SPIM_1_EnableTxInt, .-SPIM_1_EnableTxInt
 292              		.section	.text.SPIM_1_EnableRxInt,"ax",%progbits
 293              		.align	2
 294              		.global	SPIM_1_EnableRxInt
 295              		.code	16
 296              		.thumb_func
 297              		.type	SPIM_1_EnableRxInt, %function
 298              	SPIM_1_EnableRxInt:
 299              	.LFB7:
 233:Generated_Source\PSoC4/SPIM_1.c **** 
 234:Generated_Source\PSoC4/SPIM_1.c **** 
 235:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableRxInt
 237:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM_1.c **** *
 239:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM_1.c **** *
 242:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 244:Generated_Source\PSoC4/SPIM_1.c **** *
 245:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 246:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 247:Generated_Source\PSoC4/SPIM_1.c **** *
 248:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM_1.c **** *
 251:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM_1.c **** {
 300              		.loc 1 253 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM_1.c ****         CyIntEnable(SPIM_1_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM_1.c **** }
 310              		.loc 1 257 0
 311 0004 C046     		nop
 312 0006 BD46     		mov	sp, r7
 313              		@ sp needed
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 11


 314 0008 80BD     		pop	{r7, pc}
 315              		.cfi_endproc
 316              	.LFE7:
 317              		.size	SPIM_1_EnableRxInt, .-SPIM_1_EnableRxInt
 318              		.section	.text.SPIM_1_DisableTxInt,"ax",%progbits
 319              		.align	2
 320              		.global	SPIM_1_DisableTxInt
 321              		.code	16
 322              		.thumb_func
 323              		.type	SPIM_1_DisableTxInt, %function
 324              	SPIM_1_DisableTxInt:
 325              	.LFB8:
 258:Generated_Source\PSoC4/SPIM_1.c **** 
 259:Generated_Source\PSoC4/SPIM_1.c **** 
 260:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableTxInt
 262:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM_1.c **** *
 264:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM_1.c **** *
 267:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 269:Generated_Source\PSoC4/SPIM_1.c **** *
 270:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 271:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 272:Generated_Source\PSoC4/SPIM_1.c **** *
 273:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM_1.c **** *
 276:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM_1.c **** {
 326              		.loc 1 278 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable(SPIM_1_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM_1.c **** }
 336              		.loc 1 282 0
 337 0004 C046     		nop
 338 0006 BD46     		mov	sp, r7
 339              		@ sp needed
 340 0008 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE8:
 343              		.size	SPIM_1_DisableTxInt, .-SPIM_1_DisableTxInt
 344              		.section	.text.SPIM_1_DisableRxInt,"ax",%progbits
 345              		.align	2
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 12


 346              		.global	SPIM_1_DisableRxInt
 347              		.code	16
 348              		.thumb_func
 349              		.type	SPIM_1_DisableRxInt, %function
 350              	SPIM_1_DisableRxInt:
 351              	.LFB9:
 283:Generated_Source\PSoC4/SPIM_1.c **** 
 284:Generated_Source\PSoC4/SPIM_1.c **** 
 285:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableRxInt
 287:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM_1.c **** *
 289:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM_1.c **** *
 292:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 294:Generated_Source\PSoC4/SPIM_1.c **** *
 295:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 296:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 297:Generated_Source\PSoC4/SPIM_1.c **** *
 298:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM_1.c **** *
 301:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM_1.c **** {
 352              		.loc 1 303 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM_1.c ****         CyIntDisable(SPIM_1_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM_1.c **** }
 362              		.loc 1 307 0
 363 0004 C046     		nop
 364 0006 BD46     		mov	sp, r7
 365              		@ sp needed
 366 0008 80BD     		pop	{r7, pc}
 367              		.cfi_endproc
 368              	.LFE9:
 369              		.size	SPIM_1_DisableRxInt, .-SPIM_1_DisableRxInt
 370              		.section	.text.SPIM_1_SetTxInterruptMode,"ax",%progbits
 371              		.align	2
 372              		.global	SPIM_1_SetTxInterruptMode
 373              		.code	16
 374              		.thumb_func
 375              		.type	SPIM_1_SetTxInterruptMode, %function
 376              	SPIM_1_SetTxInterruptMode:
 377              	.LFB10:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 13


 308:Generated_Source\PSoC4/SPIM_1.c **** 
 309:Generated_Source\PSoC4/SPIM_1.c **** 
 310:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM_1.c **** *
 314:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM_1.c **** *
 317:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM_1.c **** *
 321:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 322:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 323:Generated_Source\PSoC4/SPIM_1.c **** *
 324:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM_1.c **** *
 327:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM_1.c **** {
 378              		.loc 1 329 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 80B5     		push	{r7, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 82B0     		sub	sp, sp, #8
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
 390 0006 0200     		movs	r2, r0
 391 0008 FB1D     		adds	r3, r7, #7
 392 000a 1A70     		strb	r2, [r3]
 330:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = intSrc;
 393              		.loc 1 330 0
 394 000c 034A     		ldr	r2, .L19
 395 000e FB1D     		adds	r3, r7, #7
 396 0010 1B78     		ldrb	r3, [r3]
 397 0012 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/SPIM_1.c **** }
 398              		.loc 1 331 0
 399 0014 C046     		nop
 400 0016 BD46     		mov	sp, r7
 401 0018 02B0     		add	sp, sp, #8
 402              		@ sp needed
 403 001a 80BD     		pop	{r7, pc}
 404              	.L20:
 405              		.align	2
 406              	.L19:
 407 001c 82000F40 		.word	1074724994
 408              		.cfi_endproc
 409              	.LFE10:
 410              		.size	SPIM_1_SetTxInterruptMode, .-SPIM_1_SetTxInterruptMode
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 14


 411              		.section	.text.SPIM_1_SetRxInterruptMode,"ax",%progbits
 412              		.align	2
 413              		.global	SPIM_1_SetRxInterruptMode
 414              		.code	16
 415              		.thumb_func
 416              		.type	SPIM_1_SetRxInterruptMode, %function
 417              	SPIM_1_SetRxInterruptMode:
 418              	.LFB11:
 332:Generated_Source\PSoC4/SPIM_1.c **** 
 333:Generated_Source\PSoC4/SPIM_1.c **** 
 334:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM_1.c **** *
 338:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM_1.c **** *
 341:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM_1.c **** *
 345:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 346:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 347:Generated_Source\PSoC4/SPIM_1.c **** *
 348:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM_1.c **** *
 351:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM_1.c **** {
 419              		.loc 1 353 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 0200     		movs	r2, r0
 432 0008 FB1D     		adds	r3, r7, #7
 433 000a 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  = intSrc;
 434              		.loc 1 354 0
 435 000c 034A     		ldr	r2, .L22
 436 000e FB1D     		adds	r3, r7, #7
 437 0010 1B78     		ldrb	r3, [r3]
 438 0012 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC4/SPIM_1.c **** }
 439              		.loc 1 355 0
 440 0014 C046     		nop
 441 0016 BD46     		mov	sp, r7
 442 0018 02B0     		add	sp, sp, #8
 443              		@ sp needed
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 15


 444 001a 80BD     		pop	{r7, pc}
 445              	.L23:
 446              		.align	2
 447              	.L22:
 448 001c 83000F40 		.word	1074724995
 449              		.cfi_endproc
 450              	.LFE11:
 451              		.size	SPIM_1_SetRxInterruptMode, .-SPIM_1_SetRxInterruptMode
 452              		.section	.text.SPIM_1_ReadTxStatus,"ax",%progbits
 453              		.align	2
 454              		.global	SPIM_1_ReadTxStatus
 455              		.code	16
 456              		.thumb_func
 457              		.type	SPIM_1_ReadTxStatus, %function
 458              	SPIM_1_ReadTxStatus:
 459              	.LFB12:
 356:Generated_Source\PSoC4/SPIM_1.c **** 
 357:Generated_Source\PSoC4/SPIM_1.c **** 
 358:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM_1.c **** *
 362:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM_1.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM_1.c **** *
 365:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 367:Generated_Source\PSoC4/SPIM_1.c **** *
 368:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 369:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM_1.c **** *
 371:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM_1.c **** *
 375:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM_1.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM_1.c **** *
 379:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM_1.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM_1.c **** *
 382:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 384:Generated_Source\PSoC4/SPIM_1.c **** *
 385:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM_1.c **** {
 460              		.loc 1 387 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 16


 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM_1.c **** 
 390:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM_1.c **** 
 394:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 395:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM_1.c **** 
 397:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM_1.c **** 
 399:Generated_Source\PSoC4/SPIM_1.c ****     #else
 400:Generated_Source\PSoC4/SPIM_1.c **** 
 401:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_TX_STATUS_REG;
 472              		.loc 1 401 0
 473 0006 054A     		ldr	r2, .L26
 474 0008 FB1D     		adds	r3, r7, #7
 475 000a 1278     		ldrb	r2, [r2]
 476 000c 1A70     		strb	r2, [r3]
 402:Generated_Source\PSoC4/SPIM_1.c **** 
 403:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM_1.c **** 
 405:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 477              		.loc 1 405 0
 478 000e FB1D     		adds	r3, r7, #7
 479 0010 1B78     		ldrb	r3, [r3]
 406:Generated_Source\PSoC4/SPIM_1.c **** }
 480              		.loc 1 406 0
 481 0012 1800     		movs	r0, r3
 482 0014 BD46     		mov	sp, r7
 483 0016 02B0     		add	sp, sp, #8
 484              		@ sp needed
 485 0018 80BD     		pop	{r7, pc}
 486              	.L27:
 487 001a C046     		.align	2
 488              	.L26:
 489 001c 62000F40 		.word	1074724962
 490              		.cfi_endproc
 491              	.LFE12:
 492              		.size	SPIM_1_ReadTxStatus, .-SPIM_1_ReadTxStatus
 493              		.section	.text.SPIM_1_ReadRxStatus,"ax",%progbits
 494              		.align	2
 495              		.global	SPIM_1_ReadRxStatus
 496              		.code	16
 497              		.thumb_func
 498              		.type	SPIM_1_ReadRxStatus, %function
 499              	SPIM_1_ReadRxStatus:
 500              	.LFB13:
 407:Generated_Source\PSoC4/SPIM_1.c **** 
 408:Generated_Source\PSoC4/SPIM_1.c **** 
 409:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 17


 413:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM_1.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM_1.c **** *
 416:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 418:Generated_Source\PSoC4/SPIM_1.c **** *
 419:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 420:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM_1.c **** *
 422:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM_1.c **** *
 426:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM_1.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM_1.c **** *
 430:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM_1.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM_1.c **** *
 433:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 435:Generated_Source\PSoC4/SPIM_1.c **** *
 436:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM_1.c **** {
 501              		.loc 1 438 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 82B0     		sub	sp, sp, #8
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM_1.c **** 
 441:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM_1.c **** 
 445:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
 446:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
 447:Generated_Source\PSoC4/SPIM_1.c **** 
 448:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM_1.c **** 
 450:Generated_Source\PSoC4/SPIM_1.c ****     #else
 451:Generated_Source\PSoC4/SPIM_1.c **** 
 452:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus = SPIM_1_RX_STATUS_REG;
 513              		.loc 1 452 0
 514 0006 054A     		ldr	r2, .L30
 515 0008 FB1D     		adds	r3, r7, #7
 516 000a 1278     		ldrb	r2, [r2]
 517 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 18


 453:Generated_Source\PSoC4/SPIM_1.c **** 
 454:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM_1.c **** 
 456:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 518              		.loc 1 456 0
 519 000e FB1D     		adds	r3, r7, #7
 520 0010 1B78     		ldrb	r3, [r3]
 457:Generated_Source\PSoC4/SPIM_1.c **** }
 521              		.loc 1 457 0
 522 0012 1800     		movs	r0, r3
 523 0014 BD46     		mov	sp, r7
 524 0016 02B0     		add	sp, sp, #8
 525              		@ sp needed
 526 0018 80BD     		pop	{r7, pc}
 527              	.L31:
 528 001a C046     		.align	2
 529              	.L30:
 530 001c 63000F40 		.word	1074724963
 531              		.cfi_endproc
 532              	.LFE13:
 533              		.size	SPIM_1_ReadRxStatus, .-SPIM_1_ReadRxStatus
 534              		.section	.text.SPIM_1_WriteTxData,"ax",%progbits
 535              		.align	2
 536              		.global	SPIM_1_WriteTxData
 537              		.code	16
 538              		.thumb_func
 539              		.type	SPIM_1_WriteTxData, %function
 540              	SPIM_1_WriteTxData:
 541              	.LFB14:
 458:Generated_Source\PSoC4/SPIM_1.c **** 
 459:Generated_Source\PSoC4/SPIM_1.c **** 
 460:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_WriteTxData
 462:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM_1.c **** *
 464:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM_1.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM_1.c **** *
 467:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM_1.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM_1.c **** *
 470:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 471:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 472:Generated_Source\PSoC4/SPIM_1.c **** *
 473:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM_1.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM_1.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/SPIM_1.c **** *
 482:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM_1.c **** *
 485:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 19


 486:Generated_Source\PSoC4/SPIM_1.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM_1.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM_1.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM_1.c **** *
 490:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 492:Generated_Source\PSoC4/SPIM_1.c **** *
 493:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM_1.c **** {
 542              		.loc 1 495 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 82B0     		sub	sp, sp, #8
 551              		.cfi_def_cfa_offset 16
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 0200     		movs	r2, r0
 555 0008 FB1D     		adds	r3, r7, #7
 556 000a 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM_1.c **** 
 498:Generated_Source\PSoC4/SPIM_1.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM_1.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM_1.c **** 
 501:Generated_Source\PSoC4/SPIM_1.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM_1.c ****         do
 503:Generated_Source\PSoC4/SPIM_1.c ****         {
 504:Generated_Source\PSoC4/SPIM_1.c ****             tmpTxBufferRead = SPIM_1_txBufferRead;
 505:Generated_Source\PSoC4/SPIM_1.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM_1.c ****             {
 507:Generated_Source\PSoC4/SPIM_1.c ****                 tmpTxBufferRead = (SPIM_1_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM_1.c ****             }
 509:Generated_Source\PSoC4/SPIM_1.c ****             else
 510:Generated_Source\PSoC4/SPIM_1.c ****             {
 511:Generated_Source\PSoC4/SPIM_1.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM_1.c ****             }
 513:Generated_Source\PSoC4/SPIM_1.c **** 
 514:Generated_Source\PSoC4/SPIM_1.c ****         }while(tmpTxBufferRead == SPIM_1_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM_1.c **** 
 516:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM_1.c **** 
 519:Generated_Source\PSoC4/SPIM_1.c ****         tempStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 520:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM_1.c **** 
 522:Generated_Source\PSoC4/SPIM_1.c **** 
 523:Generated_Source\PSoC4/SPIM_1.c ****         if((SPIM_1_txBufferRead == SPIM_1_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM_1.c ****            (0u != (SPIM_1_swStatusTx & SPIM_1_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM_1.c ****         {
 526:Generated_Source\PSoC4/SPIM_1.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM_1.c ****             CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 20


 528:Generated_Source\PSoC4/SPIM_1.c ****         }
 529:Generated_Source\PSoC4/SPIM_1.c ****         else
 530:Generated_Source\PSoC4/SPIM_1.c ****         {
 531:Generated_Source\PSoC4/SPIM_1.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM_1.c ****             if(SPIM_1_txBufferWrite >= SPIM_1_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM_1.c ****             {
 535:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM_1.c ****             }
 537:Generated_Source\PSoC4/SPIM_1.c **** 
 538:Generated_Source\PSoC4/SPIM_1.c ****             if(SPIM_1_txBufferWrite == SPIM_1_txBufferRead)
 539:Generated_Source\PSoC4/SPIM_1.c ****             {
 540:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM_1.c ****                 if(SPIM_1_txBufferRead >= SPIM_1_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM_1.c ****                 {
 543:Generated_Source\PSoC4/SPIM_1.c ****                     SPIM_1_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM_1.c ****                 }
 545:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM_1.c ****             }
 547:Generated_Source\PSoC4/SPIM_1.c **** 
 548:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_txBuffer[SPIM_1_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM_1.c **** 
 550:Generated_Source\PSoC4/SPIM_1.c ****             SPIM_1_TX_STATUS_MASK_REG |= SPIM_1_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM_1.c ****         }
 552:Generated_Source\PSoC4/SPIM_1.c **** 
 553:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM_1.c **** 
 555:Generated_Source\PSoC4/SPIM_1.c ****     #else
 556:Generated_Source\PSoC4/SPIM_1.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM_1.c ****         while(0u == (SPIM_1_TX_STATUS_REG & SPIM_1_STS_TX_FIFO_NOT_FULL))
 557              		.loc 1 557 0
 558 000c C046     		nop
 559              	.L33:
 560              		.loc 1 557 0 is_stmt 0 discriminator 1
 561 000e 074B     		ldr	r3, .L34
 562 0010 1B78     		ldrb	r3, [r3]
 563 0012 DBB2     		uxtb	r3, r3
 564 0014 1A00     		movs	r2, r3
 565 0016 0423     		movs	r3, #4
 566 0018 1340     		ands	r3, r2
 567 001a F8D0     		beq	.L33
 558:Generated_Source\PSoC4/SPIM_1.c ****         {
 559:Generated_Source\PSoC4/SPIM_1.c ****         }
 560:Generated_Source\PSoC4/SPIM_1.c **** 
 561:Generated_Source\PSoC4/SPIM_1.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM_1.c ****         CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
 568              		.loc 1 562 0 is_stmt 1
 569 001c 044A     		ldr	r2, .L34+4
 570 001e FB1D     		adds	r3, r7, #7
 571 0020 1B78     		ldrb	r3, [r3]
 572 0022 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC4/SPIM_1.c **** 
 564:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM_1.c **** }
 573              		.loc 1 565 0
 574 0024 C046     		nop
 575 0026 BD46     		mov	sp, r7
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 21


 576 0028 02B0     		add	sp, sp, #8
 577              		@ sp needed
 578 002a 80BD     		pop	{r7, pc}
 579              	.L35:
 580              		.align	2
 581              	.L34:
 582 002c 62000F40 		.word	1074724962
 583 0030 41000F40 		.word	1074724929
 584              		.cfi_endproc
 585              	.LFE14:
 586              		.size	SPIM_1_WriteTxData, .-SPIM_1_WriteTxData
 587              		.section	.text.SPIM_1_ReadRxData,"ax",%progbits
 588              		.align	2
 589              		.global	SPIM_1_ReadRxData
 590              		.code	16
 591              		.thumb_func
 592              		.type	SPIM_1_ReadRxData, %function
 593              	SPIM_1_ReadRxData:
 594              	.LFB15:
 566:Generated_Source\PSoC4/SPIM_1.c **** 
 567:Generated_Source\PSoC4/SPIM_1.c **** 
 568:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadRxData
 570:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM_1.c **** *
 572:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM_1.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM_1.c **** *
 575:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 577:Generated_Source\PSoC4/SPIM_1.c **** *
 578:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 579:Generated_Source\PSoC4/SPIM_1.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM_1.c **** *
 581:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM_1.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM_1.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM_1.c **** *
 590:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM_1.c **** *
 593:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM_1.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM_1.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM_1.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM_1.c **** *
 598:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 600:Generated_Source\PSoC4/SPIM_1.c **** *
 601:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM_1.c **** {
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 22


 595              		.loc 1 603 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 80B5     		push	{r7, lr}
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 82B0     		sub	sp, sp, #8
 604              		.cfi_def_cfa_offset 16
 605 0004 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC4/SPIM_1.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM_1.c **** 
 606:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM_1.c **** 
 608:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM_1.c **** 
 611:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_rxBufferRead != SPIM_1_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM_1.c ****         {
 613:Generated_Source\PSoC4/SPIM_1.c ****             if(0u == SPIM_1_rxBufferFull)
 614:Generated_Source\PSoC4/SPIM_1.c ****             {
 615:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM_1.c ****                 if(SPIM_1_rxBufferRead >= SPIM_1_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM_1.c ****                 {
 618:Generated_Source\PSoC4/SPIM_1.c ****                     SPIM_1_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM_1.c ****                 }
 620:Generated_Source\PSoC4/SPIM_1.c ****             }
 621:Generated_Source\PSoC4/SPIM_1.c ****             else
 622:Generated_Source\PSoC4/SPIM_1.c ****             {
 623:Generated_Source\PSoC4/SPIM_1.c ****                 SPIM_1_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM_1.c ****             }
 625:Generated_Source\PSoC4/SPIM_1.c ****         }
 626:Generated_Source\PSoC4/SPIM_1.c **** 
 627:Generated_Source\PSoC4/SPIM_1.c ****         rxData = SPIM_1_rxBuffer[SPIM_1_rxBufferRead];
 628:Generated_Source\PSoC4/SPIM_1.c **** 
 629:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM_1.c **** 
 631:Generated_Source\PSoC4/SPIM_1.c ****     #else
 632:Generated_Source\PSoC4/SPIM_1.c **** 
 633:Generated_Source\PSoC4/SPIM_1.c ****         rxData = CY_GET_REG8(SPIM_1_RXDATA_PTR);
 607              		.loc 1 633 0
 608 0006 054A     		ldr	r2, .L38
 609 0008 FB1D     		adds	r3, r7, #7
 610 000a 1278     		ldrb	r2, [r2]
 611 000c 1A70     		strb	r2, [r3]
 634:Generated_Source\PSoC4/SPIM_1.c **** 
 635:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM_1.c **** 
 637:Generated_Source\PSoC4/SPIM_1.c ****     return(rxData);
 612              		.loc 1 637 0
 613 000e FB1D     		adds	r3, r7, #7
 614 0010 1B78     		ldrb	r3, [r3]
 638:Generated_Source\PSoC4/SPIM_1.c **** }
 615              		.loc 1 638 0
 616 0012 1800     		movs	r0, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 23


 617 0014 BD46     		mov	sp, r7
 618 0016 02B0     		add	sp, sp, #8
 619              		@ sp needed
 620 0018 80BD     		pop	{r7, pc}
 621              	.L39:
 622 001a C046     		.align	2
 623              	.L38:
 624 001c 51000F40 		.word	1074724945
 625              		.cfi_endproc
 626              	.LFE15:
 627              		.size	SPIM_1_ReadRxData, .-SPIM_1_ReadRxData
 628              		.section	.text.SPIM_1_GetRxBufferSize,"ax",%progbits
 629              		.align	2
 630              		.global	SPIM_1_GetRxBufferSize
 631              		.code	16
 632              		.thumb_func
 633              		.type	SPIM_1_GetRxBufferSize, %function
 634              	SPIM_1_GetRxBufferSize:
 635              	.LFB16:
 639:Generated_Source\PSoC4/SPIM_1.c **** 
 640:Generated_Source\PSoC4/SPIM_1.c **** 
 641:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM_1.c **** *
 645:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM_1.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM_1.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM_1.c **** *
 650:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 652:Generated_Source\PSoC4/SPIM_1.c **** *
 653:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 654:Generated_Source\PSoC4/SPIM_1.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM_1.c **** *
 656:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM_1.c **** *
 662:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM_1.c **** *
 665:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM_1.c **** {
 636              		.loc 1 667 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 8
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 24


 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC4/SPIM_1.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM_1.c **** 
 670:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM_1.c **** 
 672:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM_1.c **** 
 675:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_rxBufferRead == SPIM_1_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM_1.c ****         {
 677:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM_1.c ****         }
 679:Generated_Source\PSoC4/SPIM_1.c ****         else if(SPIM_1_rxBufferRead < SPIM_1_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM_1.c ****         {
 681:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_rxBufferWrite - SPIM_1_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM_1.c ****         }
 683:Generated_Source\PSoC4/SPIM_1.c ****         else
 684:Generated_Source\PSoC4/SPIM_1.c ****         {
 685:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_RX_BUFFER_SIZE - SPIM_1_rxBufferRead) + SPIM_1_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM_1.c ****         }
 687:Generated_Source\PSoC4/SPIM_1.c **** 
 688:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM_1.c **** 
 690:Generated_Source\PSoC4/SPIM_1.c ****     #else
 691:Generated_Source\PSoC4/SPIM_1.c **** 
 692:Generated_Source\PSoC4/SPIM_1.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM_1.c ****         size = (0u != (SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 648              		.loc 1 693 0
 649 0006 094B     		ldr	r3, .L44
 650 0008 1B78     		ldrb	r3, [r3]
 651 000a DBB2     		uxtb	r3, r3
 652 000c 1A00     		movs	r2, r3
 653 000e 2023     		movs	r3, #32
 654 0010 1340     		ands	r3, r2
 655 0012 01D0     		beq	.L41
 656              		.loc 1 693 0 is_stmt 0 discriminator 1
 657 0014 0122     		movs	r2, #1
 658 0016 00E0     		b	.L42
 659              	.L41:
 660              		.loc 1 693 0 discriminator 2
 661 0018 0022     		movs	r2, #0
 662              	.L42:
 663              		.loc 1 693 0 discriminator 4
 664 001a FB1D     		adds	r3, r7, #7
 665 001c 1A70     		strb	r2, [r3]
 694:Generated_Source\PSoC4/SPIM_1.c **** 
 695:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM_1.c **** 
 697:Generated_Source\PSoC4/SPIM_1.c ****     return(size);
 666              		.loc 1 697 0 is_stmt 1 discriminator 4
 667 001e FB1D     		adds	r3, r7, #7
 668 0020 1B78     		ldrb	r3, [r3]
 698:Generated_Source\PSoC4/SPIM_1.c **** }
 669              		.loc 1 698 0 discriminator 4
 670 0022 1800     		movs	r0, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 25


 671 0024 BD46     		mov	sp, r7
 672 0026 02B0     		add	sp, sp, #8
 673              		@ sp needed
 674 0028 80BD     		pop	{r7, pc}
 675              	.L45:
 676 002a C046     		.align	2
 677              	.L44:
 678 002c 63000F40 		.word	1074724963
 679              		.cfi_endproc
 680              	.LFE16:
 681              		.size	SPIM_1_GetRxBufferSize, .-SPIM_1_GetRxBufferSize
 682              		.section	.text.SPIM_1_GetTxBufferSize,"ax",%progbits
 683              		.align	2
 684              		.global	SPIM_1_GetTxBufferSize
 685              		.code	16
 686              		.thumb_func
 687              		.type	SPIM_1_GetTxBufferSize, %function
 688              	SPIM_1_GetTxBufferSize:
 689              	.LFB17:
 699:Generated_Source\PSoC4/SPIM_1.c **** 
 700:Generated_Source\PSoC4/SPIM_1.c **** 
 701:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM_1.c **** *
 705:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM_1.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM_1.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM_1.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM_1.c **** *
 711:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 713:Generated_Source\PSoC4/SPIM_1.c **** *
 714:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 715:Generated_Source\PSoC4/SPIM_1.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM_1.c **** *
 717:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM_1.c **** *
 723:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM_1.c **** *
 726:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM_1.c **** uint8  SPIM_1_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM_1.c **** {
 690              		.loc 1 728 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694 0000 80B5     		push	{r7, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 26


 698 0002 82B0     		sub	sp, sp, #8
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC4/SPIM_1.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM_1.c **** 
 731:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM_1.c **** 
 735:Generated_Source\PSoC4/SPIM_1.c ****         if(SPIM_1_txBufferRead == SPIM_1_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM_1.c ****         {
 737:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM_1.c ****         }
 739:Generated_Source\PSoC4/SPIM_1.c ****         else if(SPIM_1_txBufferRead < SPIM_1_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM_1.c ****         {
 741:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_txBufferWrite - SPIM_1_txBufferRead);
 742:Generated_Source\PSoC4/SPIM_1.c ****         }
 743:Generated_Source\PSoC4/SPIM_1.c ****         else
 744:Generated_Source\PSoC4/SPIM_1.c ****         {
 745:Generated_Source\PSoC4/SPIM_1.c ****             size = (SPIM_1_TX_BUFFER_SIZE - SPIM_1_txBufferRead) + SPIM_1_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM_1.c ****         }
 747:Generated_Source\PSoC4/SPIM_1.c **** 
 748:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM_1.c **** 
 750:Generated_Source\PSoC4/SPIM_1.c ****     #else
 751:Generated_Source\PSoC4/SPIM_1.c **** 
 752:Generated_Source\PSoC4/SPIM_1.c ****         size = SPIM_1_TX_STATUS_REG;
 702              		.loc 1 752 0
 703 0006 0F4A     		ldr	r2, .L51
 704 0008 FB1D     		adds	r3, r7, #7
 705 000a 1278     		ldrb	r2, [r2]
 706 000c 1A70     		strb	r2, [r3]
 753:Generated_Source\PSoC4/SPIM_1.c **** 
 754:Generated_Source\PSoC4/SPIM_1.c ****         if(0u != (size & SPIM_1_STS_TX_FIFO_EMPTY))
 707              		.loc 1 754 0
 708 000e FB1D     		adds	r3, r7, #7
 709 0010 1B78     		ldrb	r3, [r3]
 710 0012 0222     		movs	r2, #2
 711 0014 1340     		ands	r3, r2
 712 0016 03D0     		beq	.L47
 755:Generated_Source\PSoC4/SPIM_1.c ****         {
 756:Generated_Source\PSoC4/SPIM_1.c ****             size = 0u;
 713              		.loc 1 756 0
 714 0018 FB1D     		adds	r3, r7, #7
 715 001a 0022     		movs	r2, #0
 716 001c 1A70     		strb	r2, [r3]
 717 001e 0BE0     		b	.L48
 718              	.L47:
 757:Generated_Source\PSoC4/SPIM_1.c ****         }
 758:Generated_Source\PSoC4/SPIM_1.c ****         else if(0u != (size & SPIM_1_STS_TX_FIFO_NOT_FULL))
 719              		.loc 1 758 0
 720 0020 FB1D     		adds	r3, r7, #7
 721 0022 1B78     		ldrb	r3, [r3]
 722 0024 0422     		movs	r2, #4
 723 0026 1340     		ands	r3, r2
 724 0028 03D0     		beq	.L49
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 27


 759:Generated_Source\PSoC4/SPIM_1.c ****         {
 760:Generated_Source\PSoC4/SPIM_1.c ****             size = 1u;
 725              		.loc 1 760 0
 726 002a FB1D     		adds	r3, r7, #7
 727 002c 0122     		movs	r2, #1
 728 002e 1A70     		strb	r2, [r3]
 729 0030 02E0     		b	.L48
 730              	.L49:
 761:Generated_Source\PSoC4/SPIM_1.c ****         }
 762:Generated_Source\PSoC4/SPIM_1.c ****         else
 763:Generated_Source\PSoC4/SPIM_1.c ****         {
 764:Generated_Source\PSoC4/SPIM_1.c ****             size = SPIM_1_FIFO_SIZE;
 731              		.loc 1 764 0
 732 0032 FB1D     		adds	r3, r7, #7
 733 0034 0422     		movs	r2, #4
 734 0036 1A70     		strb	r2, [r3]
 735              	.L48:
 765:Generated_Source\PSoC4/SPIM_1.c ****         }
 766:Generated_Source\PSoC4/SPIM_1.c **** 
 767:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM_1.c **** 
 769:Generated_Source\PSoC4/SPIM_1.c ****     return(size);
 736              		.loc 1 769 0
 737 0038 FB1D     		adds	r3, r7, #7
 738 003a 1B78     		ldrb	r3, [r3]
 770:Generated_Source\PSoC4/SPIM_1.c **** }
 739              		.loc 1 770 0
 740 003c 1800     		movs	r0, r3
 741 003e BD46     		mov	sp, r7
 742 0040 02B0     		add	sp, sp, #8
 743              		@ sp needed
 744 0042 80BD     		pop	{r7, pc}
 745              	.L52:
 746              		.align	2
 747              	.L51:
 748 0044 62000F40 		.word	1074724962
 749              		.cfi_endproc
 750              	.LFE17:
 751              		.size	SPIM_1_GetTxBufferSize, .-SPIM_1_GetTxBufferSize
 752              		.section	.text.SPIM_1_ClearRxBuffer,"ax",%progbits
 753              		.align	2
 754              		.global	SPIM_1_ClearRxBuffer
 755              		.code	16
 756              		.thumb_func
 757              		.type	SPIM_1_ClearRxBuffer, %function
 758              	SPIM_1_ClearRxBuffer:
 759              	.LFB18:
 771:Generated_Source\PSoC4/SPIM_1.c **** 
 772:Generated_Source\PSoC4/SPIM_1.c **** 
 773:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM_1.c **** *
 777:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM_1.c **** *
 780:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 28


 781:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 782:Generated_Source\PSoC4/SPIM_1.c **** *
 783:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 784:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 785:Generated_Source\PSoC4/SPIM_1.c **** *
 786:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM_1.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM_1.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM_1.c **** *
 794:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM_1.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM_1.c **** *
 799:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM_1.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM_1.c **** *
 802:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 804:Generated_Source\PSoC4/SPIM_1.c **** *
 805:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM_1.c **** {
 760              		.loc 1 807 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 770              		.loc 1 809 0
 771 0004 01E0     		b	.L54
 772              	.L55:
 810:Generated_Source\PSoC4/SPIM_1.c ****     {
 811:Generated_Source\PSoC4/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 773              		.loc 1 811 0
 774 0006 064B     		ldr	r3, .L56
 775 0008 1B78     		ldrb	r3, [r3]
 776              	.L54:
 809:Generated_Source\PSoC4/SPIM_1.c ****     {
 777              		.loc 1 809 0
 778 000a 064B     		ldr	r3, .L56+4
 779 000c 1B78     		ldrb	r3, [r3]
 780 000e DBB2     		uxtb	r3, r3
 781 0010 1A00     		movs	r2, r3
 782 0012 2023     		movs	r3, #32
 783 0014 1340     		ands	r3, r2
 784 0016 F6D1     		bne	.L55
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 29


 812:Generated_Source\PSoC4/SPIM_1.c ****     }
 813:Generated_Source\PSoC4/SPIM_1.c **** 
 814:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM_1.c **** 
 818:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM_1.c **** 
 822:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM_1.c **** }
 785              		.loc 1 824 0
 786 0018 C046     		nop
 787 001a BD46     		mov	sp, r7
 788              		@ sp needed
 789 001c 80BD     		pop	{r7, pc}
 790              	.L57:
 791 001e C046     		.align	2
 792              	.L56:
 793 0020 51000F40 		.word	1074724945
 794 0024 63000F40 		.word	1074724963
 795              		.cfi_endproc
 796              	.LFE18:
 797              		.size	SPIM_1_ClearRxBuffer, .-SPIM_1_ClearRxBuffer
 798              		.section	.text.SPIM_1_ClearTxBuffer,"ax",%progbits
 799              		.align	2
 800              		.global	SPIM_1_ClearTxBuffer
 801              		.code	16
 802              		.thumb_func
 803              		.type	SPIM_1_ClearTxBuffer, %function
 804              	SPIM_1_ClearTxBuffer:
 805              	.LFB19:
 825:Generated_Source\PSoC4/SPIM_1.c **** 
 826:Generated_Source\PSoC4/SPIM_1.c **** 
 827:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM_1.c **** *
 831:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM_1.c **** *
 834:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 836:Generated_Source\PSoC4/SPIM_1.c **** *
 837:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 838:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 839:Generated_Source\PSoC4/SPIM_1.c **** *
 840:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM_1.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM_1.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM_1.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 30


 848:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM_1.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM_1.c **** *
 853:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM_1.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM_1.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM_1.c **** *
 857:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 859:Generated_Source\PSoC4/SPIM_1.c **** *
 860:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM_1.c **** {
 806              		.loc 1 862 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 90B5     		push	{r4, r7, lr}
 811              		.cfi_def_cfa_offset 12
 812              		.cfi_offset 4, -12
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 83B0     		sub	sp, sp, #12
 816              		.cfi_def_cfa_offset 24
 817 0004 00AF     		add	r7, sp, #0
 818              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM_1.c **** 
 865:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 819              		.loc 1 865 0
 820 0006 FC1D     		adds	r4, r7, #7
 821 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 822 000c 0300     		movs	r3, r0
 823 000e 2370     		strb	r3, [r4]
 866:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 824              		.loc 1 867 0
 825 0010 0C4A     		ldr	r2, .L59
 826 0012 0C4B     		ldr	r3, .L59
 827 0014 1B78     		ldrb	r3, [r3]
 828 0016 DBB2     		uxtb	r3, r3
 829 0018 0121     		movs	r1, #1
 830 001a 0B43     		orrs	r3, r1
 831 001c DBB2     		uxtb	r3, r3
 832 001e 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 833              		.loc 1 868 0
 834 0020 084A     		ldr	r2, .L59
 835 0022 084B     		ldr	r3, .L59
 836 0024 1B78     		ldrb	r3, [r3]
 837 0026 DBB2     		uxtb	r3, r3
 838 0028 0121     		movs	r1, #1
 839 002a 8B43     		bics	r3, r1
 840 002c DBB2     		uxtb	r3, r3
 841 002e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 31


 869:Generated_Source\PSoC4/SPIM_1.c **** 
 870:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 842              		.loc 1 875 0
 843 0030 FB1D     		adds	r3, r7, #7
 844 0032 1B78     		ldrb	r3, [r3]
 845 0034 1800     		movs	r0, r3
 846 0036 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC4/SPIM_1.c **** 
 877:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM_1.c **** 
 881:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM_1.c **** 
 885:Generated_Source\PSoC4/SPIM_1.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_1_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM_1.c **** 
 888:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableTxInt();
 889:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM_1.c **** }
 847              		.loc 1 890 0
 848 003a C046     		nop
 849 003c BD46     		mov	sp, r7
 850 003e 03B0     		add	sp, sp, #12
 851              		@ sp needed
 852 0040 90BD     		pop	{r4, r7, pc}
 853              	.L60:
 854 0042 C046     		.align	2
 855              	.L59:
 856 0044 91000F40 		.word	1074725009
 857              		.cfi_endproc
 858              	.LFE19:
 859              		.size	SPIM_1_ClearTxBuffer, .-SPIM_1_ClearTxBuffer
 860              		.section	.text.SPIM_1_PutArray,"ax",%progbits
 861              		.align	2
 862              		.global	SPIM_1_PutArray
 863              		.code	16
 864              		.thumb_func
 865              		.type	SPIM_1_PutArray, %function
 866              	SPIM_1_PutArray:
 867              	.LFB20:
 891:Generated_Source\PSoC4/SPIM_1.c **** 
 892:Generated_Source\PSoC4/SPIM_1.c **** 
 893:Generated_Source\PSoC4/SPIM_1.c **** #if(0u != SPIM_1_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM_1.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM_1.c ****     * Function Name: SPIM_1_TxEnable
 896:Generated_Source\PSoC4/SPIM_1.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM_1.c ****     *
 898:Generated_Source\PSoC4/SPIM_1.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 32


 900:Generated_Source\PSoC4/SPIM_1.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM_1.c ****     *
 902:Generated_Source\PSoC4/SPIM_1.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM_1.c ****     *
 905:Generated_Source\PSoC4/SPIM_1.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM_1.c ****     *
 908:Generated_Source\PSoC4/SPIM_1.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM_1.c ****     void SPIM_1_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM_1.c ****     {
 911:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_CONTROL_REG |= SPIM_1_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM_1.c ****     }
 913:Generated_Source\PSoC4/SPIM_1.c **** 
 914:Generated_Source\PSoC4/SPIM_1.c **** 
 915:Generated_Source\PSoC4/SPIM_1.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM_1.c ****     * Function Name: SPIM_1_TxDisable
 917:Generated_Source\PSoC4/SPIM_1.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM_1.c ****     *
 919:Generated_Source\PSoC4/SPIM_1.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM_1.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM_1.c ****     *
 923:Generated_Source\PSoC4/SPIM_1.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM_1.c ****     *
 926:Generated_Source\PSoC4/SPIM_1.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM_1.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM_1.c ****     *
 929:Generated_Source\PSoC4/SPIM_1.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM_1.c ****     void SPIM_1_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM_1.c ****     {
 932:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_CONTROL_REG &= ((uint8) ~SPIM_1_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM_1.c ****     }
 934:Generated_Source\PSoC4/SPIM_1.c **** 
 935:Generated_Source\PSoC4/SPIM_1.c **** #endif /* (0u != SPIM_1_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM_1.c **** 
 937:Generated_Source\PSoC4/SPIM_1.c **** 
 938:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_PutArray
 940:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM_1.c **** *
 942:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM_1.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM_1.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM_1.c **** *
 946:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM_1.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM_1.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM_1.c **** *
 950:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 951:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 952:Generated_Source\PSoC4/SPIM_1.c **** *
 953:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM_1.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM_1.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM_1.c **** *  enough room in the TX FIFO.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 33


 957:Generated_Source\PSoC4/SPIM_1.c **** *
 958:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM_1.c **** *  No.
 960:Generated_Source\PSoC4/SPIM_1.c **** *
 961:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM_1.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM_1.c **** {
 868              		.loc 1 964 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 16
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872 0000 80B5     		push	{r7, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 7, -8
 875              		.cfi_offset 14, -4
 876 0002 84B0     		sub	sp, sp, #16
 877              		.cfi_def_cfa_offset 24
 878 0004 00AF     		add	r7, sp, #0
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 881 0008 0A00     		movs	r2, r1
 882 000a FB1C     		adds	r3, r7, #3
 883 000c 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC4/SPIM_1.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM_1.c **** 
 967:Generated_Source\PSoC4/SPIM_1.c ****     bufIndex = 0u;
 884              		.loc 1 967 0
 885 000e 0F23     		movs	r3, #15
 886 0010 FB18     		adds	r3, r7, r3
 887 0012 0022     		movs	r2, #0
 888 0014 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/SPIM_1.c **** 
 969:Generated_Source\PSoC4/SPIM_1.c ****     while(byteCount > 0u)
 889              		.loc 1 969 0
 890 0016 14E0     		b	.L62
 891              	.L63:
 970:Generated_Source\PSoC4/SPIM_1.c ****     {
 971:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_WriteTxData(buffer[bufIndex]);
 892              		.loc 1 971 0
 893 0018 0F23     		movs	r3, #15
 894 001a FB18     		adds	r3, r7, r3
 895 001c 1B78     		ldrb	r3, [r3]
 896 001e 7A68     		ldr	r2, [r7, #4]
 897 0020 D318     		adds	r3, r2, r3
 898 0022 1B78     		ldrb	r3, [r3]
 899 0024 1800     		movs	r0, r3
 900 0026 FFF7FEFF 		bl	SPIM_1_WriteTxData
 972:Generated_Source\PSoC4/SPIM_1.c ****         bufIndex++;
 901              		.loc 1 972 0
 902 002a 0F23     		movs	r3, #15
 903 002c FB18     		adds	r3, r7, r3
 904 002e 1A78     		ldrb	r2, [r3]
 905 0030 0F23     		movs	r3, #15
 906 0032 FB18     		adds	r3, r7, r3
 907 0034 0132     		adds	r2, r2, #1
 908 0036 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 34


 973:Generated_Source\PSoC4/SPIM_1.c ****         byteCount--;
 909              		.loc 1 973 0
 910 0038 FB1C     		adds	r3, r7, #3
 911 003a 1A78     		ldrb	r2, [r3]
 912 003c FB1C     		adds	r3, r7, #3
 913 003e 013A     		subs	r2, r2, #1
 914 0040 1A70     		strb	r2, [r3]
 915              	.L62:
 969:Generated_Source\PSoC4/SPIM_1.c ****     {
 916              		.loc 1 969 0
 917 0042 FB1C     		adds	r3, r7, #3
 918 0044 1B78     		ldrb	r3, [r3]
 919 0046 002B     		cmp	r3, #0
 920 0048 E6D1     		bne	.L63
 974:Generated_Source\PSoC4/SPIM_1.c ****     }
 975:Generated_Source\PSoC4/SPIM_1.c **** }
 921              		.loc 1 975 0
 922 004a C046     		nop
 923 004c BD46     		mov	sp, r7
 924 004e 04B0     		add	sp, sp, #16
 925              		@ sp needed
 926 0050 80BD     		pop	{r7, pc}
 927              		.cfi_endproc
 928              	.LFE20:
 929              		.size	SPIM_1_PutArray, .-SPIM_1_PutArray
 930 0052 C046     		.section	.text.SPIM_1_ClearFIFO,"ax",%progbits
 931              		.align	2
 932              		.global	SPIM_1_ClearFIFO
 933              		.code	16
 934              		.thumb_func
 935              		.type	SPIM_1_ClearFIFO, %function
 936              	SPIM_1_ClearFIFO:
 937              	.LFB21:
 976:Generated_Source\PSoC4/SPIM_1.c **** 
 977:Generated_Source\PSoC4/SPIM_1.c **** 
 978:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ClearFIFO
 980:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM_1.c **** *
 982:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM_1.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM_1.c **** *
 985:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 987:Generated_Source\PSoC4/SPIM_1.c **** *
 988:Generated_Source\PSoC4/SPIM_1.c **** * Return:
 989:Generated_Source\PSoC4/SPIM_1.c **** *  None.
 990:Generated_Source\PSoC4/SPIM_1.c **** *
 991:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM_1.c **** *
 994:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM_1.c **** {
 938              		.loc 1 996 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 35


 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942 0000 90B5     		push	{r4, r7, lr}
 943              		.cfi_def_cfa_offset 12
 944              		.cfi_offset 4, -12
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 83B0     		sub	sp, sp, #12
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC4/SPIM_1.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM_1.c **** 
 999:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 951              		.loc 1 1000 0
 952 0006 01E0     		b	.L65
 953              	.L66:
1001:Generated_Source\PSoC4/SPIM_1.c ****     {
1002:Generated_Source\PSoC4/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 954              		.loc 1 1002 0
 955 0008 134B     		ldr	r3, .L67
 956 000a 1B78     		ldrb	r3, [r3]
 957              	.L65:
1000:Generated_Source\PSoC4/SPIM_1.c ****     {
 958              		.loc 1 1000 0
 959 000c 134B     		ldr	r3, .L67+4
 960 000e 1B78     		ldrb	r3, [r3]
 961 0010 DBB2     		uxtb	r3, r3
 962 0012 1A00     		movs	r2, r3
 963 0014 2023     		movs	r3, #32
 964 0016 1340     		ands	r3, r2
 965 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC4/SPIM_1.c ****     }
1004:Generated_Source\PSoC4/SPIM_1.c **** 
1005:Generated_Source\PSoC4/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 966              		.loc 1 1005 0
 967 001a FC1D     		adds	r4, r7, #7
 968 001c FFF7FEFF 		bl	CyEnterCriticalSection
 969 0020 0300     		movs	r3, r0
 970 0022 2370     		strb	r3, [r4]
1006:Generated_Source\PSoC4/SPIM_1.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 971              		.loc 1 1007 0
 972 0024 0E4A     		ldr	r2, .L67+8
 973 0026 0E4B     		ldr	r3, .L67+8
 974 0028 1B78     		ldrb	r3, [r3]
 975 002a DBB2     		uxtb	r3, r3
 976 002c 0121     		movs	r1, #1
 977 002e 0B43     		orrs	r3, r1
 978 0030 DBB2     		uxtb	r3, r3
 979 0032 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 980              		.loc 1 1008 0
 981 0034 0A4A     		ldr	r2, .L67+8
 982 0036 0A4B     		ldr	r3, .L67+8
 983 0038 1B78     		ldrb	r3, [r3]
 984 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 36


 985 003c 0121     		movs	r1, #1
 986 003e 8B43     		bics	r3, r1
 987 0040 DBB2     		uxtb	r3, r3
 988 0042 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM_1.c **** 
1010:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 989              		.loc 1 1015 0
 990 0044 FB1D     		adds	r3, r7, #7
 991 0046 1B78     		ldrb	r3, [r3]
 992 0048 1800     		movs	r0, r3
 993 004a FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC4/SPIM_1.c **** }
 994              		.loc 1 1016 0
 995 004e C046     		nop
 996 0050 BD46     		mov	sp, r7
 997 0052 03B0     		add	sp, sp, #12
 998              		@ sp needed
 999 0054 90BD     		pop	{r4, r7, pc}
 1000              	.L68:
 1001 0056 C046     		.align	2
 1002              	.L67:
 1003 0058 51000F40 		.word	1074724945
 1004 005c 63000F40 		.word	1074724963
 1005 0060 91000F40 		.word	1074725009
 1006              		.cfi_endproc
 1007              	.LFE21:
 1008              		.size	SPIM_1_ClearFIFO, .-SPIM_1_ClearFIFO
 1009              		.section	.text.SPIM_1_EnableInt,"ax",%progbits
 1010              		.align	2
 1011              		.global	SPIM_1_EnableInt
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	SPIM_1_EnableInt, %function
 1015              	SPIM_1_EnableInt:
 1016              	.LFB22:
1017:Generated_Source\PSoC4/SPIM_1.c **** 
1018:Generated_Source\PSoC4/SPIM_1.c **** 
1019:Generated_Source\PSoC4/SPIM_1.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM_1.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM_1.c **** */
1022:Generated_Source\PSoC4/SPIM_1.c **** 
1023:Generated_Source\PSoC4/SPIM_1.c **** 
1024:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_EnableInt
1026:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM_1.c **** *
1028:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1029:Generated_Source\PSoC4/SPIM_1.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM_1.c **** *
1031:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1033:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 37


1034:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1035:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1036:Generated_Source\PSoC4/SPIM_1.c **** *
1037:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM_1.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM_1.c **** *
1040:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM_1.c **** {
 1017              		.loc 1 1042 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableRxInt();
 1027              		.loc 1 1043 0
 1028 0004 FFF7FEFF 		bl	SPIM_1_EnableRxInt
1044:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_EnableTxInt();
 1029              		.loc 1 1044 0
 1030 0008 FFF7FEFF 		bl	SPIM_1_EnableTxInt
1045:Generated_Source\PSoC4/SPIM_1.c **** }
 1031              		.loc 1 1045 0
 1032 000c C046     		nop
 1033 000e BD46     		mov	sp, r7
 1034              		@ sp needed
 1035 0010 80BD     		pop	{r7, pc}
 1036              		.cfi_endproc
 1037              	.LFE22:
 1038              		.size	SPIM_1_EnableInt, .-SPIM_1_EnableInt
 1039 0012 C046     		.section	.text.SPIM_1_DisableInt,"ax",%progbits
 1040              		.align	2
 1041              		.global	SPIM_1_DisableInt
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	SPIM_1_DisableInt, %function
 1045              	SPIM_1_DisableInt:
 1046              	.LFB23:
1046:Generated_Source\PSoC4/SPIM_1.c **** 
1047:Generated_Source\PSoC4/SPIM_1.c **** 
1048:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_DisableInt
1050:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM_1.c **** *
1052:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM_1.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM_1.c **** *
1055:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1057:Generated_Source\PSoC4/SPIM_1.c **** *
1058:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1059:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1060:Generated_Source\PSoC4/SPIM_1.c **** *
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 38


1061:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM_1.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM_1.c **** *
1064:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM_1.c **** {
 1047              		.loc 1 1066 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 1, uses_anonymous_args = 0
 1051 0000 80B5     		push	{r7, lr}
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableTxInt();
 1057              		.loc 1 1067 0
 1058 0004 FFF7FEFF 		bl	SPIM_1_DisableTxInt
1068:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_DisableRxInt();
 1059              		.loc 1 1068 0
 1060 0008 FFF7FEFF 		bl	SPIM_1_DisableRxInt
1069:Generated_Source\PSoC4/SPIM_1.c **** }
 1061              		.loc 1 1069 0
 1062 000c C046     		nop
 1063 000e BD46     		mov	sp, r7
 1064              		@ sp needed
 1065 0010 80BD     		pop	{r7, pc}
 1066              		.cfi_endproc
 1067              	.LFE23:
 1068              		.size	SPIM_1_DisableInt, .-SPIM_1_DisableInt
 1069 0012 C046     		.section	.text.SPIM_1_SetInterruptMode,"ax",%progbits
 1070              		.align	2
 1071              		.global	SPIM_1_SetInterruptMode
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	SPIM_1_SetInterruptMode, %function
 1075              	SPIM_1_SetInterruptMode:
 1076              	.LFB24:
1070:Generated_Source\PSoC4/SPIM_1.c **** 
1071:Generated_Source\PSoC4/SPIM_1.c **** 
1072:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM_1.c **** *
1076:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM_1.c **** *
1079:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM_1.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM_1.c **** *
1083:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1084:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1085:Generated_Source\PSoC4/SPIM_1.c **** *
1086:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 39


1088:Generated_Source\PSoC4/SPIM_1.c **** *
1089:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM_1.c **** void SPIM_1_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM_1.c **** {
 1077              		.loc 1 1091 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 0000 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 0002 82B0     		sub	sp, sp, #8
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 0200     		movs	r2, r0
 1090 0008 FB1D     		adds	r3, r7, #7
 1091 000a 1A70     		strb	r2, [r3]
1092:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_1_STS_SPI_IDLE));
 1092              		.loc 1 1092 0
 1093 000c 074A     		ldr	r2, .L72
 1094 000e FB1D     		adds	r3, r7, #7
 1095 0010 1B78     		ldrb	r3, [r3]
 1096 0012 1021     		movs	r1, #16
 1097 0014 8B43     		bics	r3, r1
 1098 0016 DBB2     		uxtb	r3, r3
 1099 0018 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC4/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  =  intSrc;
 1100              		.loc 1 1093 0
 1101 001a 054A     		ldr	r2, .L72+4
 1102 001c FB1D     		adds	r3, r7, #7
 1103 001e 1B78     		ldrb	r3, [r3]
 1104 0020 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC4/SPIM_1.c **** }
 1105              		.loc 1 1094 0
 1106 0022 C046     		nop
 1107 0024 BD46     		mov	sp, r7
 1108 0026 02B0     		add	sp, sp, #8
 1109              		@ sp needed
 1110 0028 80BD     		pop	{r7, pc}
 1111              	.L73:
 1112 002a C046     		.align	2
 1113              	.L72:
 1114 002c 82000F40 		.word	1074724994
 1115 0030 83000F40 		.word	1074724995
 1116              		.cfi_endproc
 1117              	.LFE24:
 1118              		.size	SPIM_1_SetInterruptMode, .-SPIM_1_SetInterruptMode
 1119              		.section	.text.SPIM_1_ReadStatus,"ax",%progbits
 1120              		.align	2
 1121              		.global	SPIM_1_ReadStatus
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	SPIM_1_ReadStatus, %function
 1125              	SPIM_1_ReadStatus:
 1126              	.LFB25:
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 40


1095:Generated_Source\PSoC4/SPIM_1.c **** 
1096:Generated_Source\PSoC4/SPIM_1.c **** 
1097:Generated_Source\PSoC4/SPIM_1.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM_1.c **** * Function Name: SPIM_1_ReadStatus
1099:Generated_Source\PSoC4/SPIM_1.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM_1.c **** *
1101:Generated_Source\PSoC4/SPIM_1.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM_1.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM_1.c **** *
1104:Generated_Source\PSoC4/SPIM_1.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM_1.c **** *  None.
1106:Generated_Source\PSoC4/SPIM_1.c **** *
1107:Generated_Source\PSoC4/SPIM_1.c **** * Return:
1108:Generated_Source\PSoC4/SPIM_1.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM_1.c **** *
1110:Generated_Source\PSoC4/SPIM_1.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM_1.c **** *  SPIM_1_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM_1.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM_1.c **** *
1114:Generated_Source\PSoC4/SPIM_1.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM_1.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM_1.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM_1.c **** *
1118:Generated_Source\PSoC4/SPIM_1.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM_1.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM_1.c **** *
1121:Generated_Source\PSoC4/SPIM_1.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM_1.c **** *  No.
1123:Generated_Source\PSoC4/SPIM_1.c **** *
1124:Generated_Source\PSoC4/SPIM_1.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM_1.c **** uint8 SPIM_1_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM_1.c **** {
 1127              		.loc 1 1126 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 8
 1130              		@ frame_needed = 1, uses_anonymous_args = 0
 1131 0000 80B5     		push	{r7, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 0002 82B0     		sub	sp, sp, #8
 1136              		.cfi_def_cfa_offset 16
 1137 0004 00AF     		add	r7, sp, #0
 1138              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC4/SPIM_1.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM_1.c **** 
1129:Generated_Source\PSoC4/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM_1.c **** 
1131:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_DisableInt();
1132:Generated_Source\PSoC4/SPIM_1.c **** 
1133:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus  = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
1134:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus |= SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
1135:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM_1.c **** 
1137:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM_1.c **** 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 41


1140:Generated_Source\PSoC4/SPIM_1.c ****         SPIM_1_EnableInt();
1141:Generated_Source\PSoC4/SPIM_1.c **** 
1142:Generated_Source\PSoC4/SPIM_1.c ****     #else
1143:Generated_Source\PSoC4/SPIM_1.c **** 
1144:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus  = SPIM_1_RX_STATUS_REG;
 1139              		.loc 1 1144 0
 1140 0006 0C4A     		ldr	r2, .L76
 1141 0008 FB1D     		adds	r3, r7, #7
 1142 000a 1278     		ldrb	r2, [r2]
 1143 000c 1A70     		strb	r2, [r3]
1145:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus |= SPIM_1_TX_STATUS_REG;
 1144              		.loc 1 1145 0
 1145 000e 0B4B     		ldr	r3, .L76+4
 1146 0010 1B78     		ldrb	r3, [r3]
 1147 0012 D9B2     		uxtb	r1, r3
 1148 0014 FB1D     		adds	r3, r7, #7
 1149 0016 FA1D     		adds	r2, r7, #7
 1150 0018 1278     		ldrb	r2, [r2]
 1151 001a 0A43     		orrs	r2, r1
 1152 001c 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
 1153              		.loc 1 1146 0
 1154 001e FB1D     		adds	r3, r7, #7
 1155 0020 FA1D     		adds	r2, r7, #7
 1156 0022 1278     		ldrb	r2, [r2]
 1157 0024 1021     		movs	r1, #16
 1158 0026 8A43     		bics	r2, r1
 1159 0028 1A70     		strb	r2, [r3]
1147:Generated_Source\PSoC4/SPIM_1.c **** 
1148:Generated_Source\PSoC4/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM_1.c **** 
1150:Generated_Source\PSoC4/SPIM_1.c ****     return(tmpStatus);
 1160              		.loc 1 1150 0
 1161 002a FB1D     		adds	r3, r7, #7
 1162 002c 1B78     		ldrb	r3, [r3]
1151:Generated_Source\PSoC4/SPIM_1.c **** }
 1163              		.loc 1 1151 0
 1164 002e 1800     		movs	r0, r3
 1165 0030 BD46     		mov	sp, r7
 1166 0032 02B0     		add	sp, sp, #8
 1167              		@ sp needed
 1168 0034 80BD     		pop	{r7, pc}
 1169              	.L77:
 1170 0036 C046     		.align	2
 1171              	.L76:
 1172 0038 63000F40 		.word	1074724963
 1173 003c 62000F40 		.word	1074724962
 1174              		.cfi_endproc
 1175              	.LFE25:
 1176              		.size	SPIM_1_ReadStatus, .-SPIM_1_ReadStatus
 1177              		.text
 1178              	.Letext0:
 1179              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1180              		.section	.debug_info,"",%progbits
 1181              	.Ldebug_info0:
 1182 0000 F0030000 		.4byte	0x3f0
 1183 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 42


 1184 0006 00000000 		.4byte	.Ldebug_abbrev0
 1185 000a 04       		.byte	0x4
 1186 000b 01       		.uleb128 0x1
 1187 000c 6A010000 		.4byte	.LASF52
 1188 0010 0C       		.byte	0xc
 1189 0011 6A030000 		.4byte	.LASF53
 1190 0015 81000000 		.4byte	.LASF54
 1191 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1192 001d 00000000 		.4byte	0
 1193 0021 00000000 		.4byte	.Ldebug_line0
 1194 0025 02       		.uleb128 0x2
 1195 0026 01       		.byte	0x1
 1196 0027 06       		.byte	0x6
 1197 0028 CD030000 		.4byte	.LASF0
 1198 002c 02       		.uleb128 0x2
 1199 002d 01       		.byte	0x1
 1200 002e 08       		.byte	0x8
 1201 002f 1A020000 		.4byte	.LASF1
 1202 0033 02       		.uleb128 0x2
 1203 0034 02       		.byte	0x2
 1204 0035 05       		.byte	0x5
 1205 0036 44030000 		.4byte	.LASF2
 1206 003a 02       		.uleb128 0x2
 1207 003b 02       		.byte	0x2
 1208 003c 07       		.byte	0x7
 1209 003d 61000000 		.4byte	.LASF3
 1210 0041 02       		.uleb128 0x2
 1211 0042 04       		.byte	0x4
 1212 0043 05       		.byte	0x5
 1213 0044 9C030000 		.4byte	.LASF4
 1214 0048 02       		.uleb128 0x2
 1215 0049 04       		.byte	0x4
 1216 004a 07       		.byte	0x7
 1217 004b 52010000 		.4byte	.LASF5
 1218 004f 02       		.uleb128 0x2
 1219 0050 08       		.byte	0x8
 1220 0051 05       		.byte	0x5
 1221 0052 0D030000 		.4byte	.LASF6
 1222 0056 02       		.uleb128 0x2
 1223 0057 08       		.byte	0x8
 1224 0058 07       		.byte	0x7
 1225 0059 A1020000 		.4byte	.LASF7
 1226 005d 03       		.uleb128 0x3
 1227 005e 04       		.byte	0x4
 1228 005f 05       		.byte	0x5
 1229 0060 696E7400 		.ascii	"int\000"
 1230 0064 02       		.uleb128 0x2
 1231 0065 04       		.byte	0x4
 1232 0066 07       		.byte	0x7
 1233 0067 74000000 		.4byte	.LASF8
 1234 006b 04       		.uleb128 0x4
 1235 006c 64010000 		.4byte	.LASF12
 1236 0070 02       		.byte	0x2
 1237 0071 FC01     		.2byte	0x1fc
 1238 0073 2C000000 		.4byte	0x2c
 1239 0077 02       		.uleb128 0x2
 1240 0078 04       		.byte	0x4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 43


 1241 0079 04       		.byte	0x4
 1242 007a 1B030000 		.4byte	.LASF9
 1243 007e 02       		.uleb128 0x2
 1244 007f 08       		.byte	0x8
 1245 0080 04       		.byte	0x4
 1246 0081 3A020000 		.4byte	.LASF10
 1247 0085 02       		.uleb128 0x2
 1248 0086 01       		.byte	0x1
 1249 0087 08       		.byte	0x8
 1250 0088 21030000 		.4byte	.LASF11
 1251 008c 04       		.uleb128 0x4
 1252 008d 4D010000 		.4byte	.LASF13
 1253 0091 02       		.byte	0x2
 1254 0092 A602     		.2byte	0x2a6
 1255 0094 98000000 		.4byte	0x98
 1256 0098 05       		.uleb128 0x5
 1257 0099 6B000000 		.4byte	0x6b
 1258 009d 02       		.uleb128 0x2
 1259 009e 08       		.byte	0x8
 1260 009f 04       		.byte	0x4
 1261 00a0 AF030000 		.4byte	.LASF14
 1262 00a4 02       		.uleb128 0x2
 1263 00a5 04       		.byte	0x4
 1264 00a6 07       		.byte	0x7
 1265 00a7 04030000 		.4byte	.LASF15
 1266 00ab 06       		.uleb128 0x6
 1267 00ac 59020000 		.4byte	.LASF16
 1268 00b0 01       		.byte	0x1
 1269 00b1 3F       		.byte	0x3f
 1270 00b2 00000000 		.4byte	.LFB2
 1271 00b6 34000000 		.4byte	.LFE2-.LFB2
 1272 00ba 01       		.uleb128 0x1
 1273 00bb 9C       		.byte	0x9c
 1274 00bc 07       		.uleb128 0x7
 1275 00bd 2B000000 		.4byte	.LASF18
 1276 00c1 01       		.byte	0x1
 1277 00c2 78       		.byte	0x78
 1278 00c3 00000000 		.4byte	.LFB3
 1279 00c7 68000000 		.4byte	.LFE3-.LFB3
 1280 00cb 01       		.uleb128 0x1
 1281 00cc 9C       		.byte	0x9c
 1282 00cd E0000000 		.4byte	0xe0
 1283 00d1 08       		.uleb128 0x8
 1284 00d2 09020000 		.4byte	.LASF20
 1285 00d6 01       		.byte	0x1
 1286 00d7 7A       		.byte	0x7a
 1287 00d8 6B000000 		.4byte	0x6b
 1288 00dc 02       		.uleb128 0x2
 1289 00dd 91       		.byte	0x91
 1290 00de 6F       		.sleb128 -17
 1291 00df 00       		.byte	0
 1292 00e0 06       		.uleb128 0x6
 1293 00e1 17000000 		.4byte	.LASF17
 1294 00e5 01       		.byte	0x1
 1295 00e6 A3       		.byte	0xa3
 1296 00e7 00000000 		.4byte	.LFB4
 1297 00eb 24000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 44


 1298 00ef 01       		.uleb128 0x1
 1299 00f0 9C       		.byte	0x9c
 1300 00f1 07       		.uleb128 0x7
 1301 00f2 26030000 		.4byte	.LASF19
 1302 00f6 01       		.byte	0x1
 1303 00f7 C0       		.byte	0xc0
 1304 00f8 00000000 		.4byte	.LFB5
 1305 00fc 54000000 		.4byte	.LFE5-.LFB5
 1306 0100 01       		.uleb128 0x1
 1307 0101 9C       		.byte	0x9c
 1308 0102 15010000 		.4byte	0x115
 1309 0106 08       		.uleb128 0x8
 1310 0107 09020000 		.4byte	.LASF20
 1311 010b 01       		.byte	0x1
 1312 010c C2       		.byte	0xc2
 1313 010d 6B000000 		.4byte	0x6b
 1314 0111 02       		.uleb128 0x2
 1315 0112 91       		.byte	0x91
 1316 0113 6F       		.sleb128 -17
 1317 0114 00       		.byte	0
 1318 0115 09       		.uleb128 0x9
 1319 0116 39000000 		.4byte	.LASF21
 1320 011a 01       		.byte	0x1
 1321 011b E3       		.byte	0xe3
 1322 011c 00000000 		.4byte	.LFB6
 1323 0120 0A000000 		.4byte	.LFE6-.LFB6
 1324 0124 01       		.uleb128 0x1
 1325 0125 9C       		.byte	0x9c
 1326 0126 09       		.uleb128 0x9
 1327 0127 C2020000 		.4byte	.LASF22
 1328 012b 01       		.byte	0x1
 1329 012c FC       		.byte	0xfc
 1330 012d 00000000 		.4byte	.LFB7
 1331 0131 0A000000 		.4byte	.LFE7-.LFB7
 1332 0135 01       		.uleb128 0x1
 1333 0136 9C       		.byte	0x9c
 1334 0137 0A       		.uleb128 0xa
 1335 0138 DE020000 		.4byte	.LASF23
 1336 013c 01       		.byte	0x1
 1337 013d 1501     		.2byte	0x115
 1338 013f 00000000 		.4byte	.LFB8
 1339 0143 0A000000 		.4byte	.LFE8-.LFB8
 1340 0147 01       		.uleb128 0x1
 1341 0148 9C       		.byte	0x9c
 1342 0149 0A       		.uleb128 0xa
 1343 014a EC030000 		.4byte	.LASF24
 1344 014e 01       		.byte	0x1
 1345 014f 2E01     		.2byte	0x12e
 1346 0151 00000000 		.4byte	.LFB9
 1347 0155 0A000000 		.4byte	.LFE9-.LFB9
 1348 0159 01       		.uleb128 0x1
 1349 015a 9C       		.byte	0x9c
 1350 015b 0B       		.uleb128 0xb
 1351 015c F1000000 		.4byte	.LASF25
 1352 0160 01       		.byte	0x1
 1353 0161 4801     		.2byte	0x148
 1354 0163 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 45


 1355 0167 20000000 		.4byte	.LFE10-.LFB10
 1356 016b 01       		.uleb128 0x1
 1357 016c 9C       		.byte	0x9c
 1358 016d 81010000 		.4byte	0x181
 1359 0171 0C       		.uleb128 0xc
 1360 0172 41020000 		.4byte	.LASF27
 1361 0176 01       		.byte	0x1
 1362 0177 4801     		.2byte	0x148
 1363 0179 6B000000 		.4byte	0x6b
 1364 017d 02       		.uleb128 0x2
 1365 017e 91       		.byte	0x91
 1366 017f 77       		.sleb128 -9
 1367 0180 00       		.byte	0
 1368 0181 0B       		.uleb128 0xb
 1369 0182 1F010000 		.4byte	.LASF26
 1370 0186 01       		.byte	0x1
 1371 0187 6001     		.2byte	0x160
 1372 0189 00000000 		.4byte	.LFB11
 1373 018d 20000000 		.4byte	.LFE11-.LFB11
 1374 0191 01       		.uleb128 0x1
 1375 0192 9C       		.byte	0x9c
 1376 0193 A7010000 		.4byte	0x1a7
 1377 0197 0C       		.uleb128 0xc
 1378 0198 41020000 		.4byte	.LASF27
 1379 019c 01       		.byte	0x1
 1380 019d 6001     		.2byte	0x160
 1381 019f 6B000000 		.4byte	0x6b
 1382 01a3 02       		.uleb128 0x2
 1383 01a4 91       		.byte	0x91
 1384 01a5 77       		.sleb128 -9
 1385 01a6 00       		.byte	0
 1386 01a7 0D       		.uleb128 0xd
 1387 01a8 0B010000 		.4byte	.LASF29
 1388 01ac 01       		.byte	0x1
 1389 01ad 8201     		.2byte	0x182
 1390 01af 6B000000 		.4byte	0x6b
 1391 01b3 00000000 		.4byte	.LFB12
 1392 01b7 20000000 		.4byte	.LFE12-.LFB12
 1393 01bb 01       		.uleb128 0x1
 1394 01bc 9C       		.byte	0x9c
 1395 01bd D1010000 		.4byte	0x1d1
 1396 01c1 0E       		.uleb128 0xe
 1397 01c2 A5030000 		.4byte	.LASF28
 1398 01c6 01       		.byte	0x1
 1399 01c7 8401     		.2byte	0x184
 1400 01c9 6B000000 		.4byte	0x6b
 1401 01cd 02       		.uleb128 0x2
 1402 01ce 91       		.byte	0x91
 1403 01cf 77       		.sleb128 -9
 1404 01d0 00       		.byte	0
 1405 01d1 0D       		.uleb128 0xd
 1406 01d2 8D020000 		.4byte	.LASF30
 1407 01d6 01       		.byte	0x1
 1408 01d7 B501     		.2byte	0x1b5
 1409 01d9 6B000000 		.4byte	0x6b
 1410 01dd 00000000 		.4byte	.LFB13
 1411 01e1 20000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 46


 1412 01e5 01       		.uleb128 0x1
 1413 01e6 9C       		.byte	0x9c
 1414 01e7 FB010000 		.4byte	0x1fb
 1415 01eb 0E       		.uleb128 0xe
 1416 01ec A5030000 		.4byte	.LASF28
 1417 01f0 01       		.byte	0x1
 1418 01f1 B701     		.2byte	0x1b7
 1419 01f3 6B000000 		.4byte	0x6b
 1420 01f7 02       		.uleb128 0x2
 1421 01f8 91       		.byte	0x91
 1422 01f9 77       		.sleb128 -9
 1423 01fa 00       		.byte	0
 1424 01fb 0B       		.uleb128 0xb
 1425 01fc D9030000 		.4byte	.LASF31
 1426 0200 01       		.byte	0x1
 1427 0201 EE01     		.2byte	0x1ee
 1428 0203 00000000 		.4byte	.LFB14
 1429 0207 34000000 		.4byte	.LFE14-.LFB14
 1430 020b 01       		.uleb128 0x1
 1431 020c 9C       		.byte	0x9c
 1432 020d 21020000 		.4byte	0x221
 1433 0211 0C       		.uleb128 0xc
 1434 0212 D3000000 		.4byte	.LASF32
 1435 0216 01       		.byte	0x1
 1436 0217 EE01     		.2byte	0x1ee
 1437 0219 6B000000 		.4byte	0x6b
 1438 021d 02       		.uleb128 0x2
 1439 021e 91       		.byte	0x91
 1440 021f 77       		.sleb128 -9
 1441 0220 00       		.byte	0
 1442 0221 0D       		.uleb128 0xd
 1443 0222 32030000 		.4byte	.LASF33
 1444 0226 01       		.byte	0x1
 1445 0227 5A02     		.2byte	0x25a
 1446 0229 6B000000 		.4byte	0x6b
 1447 022d 00000000 		.4byte	.LFB15
 1448 0231 20000000 		.4byte	.LFE15-.LFB15
 1449 0235 01       		.uleb128 0x1
 1450 0236 9C       		.byte	0x9c
 1451 0237 4B020000 		.4byte	0x24b
 1452 023b 0E       		.uleb128 0xe
 1453 023c 24000000 		.4byte	.LASF34
 1454 0240 01       		.byte	0x1
 1455 0241 5C02     		.2byte	0x25c
 1456 0243 6B000000 		.4byte	0x6b
 1457 0247 02       		.uleb128 0x2
 1458 0248 91       		.byte	0x91
 1459 0249 77       		.sleb128 -9
 1460 024a 00       		.byte	0
 1461 024b 0D       		.uleb128 0xd
 1462 024c DA000000 		.4byte	.LASF35
 1463 0250 01       		.byte	0x1
 1464 0251 9A02     		.2byte	0x29a
 1465 0253 6B000000 		.4byte	0x6b
 1466 0257 00000000 		.4byte	.LFB16
 1467 025b 30000000 		.4byte	.LFE16-.LFB16
 1468 025f 01       		.uleb128 0x1
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 47


 1469 0260 9C       		.byte	0x9c
 1470 0261 75020000 		.4byte	0x275
 1471 0265 0E       		.uleb128 0xe
 1472 0266 48010000 		.4byte	.LASF36
 1473 026a 01       		.byte	0x1
 1474 026b 9C02     		.2byte	0x29c
 1475 026d 6B000000 		.4byte	0x6b
 1476 0271 02       		.uleb128 0x2
 1477 0272 91       		.byte	0x91
 1478 0273 77       		.sleb128 -9
 1479 0274 00       		.byte	0
 1480 0275 0D       		.uleb128 0xd
 1481 0276 00000000 		.4byte	.LASF37
 1482 027a 01       		.byte	0x1
 1483 027b D702     		.2byte	0x2d7
 1484 027d 6B000000 		.4byte	0x6b
 1485 0281 00000000 		.4byte	.LFB17
 1486 0285 48000000 		.4byte	.LFE17-.LFB17
 1487 0289 01       		.uleb128 0x1
 1488 028a 9C       		.byte	0x9c
 1489 028b 9F020000 		.4byte	0x29f
 1490 028f 0E       		.uleb128 0xe
 1491 0290 48010000 		.4byte	.LASF36
 1492 0294 01       		.byte	0x1
 1493 0295 D902     		.2byte	0x2d9
 1494 0297 6B000000 		.4byte	0x6b
 1495 029b 02       		.uleb128 0x2
 1496 029c 91       		.byte	0x91
 1497 029d 77       		.sleb128 -9
 1498 029e 00       		.byte	0
 1499 029f 0A       		.uleb128 0xa
 1500 02a0 4E030000 		.4byte	.LASF38
 1501 02a4 01       		.byte	0x1
 1502 02a5 2603     		.2byte	0x326
 1503 02a7 00000000 		.4byte	.LFB18
 1504 02ab 28000000 		.4byte	.LFE18-.LFB18
 1505 02af 01       		.uleb128 0x1
 1506 02b0 9C       		.byte	0x9c
 1507 02b1 0F       		.uleb128 0xf
 1508 02b2 4C000000 		.4byte	.LASF39
 1509 02b6 01       		.byte	0x1
 1510 02b7 5D03     		.2byte	0x35d
 1511 02b9 00000000 		.4byte	.LFB19
 1512 02bd 48000000 		.4byte	.LFE19-.LFB19
 1513 02c1 01       		.uleb128 0x1
 1514 02c2 9C       		.byte	0x9c
 1515 02c3 D7020000 		.4byte	0x2d7
 1516 02c7 0E       		.uleb128 0xe
 1517 02c8 09020000 		.4byte	.LASF20
 1518 02cc 01       		.byte	0x1
 1519 02cd 5F03     		.2byte	0x35f
 1520 02cf 6B000000 		.4byte	0x6b
 1521 02d3 02       		.uleb128 0x2
 1522 02d4 91       		.byte	0x91
 1523 02d5 6F       		.sleb128 -17
 1524 02d6 00       		.byte	0
 1525 02d7 0F       		.uleb128 0xf
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 48


 1526 02d8 65020000 		.4byte	.LASF40
 1527 02dc 01       		.byte	0x1
 1528 02dd C203     		.2byte	0x3c2
 1529 02df 00000000 		.4byte	.LFB20
 1530 02e3 52000000 		.4byte	.LFE20-.LFB20
 1531 02e7 01       		.uleb128 0x1
 1532 02e8 9C       		.byte	0x9c
 1533 02e9 1B030000 		.4byte	0x31b
 1534 02ed 0C       		.uleb128 0xc
 1535 02ee 63030000 		.4byte	.LASF41
 1536 02f2 01       		.byte	0x1
 1537 02f3 C203     		.2byte	0x3c2
 1538 02f5 1B030000 		.4byte	0x31b
 1539 02f9 02       		.uleb128 0x2
 1540 02fa 91       		.byte	0x91
 1541 02fb 6C       		.sleb128 -20
 1542 02fc 0C       		.uleb128 0xc
 1543 02fd B8020000 		.4byte	.LASF42
 1544 0301 01       		.byte	0x1
 1545 0302 C203     		.2byte	0x3c2
 1546 0304 6B000000 		.4byte	0x6b
 1547 0308 02       		.uleb128 0x2
 1548 0309 91       		.byte	0x91
 1549 030a 6B       		.sleb128 -21
 1550 030b 0E       		.uleb128 0xe
 1551 030c D5020000 		.4byte	.LASF43
 1552 0310 01       		.byte	0x1
 1553 0311 C503     		.2byte	0x3c5
 1554 0313 6B000000 		.4byte	0x6b
 1555 0317 02       		.uleb128 0x2
 1556 0318 91       		.byte	0x91
 1557 0319 77       		.sleb128 -9
 1558 031a 00       		.byte	0
 1559 031b 10       		.uleb128 0x10
 1560 031c 04       		.byte	0x4
 1561 031d 21030000 		.4byte	0x321
 1562 0321 11       		.uleb128 0x11
 1563 0322 6B000000 		.4byte	0x6b
 1564 0326 0F       		.uleb128 0xf
 1565 0327 48020000 		.4byte	.LASF44
 1566 032b 01       		.byte	0x1
 1567 032c E303     		.2byte	0x3e3
 1568 032e 00000000 		.4byte	.LFB21
 1569 0332 64000000 		.4byte	.LFE21-.LFB21
 1570 0336 01       		.uleb128 0x1
 1571 0337 9C       		.byte	0x9c
 1572 0338 4C030000 		.4byte	0x34c
 1573 033c 0E       		.uleb128 0xe
 1574 033d 09020000 		.4byte	.LASF20
 1575 0341 01       		.byte	0x1
 1576 0342 E503     		.2byte	0x3e5
 1577 0344 6B000000 		.4byte	0x6b
 1578 0348 02       		.uleb128 0x2
 1579 0349 91       		.byte	0x91
 1580 034a 6F       		.sleb128 -17
 1581 034b 00       		.byte	0
 1582 034c 12       		.uleb128 0x12
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 49


 1583 034d F8010000 		.4byte	.LASF45
 1584 0351 01       		.byte	0x1
 1585 0352 1104     		.2byte	0x411
 1586 0354 00000000 		.4byte	.LFB22
 1587 0358 12000000 		.4byte	.LFE22-.LFB22
 1588 035c 01       		.uleb128 0x1
 1589 035d 9C       		.byte	0x9c
 1590 035e 12       		.uleb128 0x12
 1591 035f 28020000 		.4byte	.LASF46
 1592 0363 01       		.byte	0x1
 1593 0364 2904     		.2byte	0x429
 1594 0366 00000000 		.4byte	.LFB23
 1595 036a 12000000 		.4byte	.LFE23-.LFB23
 1596 036e 01       		.uleb128 0x1
 1597 036f 9C       		.byte	0x9c
 1598 0370 0B       		.uleb128 0xb
 1599 0371 75020000 		.4byte	.LASF47
 1600 0375 01       		.byte	0x1
 1601 0376 4204     		.2byte	0x442
 1602 0378 00000000 		.4byte	.LFB24
 1603 037c 34000000 		.4byte	.LFE24-.LFB24
 1604 0380 01       		.uleb128 0x1
 1605 0381 9C       		.byte	0x9c
 1606 0382 96030000 		.4byte	0x396
 1607 0386 0C       		.uleb128 0xc
 1608 0387 41020000 		.4byte	.LASF27
 1609 038b 01       		.byte	0x1
 1610 038c 4204     		.2byte	0x442
 1611 038e 6B000000 		.4byte	0x6b
 1612 0392 02       		.uleb128 0x2
 1613 0393 91       		.byte	0x91
 1614 0394 77       		.sleb128 -9
 1615 0395 00       		.byte	0
 1616 0396 0D       		.uleb128 0xd
 1617 0397 F2020000 		.4byte	.LASF48
 1618 039b 01       		.byte	0x1
 1619 039c 6504     		.2byte	0x465
 1620 039e 6B000000 		.4byte	0x6b
 1621 03a2 00000000 		.4byte	.LFB25
 1622 03a6 40000000 		.4byte	.LFE25-.LFB25
 1623 03aa 01       		.uleb128 0x1
 1624 03ab 9C       		.byte	0x9c
 1625 03ac C0030000 		.4byte	0x3c0
 1626 03b0 0E       		.uleb128 0xe
 1627 03b1 A5030000 		.4byte	.LASF28
 1628 03b5 01       		.byte	0x1
 1629 03b6 6704     		.2byte	0x467
 1630 03b8 6B000000 		.4byte	0x6b
 1631 03bc 02       		.uleb128 0x2
 1632 03bd 91       		.byte	0x91
 1633 03be 77       		.sleb128 -9
 1634 03bf 00       		.byte	0
 1635 03c0 13       		.uleb128 0x13
 1636 03c1 39010000 		.4byte	.LASF49
 1637 03c5 01       		.byte	0x1
 1638 03c6 22       		.byte	0x22
 1639 03c7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 50


 1640 03cb 05       		.uleb128 0x5
 1641 03cc 03       		.byte	0x3
 1642 03cd 00000000 		.4byte	SPIM_1_initVar
 1643 03d1 13       		.uleb128 0x13
 1644 03d2 BB030000 		.4byte	.LASF50
 1645 03d6 01       		.byte	0x1
 1646 03d7 24       		.byte	0x24
 1647 03d8 98000000 		.4byte	0x98
 1648 03dc 05       		.uleb128 0x5
 1649 03dd 03       		.byte	0x3
 1650 03de 00000000 		.4byte	SPIM_1_swStatusTx
 1651 03e2 13       		.uleb128 0x13
 1652 03e3 8A030000 		.4byte	.LASF51
 1653 03e7 01       		.byte	0x1
 1654 03e8 25       		.byte	0x25
 1655 03e9 98000000 		.4byte	0x98
 1656 03ed 05       		.uleb128 0x5
 1657 03ee 03       		.byte	0x3
 1658 03ef 00000000 		.4byte	SPIM_1_swStatusRx
 1659 03f3 00       		.byte	0
 1660              		.section	.debug_abbrev,"",%progbits
 1661              	.Ldebug_abbrev0:
 1662 0000 01       		.uleb128 0x1
 1663 0001 11       		.uleb128 0x11
 1664 0002 01       		.byte	0x1
 1665 0003 25       		.uleb128 0x25
 1666 0004 0E       		.uleb128 0xe
 1667 0005 13       		.uleb128 0x13
 1668 0006 0B       		.uleb128 0xb
 1669 0007 03       		.uleb128 0x3
 1670 0008 0E       		.uleb128 0xe
 1671 0009 1B       		.uleb128 0x1b
 1672 000a 0E       		.uleb128 0xe
 1673 000b 55       		.uleb128 0x55
 1674 000c 17       		.uleb128 0x17
 1675 000d 11       		.uleb128 0x11
 1676 000e 01       		.uleb128 0x1
 1677 000f 10       		.uleb128 0x10
 1678 0010 17       		.uleb128 0x17
 1679 0011 00       		.byte	0
 1680 0012 00       		.byte	0
 1681 0013 02       		.uleb128 0x2
 1682 0014 24       		.uleb128 0x24
 1683 0015 00       		.byte	0
 1684 0016 0B       		.uleb128 0xb
 1685 0017 0B       		.uleb128 0xb
 1686 0018 3E       		.uleb128 0x3e
 1687 0019 0B       		.uleb128 0xb
 1688 001a 03       		.uleb128 0x3
 1689 001b 0E       		.uleb128 0xe
 1690 001c 00       		.byte	0
 1691 001d 00       		.byte	0
 1692 001e 03       		.uleb128 0x3
 1693 001f 24       		.uleb128 0x24
 1694 0020 00       		.byte	0
 1695 0021 0B       		.uleb128 0xb
 1696 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 51


 1697 0023 3E       		.uleb128 0x3e
 1698 0024 0B       		.uleb128 0xb
 1699 0025 03       		.uleb128 0x3
 1700 0026 08       		.uleb128 0x8
 1701 0027 00       		.byte	0
 1702 0028 00       		.byte	0
 1703 0029 04       		.uleb128 0x4
 1704 002a 16       		.uleb128 0x16
 1705 002b 00       		.byte	0
 1706 002c 03       		.uleb128 0x3
 1707 002d 0E       		.uleb128 0xe
 1708 002e 3A       		.uleb128 0x3a
 1709 002f 0B       		.uleb128 0xb
 1710 0030 3B       		.uleb128 0x3b
 1711 0031 05       		.uleb128 0x5
 1712 0032 49       		.uleb128 0x49
 1713 0033 13       		.uleb128 0x13
 1714 0034 00       		.byte	0
 1715 0035 00       		.byte	0
 1716 0036 05       		.uleb128 0x5
 1717 0037 35       		.uleb128 0x35
 1718 0038 00       		.byte	0
 1719 0039 49       		.uleb128 0x49
 1720 003a 13       		.uleb128 0x13
 1721 003b 00       		.byte	0
 1722 003c 00       		.byte	0
 1723 003d 06       		.uleb128 0x6
 1724 003e 2E       		.uleb128 0x2e
 1725 003f 00       		.byte	0
 1726 0040 3F       		.uleb128 0x3f
 1727 0041 19       		.uleb128 0x19
 1728 0042 03       		.uleb128 0x3
 1729 0043 0E       		.uleb128 0xe
 1730 0044 3A       		.uleb128 0x3a
 1731 0045 0B       		.uleb128 0xb
 1732 0046 3B       		.uleb128 0x3b
 1733 0047 0B       		.uleb128 0xb
 1734 0048 27       		.uleb128 0x27
 1735 0049 19       		.uleb128 0x19
 1736 004a 11       		.uleb128 0x11
 1737 004b 01       		.uleb128 0x1
 1738 004c 12       		.uleb128 0x12
 1739 004d 06       		.uleb128 0x6
 1740 004e 40       		.uleb128 0x40
 1741 004f 18       		.uleb128 0x18
 1742 0050 9642     		.uleb128 0x2116
 1743 0052 19       		.uleb128 0x19
 1744 0053 00       		.byte	0
 1745 0054 00       		.byte	0
 1746 0055 07       		.uleb128 0x7
 1747 0056 2E       		.uleb128 0x2e
 1748 0057 01       		.byte	0x1
 1749 0058 3F       		.uleb128 0x3f
 1750 0059 19       		.uleb128 0x19
 1751 005a 03       		.uleb128 0x3
 1752 005b 0E       		.uleb128 0xe
 1753 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 52


 1754 005d 0B       		.uleb128 0xb
 1755 005e 3B       		.uleb128 0x3b
 1756 005f 0B       		.uleb128 0xb
 1757 0060 27       		.uleb128 0x27
 1758 0061 19       		.uleb128 0x19
 1759 0062 11       		.uleb128 0x11
 1760 0063 01       		.uleb128 0x1
 1761 0064 12       		.uleb128 0x12
 1762 0065 06       		.uleb128 0x6
 1763 0066 40       		.uleb128 0x40
 1764 0067 18       		.uleb128 0x18
 1765 0068 9642     		.uleb128 0x2116
 1766 006a 19       		.uleb128 0x19
 1767 006b 01       		.uleb128 0x1
 1768 006c 13       		.uleb128 0x13
 1769 006d 00       		.byte	0
 1770 006e 00       		.byte	0
 1771 006f 08       		.uleb128 0x8
 1772 0070 34       		.uleb128 0x34
 1773 0071 00       		.byte	0
 1774 0072 03       		.uleb128 0x3
 1775 0073 0E       		.uleb128 0xe
 1776 0074 3A       		.uleb128 0x3a
 1777 0075 0B       		.uleb128 0xb
 1778 0076 3B       		.uleb128 0x3b
 1779 0077 0B       		.uleb128 0xb
 1780 0078 49       		.uleb128 0x49
 1781 0079 13       		.uleb128 0x13
 1782 007a 02       		.uleb128 0x2
 1783 007b 18       		.uleb128 0x18
 1784 007c 00       		.byte	0
 1785 007d 00       		.byte	0
 1786 007e 09       		.uleb128 0x9
 1787 007f 2E       		.uleb128 0x2e
 1788 0080 00       		.byte	0
 1789 0081 3F       		.uleb128 0x3f
 1790 0082 19       		.uleb128 0x19
 1791 0083 03       		.uleb128 0x3
 1792 0084 0E       		.uleb128 0xe
 1793 0085 3A       		.uleb128 0x3a
 1794 0086 0B       		.uleb128 0xb
 1795 0087 3B       		.uleb128 0x3b
 1796 0088 0B       		.uleb128 0xb
 1797 0089 27       		.uleb128 0x27
 1798 008a 19       		.uleb128 0x19
 1799 008b 11       		.uleb128 0x11
 1800 008c 01       		.uleb128 0x1
 1801 008d 12       		.uleb128 0x12
 1802 008e 06       		.uleb128 0x6
 1803 008f 40       		.uleb128 0x40
 1804 0090 18       		.uleb128 0x18
 1805 0091 9742     		.uleb128 0x2117
 1806 0093 19       		.uleb128 0x19
 1807 0094 00       		.byte	0
 1808 0095 00       		.byte	0
 1809 0096 0A       		.uleb128 0xa
 1810 0097 2E       		.uleb128 0x2e
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 53


 1811 0098 00       		.byte	0
 1812 0099 3F       		.uleb128 0x3f
 1813 009a 19       		.uleb128 0x19
 1814 009b 03       		.uleb128 0x3
 1815 009c 0E       		.uleb128 0xe
 1816 009d 3A       		.uleb128 0x3a
 1817 009e 0B       		.uleb128 0xb
 1818 009f 3B       		.uleb128 0x3b
 1819 00a0 05       		.uleb128 0x5
 1820 00a1 27       		.uleb128 0x27
 1821 00a2 19       		.uleb128 0x19
 1822 00a3 11       		.uleb128 0x11
 1823 00a4 01       		.uleb128 0x1
 1824 00a5 12       		.uleb128 0x12
 1825 00a6 06       		.uleb128 0x6
 1826 00a7 40       		.uleb128 0x40
 1827 00a8 18       		.uleb128 0x18
 1828 00a9 9742     		.uleb128 0x2117
 1829 00ab 19       		.uleb128 0x19
 1830 00ac 00       		.byte	0
 1831 00ad 00       		.byte	0
 1832 00ae 0B       		.uleb128 0xb
 1833 00af 2E       		.uleb128 0x2e
 1834 00b0 01       		.byte	0x1
 1835 00b1 3F       		.uleb128 0x3f
 1836 00b2 19       		.uleb128 0x19
 1837 00b3 03       		.uleb128 0x3
 1838 00b4 0E       		.uleb128 0xe
 1839 00b5 3A       		.uleb128 0x3a
 1840 00b6 0B       		.uleb128 0xb
 1841 00b7 3B       		.uleb128 0x3b
 1842 00b8 05       		.uleb128 0x5
 1843 00b9 27       		.uleb128 0x27
 1844 00ba 19       		.uleb128 0x19
 1845 00bb 11       		.uleb128 0x11
 1846 00bc 01       		.uleb128 0x1
 1847 00bd 12       		.uleb128 0x12
 1848 00be 06       		.uleb128 0x6
 1849 00bf 40       		.uleb128 0x40
 1850 00c0 18       		.uleb128 0x18
 1851 00c1 9742     		.uleb128 0x2117
 1852 00c3 19       		.uleb128 0x19
 1853 00c4 01       		.uleb128 0x1
 1854 00c5 13       		.uleb128 0x13
 1855 00c6 00       		.byte	0
 1856 00c7 00       		.byte	0
 1857 00c8 0C       		.uleb128 0xc
 1858 00c9 05       		.uleb128 0x5
 1859 00ca 00       		.byte	0
 1860 00cb 03       		.uleb128 0x3
 1861 00cc 0E       		.uleb128 0xe
 1862 00cd 3A       		.uleb128 0x3a
 1863 00ce 0B       		.uleb128 0xb
 1864 00cf 3B       		.uleb128 0x3b
 1865 00d0 05       		.uleb128 0x5
 1866 00d1 49       		.uleb128 0x49
 1867 00d2 13       		.uleb128 0x13
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 54


 1868 00d3 02       		.uleb128 0x2
 1869 00d4 18       		.uleb128 0x18
 1870 00d5 00       		.byte	0
 1871 00d6 00       		.byte	0
 1872 00d7 0D       		.uleb128 0xd
 1873 00d8 2E       		.uleb128 0x2e
 1874 00d9 01       		.byte	0x1
 1875 00da 3F       		.uleb128 0x3f
 1876 00db 19       		.uleb128 0x19
 1877 00dc 03       		.uleb128 0x3
 1878 00dd 0E       		.uleb128 0xe
 1879 00de 3A       		.uleb128 0x3a
 1880 00df 0B       		.uleb128 0xb
 1881 00e0 3B       		.uleb128 0x3b
 1882 00e1 05       		.uleb128 0x5
 1883 00e2 27       		.uleb128 0x27
 1884 00e3 19       		.uleb128 0x19
 1885 00e4 49       		.uleb128 0x49
 1886 00e5 13       		.uleb128 0x13
 1887 00e6 11       		.uleb128 0x11
 1888 00e7 01       		.uleb128 0x1
 1889 00e8 12       		.uleb128 0x12
 1890 00e9 06       		.uleb128 0x6
 1891 00ea 40       		.uleb128 0x40
 1892 00eb 18       		.uleb128 0x18
 1893 00ec 9742     		.uleb128 0x2117
 1894 00ee 19       		.uleb128 0x19
 1895 00ef 01       		.uleb128 0x1
 1896 00f0 13       		.uleb128 0x13
 1897 00f1 00       		.byte	0
 1898 00f2 00       		.byte	0
 1899 00f3 0E       		.uleb128 0xe
 1900 00f4 34       		.uleb128 0x34
 1901 00f5 00       		.byte	0
 1902 00f6 03       		.uleb128 0x3
 1903 00f7 0E       		.uleb128 0xe
 1904 00f8 3A       		.uleb128 0x3a
 1905 00f9 0B       		.uleb128 0xb
 1906 00fa 3B       		.uleb128 0x3b
 1907 00fb 05       		.uleb128 0x5
 1908 00fc 49       		.uleb128 0x49
 1909 00fd 13       		.uleb128 0x13
 1910 00fe 02       		.uleb128 0x2
 1911 00ff 18       		.uleb128 0x18
 1912 0100 00       		.byte	0
 1913 0101 00       		.byte	0
 1914 0102 0F       		.uleb128 0xf
 1915 0103 2E       		.uleb128 0x2e
 1916 0104 01       		.byte	0x1
 1917 0105 3F       		.uleb128 0x3f
 1918 0106 19       		.uleb128 0x19
 1919 0107 03       		.uleb128 0x3
 1920 0108 0E       		.uleb128 0xe
 1921 0109 3A       		.uleb128 0x3a
 1922 010a 0B       		.uleb128 0xb
 1923 010b 3B       		.uleb128 0x3b
 1924 010c 05       		.uleb128 0x5
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 55


 1925 010d 27       		.uleb128 0x27
 1926 010e 19       		.uleb128 0x19
 1927 010f 11       		.uleb128 0x11
 1928 0110 01       		.uleb128 0x1
 1929 0111 12       		.uleb128 0x12
 1930 0112 06       		.uleb128 0x6
 1931 0113 40       		.uleb128 0x40
 1932 0114 18       		.uleb128 0x18
 1933 0115 9642     		.uleb128 0x2116
 1934 0117 19       		.uleb128 0x19
 1935 0118 01       		.uleb128 0x1
 1936 0119 13       		.uleb128 0x13
 1937 011a 00       		.byte	0
 1938 011b 00       		.byte	0
 1939 011c 10       		.uleb128 0x10
 1940 011d 0F       		.uleb128 0xf
 1941 011e 00       		.byte	0
 1942 011f 0B       		.uleb128 0xb
 1943 0120 0B       		.uleb128 0xb
 1944 0121 49       		.uleb128 0x49
 1945 0122 13       		.uleb128 0x13
 1946 0123 00       		.byte	0
 1947 0124 00       		.byte	0
 1948 0125 11       		.uleb128 0x11
 1949 0126 26       		.uleb128 0x26
 1950 0127 00       		.byte	0
 1951 0128 49       		.uleb128 0x49
 1952 0129 13       		.uleb128 0x13
 1953 012a 00       		.byte	0
 1954 012b 00       		.byte	0
 1955 012c 12       		.uleb128 0x12
 1956 012d 2E       		.uleb128 0x2e
 1957 012e 00       		.byte	0
 1958 012f 3F       		.uleb128 0x3f
 1959 0130 19       		.uleb128 0x19
 1960 0131 03       		.uleb128 0x3
 1961 0132 0E       		.uleb128 0xe
 1962 0133 3A       		.uleb128 0x3a
 1963 0134 0B       		.uleb128 0xb
 1964 0135 3B       		.uleb128 0x3b
 1965 0136 05       		.uleb128 0x5
 1966 0137 27       		.uleb128 0x27
 1967 0138 19       		.uleb128 0x19
 1968 0139 11       		.uleb128 0x11
 1969 013a 01       		.uleb128 0x1
 1970 013b 12       		.uleb128 0x12
 1971 013c 06       		.uleb128 0x6
 1972 013d 40       		.uleb128 0x40
 1973 013e 18       		.uleb128 0x18
 1974 013f 9642     		.uleb128 0x2116
 1975 0141 19       		.uleb128 0x19
 1976 0142 00       		.byte	0
 1977 0143 00       		.byte	0
 1978 0144 13       		.uleb128 0x13
 1979 0145 34       		.uleb128 0x34
 1980 0146 00       		.byte	0
 1981 0147 03       		.uleb128 0x3
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 56


 1982 0148 0E       		.uleb128 0xe
 1983 0149 3A       		.uleb128 0x3a
 1984 014a 0B       		.uleb128 0xb
 1985 014b 3B       		.uleb128 0x3b
 1986 014c 0B       		.uleb128 0xb
 1987 014d 49       		.uleb128 0x49
 1988 014e 13       		.uleb128 0x13
 1989 014f 3F       		.uleb128 0x3f
 1990 0150 19       		.uleb128 0x19
 1991 0151 02       		.uleb128 0x2
 1992 0152 18       		.uleb128 0x18
 1993 0153 00       		.byte	0
 1994 0154 00       		.byte	0
 1995 0155 00       		.byte	0
 1996              		.section	.debug_aranges,"",%progbits
 1997 0000 D4000000 		.4byte	0xd4
 1998 0004 0200     		.2byte	0x2
 1999 0006 00000000 		.4byte	.Ldebug_info0
 2000 000a 04       		.byte	0x4
 2001 000b 00       		.byte	0
 2002 000c 0000     		.2byte	0
 2003 000e 0000     		.2byte	0
 2004 0010 00000000 		.4byte	.LFB2
 2005 0014 34000000 		.4byte	.LFE2-.LFB2
 2006 0018 00000000 		.4byte	.LFB3
 2007 001c 68000000 		.4byte	.LFE3-.LFB3
 2008 0020 00000000 		.4byte	.LFB4
 2009 0024 24000000 		.4byte	.LFE4-.LFB4
 2010 0028 00000000 		.4byte	.LFB5
 2011 002c 54000000 		.4byte	.LFE5-.LFB5
 2012 0030 00000000 		.4byte	.LFB6
 2013 0034 0A000000 		.4byte	.LFE6-.LFB6
 2014 0038 00000000 		.4byte	.LFB7
 2015 003c 0A000000 		.4byte	.LFE7-.LFB7
 2016 0040 00000000 		.4byte	.LFB8
 2017 0044 0A000000 		.4byte	.LFE8-.LFB8
 2018 0048 00000000 		.4byte	.LFB9
 2019 004c 0A000000 		.4byte	.LFE9-.LFB9
 2020 0050 00000000 		.4byte	.LFB10
 2021 0054 20000000 		.4byte	.LFE10-.LFB10
 2022 0058 00000000 		.4byte	.LFB11
 2023 005c 20000000 		.4byte	.LFE11-.LFB11
 2024 0060 00000000 		.4byte	.LFB12
 2025 0064 20000000 		.4byte	.LFE12-.LFB12
 2026 0068 00000000 		.4byte	.LFB13
 2027 006c 20000000 		.4byte	.LFE13-.LFB13
 2028 0070 00000000 		.4byte	.LFB14
 2029 0074 34000000 		.4byte	.LFE14-.LFB14
 2030 0078 00000000 		.4byte	.LFB15
 2031 007c 20000000 		.4byte	.LFE15-.LFB15
 2032 0080 00000000 		.4byte	.LFB16
 2033 0084 30000000 		.4byte	.LFE16-.LFB16
 2034 0088 00000000 		.4byte	.LFB17
 2035 008c 48000000 		.4byte	.LFE17-.LFB17
 2036 0090 00000000 		.4byte	.LFB18
 2037 0094 28000000 		.4byte	.LFE18-.LFB18
 2038 0098 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 57


 2039 009c 48000000 		.4byte	.LFE19-.LFB19
 2040 00a0 00000000 		.4byte	.LFB20
 2041 00a4 52000000 		.4byte	.LFE20-.LFB20
 2042 00a8 00000000 		.4byte	.LFB21
 2043 00ac 64000000 		.4byte	.LFE21-.LFB21
 2044 00b0 00000000 		.4byte	.LFB22
 2045 00b4 12000000 		.4byte	.LFE22-.LFB22
 2046 00b8 00000000 		.4byte	.LFB23
 2047 00bc 12000000 		.4byte	.LFE23-.LFB23
 2048 00c0 00000000 		.4byte	.LFB24
 2049 00c4 34000000 		.4byte	.LFE24-.LFB24
 2050 00c8 00000000 		.4byte	.LFB25
 2051 00cc 40000000 		.4byte	.LFE25-.LFB25
 2052 00d0 00000000 		.4byte	0
 2053 00d4 00000000 		.4byte	0
 2054              		.section	.debug_ranges,"",%progbits
 2055              	.Ldebug_ranges0:
 2056 0000 00000000 		.4byte	.LFB2
 2057 0004 34000000 		.4byte	.LFE2
 2058 0008 00000000 		.4byte	.LFB3
 2059 000c 68000000 		.4byte	.LFE3
 2060 0010 00000000 		.4byte	.LFB4
 2061 0014 24000000 		.4byte	.LFE4
 2062 0018 00000000 		.4byte	.LFB5
 2063 001c 54000000 		.4byte	.LFE5
 2064 0020 00000000 		.4byte	.LFB6
 2065 0024 0A000000 		.4byte	.LFE6
 2066 0028 00000000 		.4byte	.LFB7
 2067 002c 0A000000 		.4byte	.LFE7
 2068 0030 00000000 		.4byte	.LFB8
 2069 0034 0A000000 		.4byte	.LFE8
 2070 0038 00000000 		.4byte	.LFB9
 2071 003c 0A000000 		.4byte	.LFE9
 2072 0040 00000000 		.4byte	.LFB10
 2073 0044 20000000 		.4byte	.LFE10
 2074 0048 00000000 		.4byte	.LFB11
 2075 004c 20000000 		.4byte	.LFE11
 2076 0050 00000000 		.4byte	.LFB12
 2077 0054 20000000 		.4byte	.LFE12
 2078 0058 00000000 		.4byte	.LFB13
 2079 005c 20000000 		.4byte	.LFE13
 2080 0060 00000000 		.4byte	.LFB14
 2081 0064 34000000 		.4byte	.LFE14
 2082 0068 00000000 		.4byte	.LFB15
 2083 006c 20000000 		.4byte	.LFE15
 2084 0070 00000000 		.4byte	.LFB16
 2085 0074 30000000 		.4byte	.LFE16
 2086 0078 00000000 		.4byte	.LFB17
 2087 007c 48000000 		.4byte	.LFE17
 2088 0080 00000000 		.4byte	.LFB18
 2089 0084 28000000 		.4byte	.LFE18
 2090 0088 00000000 		.4byte	.LFB19
 2091 008c 48000000 		.4byte	.LFE19
 2092 0090 00000000 		.4byte	.LFB20
 2093 0094 52000000 		.4byte	.LFE20
 2094 0098 00000000 		.4byte	.LFB21
 2095 009c 64000000 		.4byte	.LFE21
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 58


 2096 00a0 00000000 		.4byte	.LFB22
 2097 00a4 12000000 		.4byte	.LFE22
 2098 00a8 00000000 		.4byte	.LFB23
 2099 00ac 12000000 		.4byte	.LFE23
 2100 00b0 00000000 		.4byte	.LFB24
 2101 00b4 34000000 		.4byte	.LFE24
 2102 00b8 00000000 		.4byte	.LFB25
 2103 00bc 40000000 		.4byte	.LFE25
 2104 00c0 00000000 		.4byte	0
 2105 00c4 00000000 		.4byte	0
 2106              		.section	.debug_line,"",%progbits
 2107              	.Ldebug_line0:
 2108 0000 5E020000 		.section	.debug_str,"MS",%progbits,1
 2108      02004300 
 2108      00000201 
 2108      FB0E0D00 
 2108      01010101 
 2109              	.LASF37:
 2110 0000 5350494D 		.ascii	"SPIM_1_GetTxBufferSize\000"
 2110      5F315F47 
 2110      65745478 
 2110      42756666 
 2110      65725369 
 2111              	.LASF17:
 2112 0017 5350494D 		.ascii	"SPIM_1_Start\000"
 2112      5F315F53 
 2112      74617274 
 2112      00
 2113              	.LASF34:
 2114 0024 72784461 		.ascii	"rxData\000"
 2114      746100
 2115              	.LASF18:
 2116 002b 5350494D 		.ascii	"SPIM_1_Enable\000"
 2116      5F315F45 
 2116      6E61626C 
 2116      6500
 2117              	.LASF21:
 2118 0039 5350494D 		.ascii	"SPIM_1_EnableTxInt\000"
 2118      5F315F45 
 2118      6E61626C 
 2118      65547849 
 2118      6E7400
 2119              	.LASF39:
 2120 004c 5350494D 		.ascii	"SPIM_1_ClearTxBuffer\000"
 2120      5F315F43 
 2120      6C656172 
 2120      54784275 
 2120      66666572 
 2121              	.LASF3:
 2122 0061 73686F72 		.ascii	"short unsigned int\000"
 2122      7420756E 
 2122      7369676E 
 2122      65642069 
 2122      6E7400
 2123              	.LASF8:
 2124 0074 756E7369 		.ascii	"unsigned int\000"
 2124      676E6564 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 59


 2124      20696E74 
 2124      00
 2125              	.LASF54:
 2126 0081 433A5C55 		.ascii	"C:\\Users\\alexport\\OneDrive - Safeguard Analytics"
 2126      73657273 
 2126      5C616C65 
 2126      78706F72 
 2126      745C4F6E 
 2127 00b1 5C544553 		.ascii	"\\TESTs\\UART UDB test\\SA-200.cydsn\000"
 2127      54735C55 
 2127      41525420 
 2127      55444220 
 2127      74657374 
 2128              	.LASF32:
 2129 00d3 74784461 		.ascii	"txData\000"
 2129      746100
 2130              	.LASF35:
 2131 00da 5350494D 		.ascii	"SPIM_1_GetRxBufferSize\000"
 2131      5F315F47 
 2131      65745278 
 2131      42756666 
 2131      65725369 
 2132              	.LASF25:
 2133 00f1 5350494D 		.ascii	"SPIM_1_SetTxInterruptMode\000"
 2133      5F315F53 
 2133      65745478 
 2133      496E7465 
 2133      72727570 
 2134              	.LASF29:
 2135 010b 5350494D 		.ascii	"SPIM_1_ReadTxStatus\000"
 2135      5F315F52 
 2135      65616454 
 2135      78537461 
 2135      74757300 
 2136              	.LASF26:
 2137 011f 5350494D 		.ascii	"SPIM_1_SetRxInterruptMode\000"
 2137      5F315F53 
 2137      65745278 
 2137      496E7465 
 2137      72727570 
 2138              	.LASF49:
 2139 0139 5350494D 		.ascii	"SPIM_1_initVar\000"
 2139      5F315F69 
 2139      6E697456 
 2139      617200
 2140              	.LASF36:
 2141 0148 73697A65 		.ascii	"size\000"
 2141      00
 2142              	.LASF13:
 2143 014d 72656738 		.ascii	"reg8\000"
 2143      00
 2144              	.LASF5:
 2145 0152 6C6F6E67 		.ascii	"long unsigned int\000"
 2145      20756E73 
 2145      69676E65 
 2145      6420696E 
 2145      7400
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 60


 2146              	.LASF12:
 2147 0164 75696E74 		.ascii	"uint8\000"
 2147      3800
 2148              	.LASF52:
 2149 016a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2149      43313120 
 2149      352E342E 
 2149      31203230 
 2149      31363036 
 2150 019d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2150      20726576 
 2150      6973696F 
 2150      6E203233 
 2150      37373135 
 2151 01d0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2151      66756E63 
 2151      74696F6E 
 2151      2D736563 
 2151      74696F6E 
 2152              	.LASF45:
 2153 01f8 5350494D 		.ascii	"SPIM_1_EnableInt\000"
 2153      5F315F45 
 2153      6E61626C 
 2153      65496E74 
 2153      00
 2154              	.LASF20:
 2155 0209 656E6162 		.ascii	"enableInterrupts\000"
 2155      6C65496E 
 2155      74657272 
 2155      75707473 
 2155      00
 2156              	.LASF1:
 2157 021a 756E7369 		.ascii	"unsigned char\000"
 2157      676E6564 
 2157      20636861 
 2157      7200
 2158              	.LASF46:
 2159 0228 5350494D 		.ascii	"SPIM_1_DisableInt\000"
 2159      5F315F44 
 2159      69736162 
 2159      6C65496E 
 2159      7400
 2160              	.LASF10:
 2161 023a 646F7562 		.ascii	"double\000"
 2161      6C6500
 2162              	.LASF27:
 2163 0241 696E7453 		.ascii	"intSrc\000"
 2163      726300
 2164              	.LASF44:
 2165 0248 5350494D 		.ascii	"SPIM_1_ClearFIFO\000"
 2165      5F315F43 
 2165      6C656172 
 2165      4649464F 
 2165      00
 2166              	.LASF16:
 2167 0259 5350494D 		.ascii	"SPIM_1_Init\000"
 2167      5F315F49 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 61


 2167      6E697400 
 2168              	.LASF40:
 2169 0265 5350494D 		.ascii	"SPIM_1_PutArray\000"
 2169      5F315F50 
 2169      75744172 
 2169      72617900 
 2170              	.LASF47:
 2171 0275 5350494D 		.ascii	"SPIM_1_SetInterruptMode\000"
 2171      5F315F53 
 2171      6574496E 
 2171      74657272 
 2171      7570744D 
 2172              	.LASF30:
 2173 028d 5350494D 		.ascii	"SPIM_1_ReadRxStatus\000"
 2173      5F315F52 
 2173      65616452 
 2173      78537461 
 2173      74757300 
 2174              	.LASF7:
 2175 02a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2175      206C6F6E 
 2175      6720756E 
 2175      7369676E 
 2175      65642069 
 2176              	.LASF42:
 2177 02b8 62797465 		.ascii	"byteCount\000"
 2177      436F756E 
 2177      7400
 2178              	.LASF22:
 2179 02c2 5350494D 		.ascii	"SPIM_1_EnableRxInt\000"
 2179      5F315F45 
 2179      6E61626C 
 2179      65527849 
 2179      6E7400
 2180              	.LASF43:
 2181 02d5 62756649 		.ascii	"bufIndex\000"
 2181      6E646578 
 2181      00
 2182              	.LASF23:
 2183 02de 5350494D 		.ascii	"SPIM_1_DisableTxInt\000"
 2183      5F315F44 
 2183      69736162 
 2183      6C655478 
 2183      496E7400 
 2184              	.LASF48:
 2185 02f2 5350494D 		.ascii	"SPIM_1_ReadStatus\000"
 2185      5F315F52 
 2185      65616453 
 2185      74617475 
 2185      7300
 2186              	.LASF15:
 2187 0304 73697A65 		.ascii	"sizetype\000"
 2187      74797065 
 2187      00
 2188              	.LASF6:
 2189 030d 6C6F6E67 		.ascii	"long long int\000"
 2189      206C6F6E 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 62


 2189      6720696E 
 2189      7400
 2190              	.LASF9:
 2191 031b 666C6F61 		.ascii	"float\000"
 2191      7400
 2192              	.LASF11:
 2193 0321 63686172 		.ascii	"char\000"
 2193      00
 2194              	.LASF19:
 2195 0326 5350494D 		.ascii	"SPIM_1_Stop\000"
 2195      5F315F53 
 2195      746F7000 
 2196              	.LASF33:
 2197 0332 5350494D 		.ascii	"SPIM_1_ReadRxData\000"
 2197      5F315F52 
 2197      65616452 
 2197      78446174 
 2197      6100
 2198              	.LASF2:
 2199 0344 73686F72 		.ascii	"short int\000"
 2199      7420696E 
 2199      7400
 2200              	.LASF38:
 2201 034e 5350494D 		.ascii	"SPIM_1_ClearRxBuffer\000"
 2201      5F315F43 
 2201      6C656172 
 2201      52784275 
 2201      66666572 
 2202              	.LASF41:
 2203 0363 62756666 		.ascii	"buffer\000"
 2203      657200
 2204              	.LASF53:
 2205 036a 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM_1.c\000"
 2205      72617465 
 2205      645F536F 
 2205      75726365 
 2205      5C50536F 
 2206              	.LASF51:
 2207 038a 5350494D 		.ascii	"SPIM_1_swStatusRx\000"
 2207      5F315F73 
 2207      77537461 
 2207      74757352 
 2207      7800
 2208              	.LASF4:
 2209 039c 6C6F6E67 		.ascii	"long int\000"
 2209      20696E74 
 2209      00
 2210              	.LASF28:
 2211 03a5 746D7053 		.ascii	"tmpStatus\000"
 2211      74617475 
 2211      7300
 2212              	.LASF14:
 2213 03af 6C6F6E67 		.ascii	"long double\000"
 2213      20646F75 
 2213      626C6500 
 2214              	.LASF50:
 2215 03bb 5350494D 		.ascii	"SPIM_1_swStatusTx\000"
ARM GAS  C:\Users\alexport\AppData\Local\Temp\cc5Xa5Le.s 			page 63


 2215      5F315F73 
 2215      77537461 
 2215      74757354 
 2215      7800
 2216              	.LASF0:
 2217 03cd 7369676E 		.ascii	"signed char\000"
 2217      65642063 
 2217      68617200 
 2218              	.LASF31:
 2219 03d9 5350494D 		.ascii	"SPIM_1_WriteTxData\000"
 2219      5F315F57 
 2219      72697465 
 2219      54784461 
 2219      746100
 2220              	.LASF24:
 2221 03ec 5350494D 		.ascii	"SPIM_1_DisableRxInt\000"
 2221      5F315F44 
 2221      69736162 
 2221      6C655278 
 2221      496E7400 
 2222              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
