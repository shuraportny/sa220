ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_1_TX_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	SPIM_1_TX_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_1_TX_ISR, %function
  25              	SPIM_1_TX_ISR:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIM_1_INT.c"
   1:Generated_Source\PSoC4/SPIM_1_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM_1_INT.c **** * File Name: SPIM_1_INT.c
   3:Generated_Source\PSoC4/SPIM_1_INT.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM_1_INT.c **** *
   5:Generated_Source\PSoC4/SPIM_1_INT.c **** * Description:
   6:Generated_Source\PSoC4/SPIM_1_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:Generated_Source\PSoC4/SPIM_1_INT.c **** *  component.
   8:Generated_Source\PSoC4/SPIM_1_INT.c **** *
   9:Generated_Source\PSoC4/SPIM_1_INT.c **** * Note:
  10:Generated_Source\PSoC4/SPIM_1_INT.c **** *  None.
  11:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  12:Generated_Source\PSoC4/SPIM_1_INT.c **** ********************************************************************************
  13:Generated_Source\PSoC4/SPIM_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/SPIM_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/SPIM_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/SPIM_1_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/SPIM_1_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  19:Generated_Source\PSoC4/SPIM_1_INT.c **** #include "SPIM_1_PVT.h"
  20:Generated_Source\PSoC4/SPIM_1_INT.c **** #include "cyapicallbacks.h"
  21:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  22:Generated_Source\PSoC4/SPIM_1_INT.c **** /* User code required at start of ISR */
  23:Generated_Source\PSoC4/SPIM_1_INT.c **** /* `#START SPIM_1_ISR_START_DEF` */
  24:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  25:Generated_Source\PSoC4/SPIM_1_INT.c **** /* `#END` */
  26:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  27:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  28:Generated_Source\PSoC4/SPIM_1_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC4/SPIM_1_INT.c **** * Function Name: SPIM_1_TX_ISR
  30:Generated_Source\PSoC4/SPIM_1_INT.c **** ********************************************************************************
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 2


  31:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  32:Generated_Source\PSoC4/SPIM_1_INT.c **** * Summary:
  33:Generated_Source\PSoC4/SPIM_1_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  34:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  35:Generated_Source\PSoC4/SPIM_1_INT.c **** * Parameters:
  36:Generated_Source\PSoC4/SPIM_1_INT.c **** *  None.
  37:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  38:Generated_Source\PSoC4/SPIM_1_INT.c **** * Return:
  39:Generated_Source\PSoC4/SPIM_1_INT.c **** *  None.
  40:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  41:Generated_Source\PSoC4/SPIM_1_INT.c **** * Global variables:
  42:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
  43:Generated_Source\PSoC4/SPIM_1_INT.c **** *  have been written down in the TX software buffer.
  44:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
  45:Generated_Source\PSoC4/SPIM_1_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  46:Generated_Source\PSoC4/SPIM_1_INT.c **** *  sending and FIFO Not Full.
  47:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE] - used to store
  48:Generated_Source\PSoC4/SPIM_1_INT.c **** *  data to sending.
  49:Generated_Source\PSoC4/SPIM_1_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  50:Generated_Source\PSoC4/SPIM_1_INT.c **** *
  51:Generated_Source\PSoC4/SPIM_1_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/SPIM_1_INT.c **** CY_ISR(SPIM_1_TX_ISR)
  53:Generated_Source\PSoC4/SPIM_1_INT.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  54:Generated_Source\PSoC4/SPIM_1_INT.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  55:Generated_Source\PSoC4/SPIM_1_INT.c ****         uint8 tmpStatus;
  56:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  57:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  58:Generated_Source\PSoC4/SPIM_1_INT.c ****     #ifdef SPIM_1_TX_ISR_ENTRY_CALLBACK
  59:Generated_Source\PSoC4/SPIM_1_INT.c ****         SPIM_1_TX_ISR_EntryCallback();
  60:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* SPIM_1_TX_ISR_ENTRY_CALLBACK */
  61:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  62:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* User code required at start of ISR */
  63:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#START SPIM_1_TX_ISR_START` */
  64:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  65:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#END` */
  66:Generated_Source\PSoC4/SPIM_1_INT.c ****     
  67:Generated_Source\PSoC4/SPIM_1_INT.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  68:Generated_Source\PSoC4/SPIM_1_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  69:Generated_Source\PSoC4/SPIM_1_INT.c ****         while(SPIM_1_txBufferRead != SPIM_1_txBufferWrite)
  70:Generated_Source\PSoC4/SPIM_1_INT.c ****         {
  71:Generated_Source\PSoC4/SPIM_1_INT.c ****             tmpStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
  72:Generated_Source\PSoC4/SPIM_1_INT.c ****             SPIM_1_swStatusTx = tmpStatus;
  73:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  74:Generated_Source\PSoC4/SPIM_1_INT.c ****             if(0u != (SPIM_1_swStatusTx & SPIM_1_STS_TX_FIFO_NOT_FULL))
  75:Generated_Source\PSoC4/SPIM_1_INT.c ****             {
  76:Generated_Source\PSoC4/SPIM_1_INT.c ****                 if(0u == SPIM_1_txBufferFull)
  77:Generated_Source\PSoC4/SPIM_1_INT.c ****                 {
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 3


  78:Generated_Source\PSoC4/SPIM_1_INT.c ****                    SPIM_1_txBufferRead++;
  79:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  80:Generated_Source\PSoC4/SPIM_1_INT.c ****                     if(SPIM_1_txBufferRead >= SPIM_1_TX_BUFFER_SIZE)
  81:Generated_Source\PSoC4/SPIM_1_INT.c ****                     {
  82:Generated_Source\PSoC4/SPIM_1_INT.c ****                         SPIM_1_txBufferRead = 0u;
  83:Generated_Source\PSoC4/SPIM_1_INT.c ****                     }
  84:Generated_Source\PSoC4/SPIM_1_INT.c ****                 }
  85:Generated_Source\PSoC4/SPIM_1_INT.c ****                 else
  86:Generated_Source\PSoC4/SPIM_1_INT.c ****                 {
  87:Generated_Source\PSoC4/SPIM_1_INT.c ****                     SPIM_1_txBufferFull = 0u;
  88:Generated_Source\PSoC4/SPIM_1_INT.c ****                 }
  89:Generated_Source\PSoC4/SPIM_1_INT.c **** 
  90:Generated_Source\PSoC4/SPIM_1_INT.c ****                 /* Put data element into the TX FIFO */
  91:Generated_Source\PSoC4/SPIM_1_INT.c ****                 CY_SET_REG8(SPIM_1_TXDATA_PTR, 
  92:Generated_Source\PSoC4/SPIM_1_INT.c ****                                              SPIM_1_txBuffer[SPIM_1_txBufferRead]);
  93:Generated_Source\PSoC4/SPIM_1_INT.c ****             }
  94:Generated_Source\PSoC4/SPIM_1_INT.c ****             else
  95:Generated_Source\PSoC4/SPIM_1_INT.c ****             {
  96:Generated_Source\PSoC4/SPIM_1_INT.c ****                 break;
  97:Generated_Source\PSoC4/SPIM_1_INT.c ****             }
  98:Generated_Source\PSoC4/SPIM_1_INT.c ****         }
  99:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 100:Generated_Source\PSoC4/SPIM_1_INT.c ****         if(SPIM_1_txBufferRead == SPIM_1_txBufferWrite)
 101:Generated_Source\PSoC4/SPIM_1_INT.c ****         {
 102:Generated_Source\PSoC4/SPIM_1_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
 103:Generated_Source\PSoC4/SPIM_1_INT.c ****             SPIM_1_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_1_STS_TX_FIFO_NOT_FULL);
 104:Generated_Source\PSoC4/SPIM_1_INT.c ****         }
 105:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 106:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 107:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 108:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* User code required at end of ISR (Optional) */
 109:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#START SPIM_1_TX_ISR_END` */
 110:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 111:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC4/SPIM_1_INT.c ****     
 113:Generated_Source\PSoC4/SPIM_1_INT.c ****     #ifdef SPIM_1_TX_ISR_EXIT_CALLBACK
 114:Generated_Source\PSoC4/SPIM_1_INT.c ****         SPIM_1_TX_ISR_ExitCallback();
 115:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* SPIM_1_TX_ISR_EXIT_CALLBACK */
 116:Generated_Source\PSoC4/SPIM_1_INT.c **** }
  38              		.loc 1 116 0
  39 0004 C046     		nop
  40 0006 BD46     		mov	sp, r7
  41              		@ sp needed
  42 0008 80BD     		pop	{r7, pc}
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	SPIM_1_TX_ISR, .-SPIM_1_TX_ISR
  46 000a C046     		.section	.text.SPIM_1_RX_ISR,"ax",%progbits
  47              		.align	2
  48              		.global	SPIM_1_RX_ISR
  49              		.code	16
  50              		.thumb_func
  51              		.type	SPIM_1_RX_ISR, %function
  52              	SPIM_1_RX_ISR:
  53              	.LFB3:
 117:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 118:Generated_Source\PSoC4/SPIM_1_INT.c **** 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 4


 119:Generated_Source\PSoC4/SPIM_1_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/SPIM_1_INT.c **** * Function Name: SPIM_1_RX_ISR
 121:Generated_Source\PSoC4/SPIM_1_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC4/SPIM_1_INT.c **** *
 123:Generated_Source\PSoC4/SPIM_1_INT.c **** * Summary:
 124:Generated_Source\PSoC4/SPIM_1_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 125:Generated_Source\PSoC4/SPIM_1_INT.c **** *
 126:Generated_Source\PSoC4/SPIM_1_INT.c **** * Parameters:
 127:Generated_Source\PSoC4/SPIM_1_INT.c **** *  None.
 128:Generated_Source\PSoC4/SPIM_1_INT.c **** *
 129:Generated_Source\PSoC4/SPIM_1_INT.c **** * Return:
 130:Generated_Source\PSoC4/SPIM_1_INT.c **** *  None.
 131:Generated_Source\PSoC4/SPIM_1_INT.c **** *
 132:Generated_Source\PSoC4/SPIM_1_INT.c **** * Global variables:
 133:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 134:Generated_Source\PSoC4/SPIM_1_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 135:Generated_Source\PSoC4/SPIM_1_INT.c **** *  new data.
 136:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 137:Generated_Source\PSoC4/SPIM_1_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 138:Generated_Source\PSoC4/SPIM_1_INT.c **** *  SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE] - used to store
 139:Generated_Source\PSoC4/SPIM_1_INT.c **** *  received data, modified when FIFO contains new data.
 140:Generated_Source\PSoC4/SPIM_1_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 141:Generated_Source\PSoC4/SPIM_1_INT.c **** *
 142:Generated_Source\PSoC4/SPIM_1_INT.c **** *******************************************************************************/
 143:Generated_Source\PSoC4/SPIM_1_INT.c **** CY_ISR(SPIM_1_RX_ISR)
 144:Generated_Source\PSoC4/SPIM_1_INT.c **** {
  54              		.loc 1 144 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC4/SPIM_1_INT.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 146:Generated_Source\PSoC4/SPIM_1_INT.c ****         uint8 tmpStatus;
 147:Generated_Source\PSoC4/SPIM_1_INT.c ****         uint8 rxData;
 148:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 149:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 150:Generated_Source\PSoC4/SPIM_1_INT.c ****     #ifdef SPIM_1_RX_ISR_ENTRY_CALLBACK
 151:Generated_Source\PSoC4/SPIM_1_INT.c ****         SPIM_1_RX_ISR_EntryCallback();
 152:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* SPIM_1_RX_ISR_ENTRY_CALLBACK */
 153:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 154:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* User code required at start of ISR */
 155:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#START SPIM_1_RX_ISR_START` */
 156:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 157:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#END` */
 158:Generated_Source\PSoC4/SPIM_1_INT.c ****     
 159:Generated_Source\PSoC4/SPIM_1_INT.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 160:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 161:Generated_Source\PSoC4/SPIM_1_INT.c ****         tmpStatus = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
 162:Generated_Source\PSoC4/SPIM_1_INT.c ****         SPIM_1_swStatusRx = tmpStatus;
 163:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 164:Generated_Source\PSoC4/SPIM_1_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 165:Generated_Source\PSoC4/SPIM_1_INT.c ****         while(0u != (SPIM_1_swStatusRx & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 5


 166:Generated_Source\PSoC4/SPIM_1_INT.c ****         {
 167:Generated_Source\PSoC4/SPIM_1_INT.c ****             rxData = CY_GET_REG8(SPIM_1_RXDATA_PTR);
 168:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 169:Generated_Source\PSoC4/SPIM_1_INT.c ****             /* Set next pointer. */
 170:Generated_Source\PSoC4/SPIM_1_INT.c ****             SPIM_1_rxBufferWrite++;
 171:Generated_Source\PSoC4/SPIM_1_INT.c ****             if(SPIM_1_rxBufferWrite >= SPIM_1_RX_BUFFER_SIZE)
 172:Generated_Source\PSoC4/SPIM_1_INT.c ****             {
 173:Generated_Source\PSoC4/SPIM_1_INT.c ****                 SPIM_1_rxBufferWrite = 0u;
 174:Generated_Source\PSoC4/SPIM_1_INT.c ****             }
 175:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 176:Generated_Source\PSoC4/SPIM_1_INT.c ****             if(SPIM_1_rxBufferWrite == SPIM_1_rxBufferRead)
 177:Generated_Source\PSoC4/SPIM_1_INT.c ****             {
 178:Generated_Source\PSoC4/SPIM_1_INT.c ****                 SPIM_1_rxBufferRead++;
 179:Generated_Source\PSoC4/SPIM_1_INT.c ****                 if(SPIM_1_rxBufferRead >= SPIM_1_RX_BUFFER_SIZE)
 180:Generated_Source\PSoC4/SPIM_1_INT.c ****                 {
 181:Generated_Source\PSoC4/SPIM_1_INT.c ****                     SPIM_1_rxBufferRead = 0u;
 182:Generated_Source\PSoC4/SPIM_1_INT.c ****                 }
 183:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 184:Generated_Source\PSoC4/SPIM_1_INT.c ****                 SPIM_1_rxBufferFull = 1u;
 185:Generated_Source\PSoC4/SPIM_1_INT.c ****             }
 186:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 187:Generated_Source\PSoC4/SPIM_1_INT.c ****             /* Move data from the FIFO to the Buffer */
 188:Generated_Source\PSoC4/SPIM_1_INT.c ****             SPIM_1_rxBuffer[SPIM_1_rxBufferWrite] = rxData;
 189:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 190:Generated_Source\PSoC4/SPIM_1_INT.c ****             tmpStatus = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
 191:Generated_Source\PSoC4/SPIM_1_INT.c ****             SPIM_1_swStatusRx = tmpStatus;
 192:Generated_Source\PSoC4/SPIM_1_INT.c ****         }
 193:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 194:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 195:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 196:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* User code required at end of ISR (Optional) */
 197:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#START SPIM_1_RX_ISR_END` */
 198:Generated_Source\PSoC4/SPIM_1_INT.c **** 
 199:Generated_Source\PSoC4/SPIM_1_INT.c ****     /* `#END` */
 200:Generated_Source\PSoC4/SPIM_1_INT.c ****     
 201:Generated_Source\PSoC4/SPIM_1_INT.c ****     #ifdef SPIM_1_RX_ISR_EXIT_CALLBACK
 202:Generated_Source\PSoC4/SPIM_1_INT.c ****         SPIM_1_RX_ISR_ExitCallback();
 203:Generated_Source\PSoC4/SPIM_1_INT.c ****     #endif /* SPIM_1_RX_ISR_EXIT_CALLBACK */
 204:Generated_Source\PSoC4/SPIM_1_INT.c **** }
  64              		.loc 1 204 0
  65 0004 C046     		nop
  66 0006 BD46     		mov	sp, r7
  67              		@ sp needed
  68 0008 80BD     		pop	{r7, pc}
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	SPIM_1_RX_ISR, .-SPIM_1_RX_ISR
  72              		.text
  73              	.Letext0:
  74              		.section	.debug_info,"",%progbits
  75              	.Ldebug_info0:
  76 0000 AD000000 		.4byte	0xad
  77 0004 0400     		.2byte	0x4
  78 0006 00000000 		.4byte	.Ldebug_abbrev0
  79 000a 04       		.byte	0x4
  80 000b 01       		.uleb128 0x1
  81 000c 34010000 		.4byte	.LASF16
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 6


  82 0010 0C       		.byte	0xc
  83 0011 10010000 		.4byte	.LASF17
  84 0015 66000000 		.4byte	.LASF18
  85 0019 00000000 		.4byte	.Ldebug_ranges0+0
  86 001d 00000000 		.4byte	0
  87 0021 00000000 		.4byte	.Ldebug_line0
  88 0025 02       		.uleb128 0x2
  89 0026 01       		.byte	0x1
  90 0027 06       		.byte	0x6
  91 0028 F8000000 		.4byte	.LASF0
  92 002c 02       		.uleb128 0x2
  93 002d 01       		.byte	0x1
  94 002e 08       		.byte	0x8
  95 002f B8000000 		.4byte	.LASF1
  96 0033 02       		.uleb128 0x2
  97 0034 02       		.byte	0x2
  98 0035 05       		.byte	0x5
  99 0036 D4000000 		.4byte	.LASF2
 100 003a 02       		.uleb128 0x2
 101 003b 02       		.byte	0x2
 102 003c 07       		.byte	0x7
 103 003d E5000000 		.4byte	.LASF3
 104 0041 02       		.uleb128 0x2
 105 0042 04       		.byte	0x4
 106 0043 05       		.byte	0x5
 107 0044 CB000000 		.4byte	.LASF4
 108 0048 02       		.uleb128 0x2
 109 0049 04       		.byte	0x4
 110 004a 07       		.byte	0x7
 111 004b 37000000 		.4byte	.LASF5
 112 004f 02       		.uleb128 0x2
 113 0050 08       		.byte	0x8
 114 0051 05       		.byte	0x5
 115 0052 00000000 		.4byte	.LASF6
 116 0056 02       		.uleb128 0x2
 117 0057 08       		.byte	0x8
 118 0058 07       		.byte	0x7
 119 0059 49000000 		.4byte	.LASF7
 120 005d 03       		.uleb128 0x3
 121 005e 04       		.byte	0x4
 122 005f 05       		.byte	0x5
 123 0060 696E7400 		.ascii	"int\000"
 124 0064 02       		.uleb128 0x2
 125 0065 04       		.byte	0x4
 126 0066 07       		.byte	0x7
 127 0067 0E000000 		.4byte	.LASF8
 128 006b 02       		.uleb128 0x2
 129 006c 04       		.byte	0x4
 130 006d 04       		.byte	0x4
 131 006e 60000000 		.4byte	.LASF9
 132 0072 02       		.uleb128 0x2
 133 0073 08       		.byte	0x8
 134 0074 04       		.byte	0x4
 135 0075 DE000000 		.4byte	.LASF10
 136 0079 02       		.uleb128 0x2
 137 007a 01       		.byte	0x1
 138 007b 08       		.byte	0x8
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 7


 139 007c C6000000 		.4byte	.LASF11
 140 0080 02       		.uleb128 0x2
 141 0081 08       		.byte	0x8
 142 0082 04       		.byte	0x4
 143 0083 04010000 		.4byte	.LASF12
 144 0087 02       		.uleb128 0x2
 145 0088 04       		.byte	0x4
 146 0089 07       		.byte	0x7
 147 008a C2010000 		.4byte	.LASF13
 148 008e 04       		.uleb128 0x4
 149 008f 1B000000 		.4byte	.LASF14
 150 0093 01       		.byte	0x1
 151 0094 34       		.byte	0x34
 152 0095 00000000 		.4byte	.LFB2
 153 0099 0A000000 		.4byte	.LFE2-.LFB2
 154 009d 01       		.uleb128 0x1
 155 009e 9C       		.byte	0x9c
 156 009f 04       		.uleb128 0x4
 157 00a0 29000000 		.4byte	.LASF15
 158 00a4 01       		.byte	0x1
 159 00a5 8F       		.byte	0x8f
 160 00a6 00000000 		.4byte	.LFB3
 161 00aa 0A000000 		.4byte	.LFE3-.LFB3
 162 00ae 01       		.uleb128 0x1
 163 00af 9C       		.byte	0x9c
 164 00b0 00       		.byte	0
 165              		.section	.debug_abbrev,"",%progbits
 166              	.Ldebug_abbrev0:
 167 0000 01       		.uleb128 0x1
 168 0001 11       		.uleb128 0x11
 169 0002 01       		.byte	0x1
 170 0003 25       		.uleb128 0x25
 171 0004 0E       		.uleb128 0xe
 172 0005 13       		.uleb128 0x13
 173 0006 0B       		.uleb128 0xb
 174 0007 03       		.uleb128 0x3
 175 0008 0E       		.uleb128 0xe
 176 0009 1B       		.uleb128 0x1b
 177 000a 0E       		.uleb128 0xe
 178 000b 55       		.uleb128 0x55
 179 000c 17       		.uleb128 0x17
 180 000d 11       		.uleb128 0x11
 181 000e 01       		.uleb128 0x1
 182 000f 10       		.uleb128 0x10
 183 0010 17       		.uleb128 0x17
 184 0011 00       		.byte	0
 185 0012 00       		.byte	0
 186 0013 02       		.uleb128 0x2
 187 0014 24       		.uleb128 0x24
 188 0015 00       		.byte	0
 189 0016 0B       		.uleb128 0xb
 190 0017 0B       		.uleb128 0xb
 191 0018 3E       		.uleb128 0x3e
 192 0019 0B       		.uleb128 0xb
 193 001a 03       		.uleb128 0x3
 194 001b 0E       		.uleb128 0xe
 195 001c 00       		.byte	0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 8


 196 001d 00       		.byte	0
 197 001e 03       		.uleb128 0x3
 198 001f 24       		.uleb128 0x24
 199 0020 00       		.byte	0
 200 0021 0B       		.uleb128 0xb
 201 0022 0B       		.uleb128 0xb
 202 0023 3E       		.uleb128 0x3e
 203 0024 0B       		.uleb128 0xb
 204 0025 03       		.uleb128 0x3
 205 0026 08       		.uleb128 0x8
 206 0027 00       		.byte	0
 207 0028 00       		.byte	0
 208 0029 04       		.uleb128 0x4
 209 002a 2E       		.uleb128 0x2e
 210 002b 00       		.byte	0
 211 002c 3F       		.uleb128 0x3f
 212 002d 19       		.uleb128 0x19
 213 002e 03       		.uleb128 0x3
 214 002f 0E       		.uleb128 0xe
 215 0030 3A       		.uleb128 0x3a
 216 0031 0B       		.uleb128 0xb
 217 0032 3B       		.uleb128 0x3b
 218 0033 0B       		.uleb128 0xb
 219 0034 27       		.uleb128 0x27
 220 0035 19       		.uleb128 0x19
 221 0036 11       		.uleb128 0x11
 222 0037 01       		.uleb128 0x1
 223 0038 12       		.uleb128 0x12
 224 0039 06       		.uleb128 0x6
 225 003a 40       		.uleb128 0x40
 226 003b 18       		.uleb128 0x18
 227 003c 9742     		.uleb128 0x2117
 228 003e 19       		.uleb128 0x19
 229 003f 00       		.byte	0
 230 0040 00       		.byte	0
 231 0041 00       		.byte	0
 232              		.section	.debug_aranges,"",%progbits
 233 0000 24000000 		.4byte	0x24
 234 0004 0200     		.2byte	0x2
 235 0006 00000000 		.4byte	.Ldebug_info0
 236 000a 04       		.byte	0x4
 237 000b 00       		.byte	0
 238 000c 0000     		.2byte	0
 239 000e 0000     		.2byte	0
 240 0010 00000000 		.4byte	.LFB2
 241 0014 0A000000 		.4byte	.LFE2-.LFB2
 242 0018 00000000 		.4byte	.LFB3
 243 001c 0A000000 		.4byte	.LFE3-.LFB3
 244 0020 00000000 		.4byte	0
 245 0024 00000000 		.4byte	0
 246              		.section	.debug_ranges,"",%progbits
 247              	.Ldebug_ranges0:
 248 0000 00000000 		.4byte	.LFB2
 249 0004 0A000000 		.4byte	.LFE2
 250 0008 00000000 		.4byte	.LFB3
 251 000c 0A000000 		.4byte	.LFE3
 252 0010 00000000 		.4byte	0
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 9


 253 0014 00000000 		.4byte	0
 254              		.section	.debug_line,"",%progbits
 255              	.Ldebug_line0:
 256 0000 65000000 		.section	.debug_str,"MS",%progbits,1
 256      02003A00 
 256      00000201 
 256      FB0E0D00 
 256      01010101 
 257              	.LASF6:
 258 0000 6C6F6E67 		.ascii	"long long int\000"
 258      206C6F6E 
 258      6720696E 
 258      7400
 259              	.LASF8:
 260 000e 756E7369 		.ascii	"unsigned int\000"
 260      676E6564 
 260      20696E74 
 260      00
 261              	.LASF14:
 262 001b 5350494D 		.ascii	"SPIM_1_TX_ISR\000"
 262      5F315F54 
 262      585F4953 
 262      5200
 263              	.LASF15:
 264 0029 5350494D 		.ascii	"SPIM_1_RX_ISR\000"
 264      5F315F52 
 264      585F4953 
 264      5200
 265              	.LASF5:
 266 0037 6C6F6E67 		.ascii	"long unsigned int\000"
 266      20756E73 
 266      69676E65 
 266      6420696E 
 266      7400
 267              	.LASF7:
 268 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 268      206C6F6E 
 268      6720756E 
 268      7369676E 
 268      65642069 
 269              	.LASF9:
 270 0060 666C6F61 		.ascii	"float\000"
 270      7400
 271              	.LASF18:
 272 0066 433A5C55 		.ascii	"C:\\Users\\alexport\\OneDrive - Safeguard Analytics"
 272      73657273 
 272      5C616C65 
 272      78706F72 
 272      745C4F6E 
 273 0096 5C544553 		.ascii	"\\TESTs\\UART UDB test\\SA-200.cydsn\000"
 273      54735C55 
 273      41525420 
 273      55444220 
 273      74657374 
 274              	.LASF1:
 275 00b8 756E7369 		.ascii	"unsigned char\000"
 275      676E6564 
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 10


 275      20636861 
 275      7200
 276              	.LASF11:
 277 00c6 63686172 		.ascii	"char\000"
 277      00
 278              	.LASF4:
 279 00cb 6C6F6E67 		.ascii	"long int\000"
 279      20696E74 
 279      00
 280              	.LASF2:
 281 00d4 73686F72 		.ascii	"short int\000"
 281      7420696E 
 281      7400
 282              	.LASF10:
 283 00de 646F7562 		.ascii	"double\000"
 283      6C6500
 284              	.LASF3:
 285 00e5 73686F72 		.ascii	"short unsigned int\000"
 285      7420756E 
 285      7369676E 
 285      65642069 
 285      6E7400
 286              	.LASF0:
 287 00f8 7369676E 		.ascii	"signed char\000"
 287      65642063 
 287      68617200 
 288              	.LASF12:
 289 0104 6C6F6E67 		.ascii	"long double\000"
 289      20646F75 
 289      626C6500 
 290              	.LASF17:
 291 0110 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM_1_INT.c\000"
 291      72617465 
 291      645F536F 
 291      75726365 
 291      5C50536F 
 292              	.LASF16:
 293 0134 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 293      43313120 
 293      352E342E 
 293      31203230 
 293      31363036 
 294 0167 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 294      20726576 
 294      6973696F 
 294      6E203233 
 294      37373135 
 295 019a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 295      66756E63 
 295      74696F6E 
 295      2D736563 
 295      74696F6E 
 296              	.LASF13:
 297 01c2 73697A65 		.ascii	"sizetype\000"
 297      74797065 
 297      00
 298              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\alexport\AppData\Local\Temp\ccGK14BD.s 			page 11


